Strt2comb.2021 <- full_join(strt.stream.two.2021, QSummary.ST.2021.1)
STRT2.lm.2021 <- lm(Strt2comb.2021$MeasuredQ_Ls ~ Strt2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
Strt1comb.2021$pred.strt1.Q <- coef(STRT1.lm.2021)[2] * Strt1comb.2021$WaterLevel+ coef(STRT1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
Strt2comb.2021$pred.strt2.Q <- coef(STRT2.lm.2021)[2] * Strt2comb.2021$WaterLevel+ coef(STRT2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.strt2.Q), data = Strt2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("ADCP", "Wading Rod", "Salt Dilution")) +
xlab("") +
ylim(0, 2000) +
ylab("Discharge(L/s)")
strt.final.discharge.2021 <- full_join(Strt1comb.2021, Strt2comb.2021, by = "DateTime")
strt.final.discharge.2021$MeanDischarge <- rowMeans(strt.final.discharge.2021[,c ("pred.strt1.Q", 'pred.strt2.Q')], na.rm = TRUE) # taking the average of the two PTs
strt.final.discharge.2021 <- strt.final.discharge.2021[,-c(1:4,6:13,15:26)] # remove unnecesary columns
# Stuart1 (light blue) and Stuart2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021) +
geom_line(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.strt2.Q), data = Strt2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = strt.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 3000) +
ggtitle("STRT1(light) & STRT2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
strt.final.discharge.2021_final <- strt.final.discharge.2021[,-c(2:3)]
strt.final.discharge.2021_final$Site <- "STRT"
names(strt.final.discharge.2021_final) <- c("DateTime", "Q", "Site")
write.csv(strt.final.discharge.2021_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/STRT/STRT.Q.csv", row.names = FALSE)
Q_2021 <- rbind(moos.final.discharge.2021_final, frch.final.discharge.2021_final,
poke.final.discharge.2021_final, vaul.final.discharge.2021_final,
strt.final.discharge.2021_final)
Q_2021$day = format(as.POSIXct(Q_2021$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q_2021$day = as.POSIXct(Q_2021$day, "%Y-%m-%d", tz="America/Anchorage")
write_csv(Q_2021, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/Q_2021.csv", row.names = FALSE)
Q_2021 <- rbind(moos.final.discharge.2021_final, frch.final.discharge.2021_final,
poke.final.discharge.2021_final, vaul.final.discharge.2021_final,
strt.final.discharge.2021_final)
Q_2021$day = format(as.POSIXct(Q_2021$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q_2021$day = as.POSIXct(Q_2021$day, "%Y-%m-%d", tz="America/Anchorage")
write_csv(Q_2021, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/Q_2021.csv")
Q.daily.2021 = with(Q_2021, tapply(Q, list(day, Site), mean))
Q.daily.2021 = as.data.frame(Q.daily.2021)
write_csv(Q.daily.2021, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/Q.daily.2021.csv")
library(readr)
library(lubridate)
library(tidyr)
library(ggplot2)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(TZ='America/Anchorage')
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
library(rio)
library(neonUtilities)
library(raster)
library(data.table)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(imputeTS)
library(itsmr)
# Import processed Q data
moos.stream.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTng8WWrBVNB4uN7DHZuq1EfBn8tZ7qA71F7J-2izJUgeTU34LMbyXd_si8ezwscQ/pub?output=csv"
frch.stream.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vT2WNuEj8PTKLO6OkySK--koXwL6h_f3_WmctQTWkTlyB7boYmX1GmbT1HiVle6nA/pub?output=csv"
moos.stream <- read.csv(url(moos.stream.url), skip = 1)
frch.stream <- read.csv(url(frch.stream.url), skip = 1)
moos.stream <- moos.stream[,-c(3:4)] # Remove Na columns
frch.stream <- frch.stream[,-c(3:4)] # Remove Na columns
# Import summary notes from field book
discharge.2015 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQC9Bk0nS-Cx4Ec8MyLHd2xNuSv8JTobR8SSV_ODQHAvp4cUK8k3z9EmOs/pub?output=csv"
QSummary <- read.csv(url(discharge.2015))
# Import rain gauge data #
caribou.2015.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSolN8YGaUlUlcQjw9EaklcgcJu3b5L80X8Y-xX_ePg-CDOzZ07LDpl-aGBYvLwnvIhLB8Gm5Q66BWk/pub?output=csv"
caribou.2015.gauge <- read.csv(url(caribou.2015.url), skip = 4)
names(caribou.2015.gauge) <- c("DateTimeGMT", "Precip")
caribou.2015.gauge$DateTimeGMT[caribou.2015.gauge$DateTimeGMT == ""] <- NA
caribou.2015.gauge$DateTime = as.POSIXct(caribou.2015.gauge$DateTimeGMT, "%m/%d/%y %H:%M", tz="America/Anchorage")
# Rename columns #
names(moos.stream) <- c("Date", "AbsolutePressure")
names(frch.stream) <- c("Date", "AbsolutePressure")
#Convert time and put in AK time
moos.stream$DateTime <- mdy_hm(moos.stream$Date)
attributes(moos.stream$DateTime)$tzone <-'America/Anchorage'
frch.stream$DateTime <- mdy_hm(frch.stream$Date)
attributes(frch.stream$DateTime)$tzone <-'America/Anchorage'
QSummary$date <- mdy(QSummary$date)
QSummary$DateTime <- as.POSIXct(paste(QSummary$date, QSummary$time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
plot(caribou.2015.gauge$Precip~ caribou.2015.gauge$DateTime, type="h",
xlim = as.POSIXct(c("2015-05-14 04:05:00","2015-09-22 02:20:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(x = moos.stream$DateTime, y = moos.stream$AbsolutePressure, type = "l")
plot(x = moos.stream$DateTime, y = moos.stream$AbsolutePressure, type = "l")
moos.stream <- moos.stream %>% subset(moos.stream$DateTime < "2015-09-20 18:30:00") # PT was taken out on the 21st
#june to july
moos.stream.1 <- moos.stream %>% subset(moos.stream$DateTime < "2015-07-01 00:00:00" & moos.stream$DateTime > "2015-06-01 00:00:00")
plot(moos.stream.1$DateTime, moos.stream.1$AbsolutePressure, type = "l")
which(moos.stream.1$AbsolutePressure < 102)
moos.stream.1[c(4052, 5270:5277), 2] <- NA
#july to august
moos.stream.2 <- moos.stream %>% subset(moos.stream$DateTime < "2015-08-01 00:00:00" & moos.stream$DateTime > "2015-07-01 00:00:00")
plot(moos.stream.2$DateTime, moos.stream.2$AbsolutePressure, type = "l")
which(moos.stream.2$AbsolutePressure < 102)
moos.stream.2$AbsolutePressure[moos.stream.2$AbsolutePressure == "99.188"] <- NA
moos.stream.2[2047, 2] <- NA
#august to September
moos.stream.3 <- moos.stream %>% subset(moos.stream$DateTime < "2015-09-01 00:00:00" & moos.stream$DateTime > "2015-08-01 00:00:00")
plot(moos.stream.3$DateTime, moos.stream.3$AbsolutePressure, type = "l")
which(moos.stream.3$AbsolutePressure < 102)
moos.stream.3[c(2679,2680,2681,2683), 2] <- NA
#September to October
moos.stream.4 <- moos.stream %>% subset(moos.stream$DateTime < "2015-10-01 00:00:00" & moos.stream$DateTime > "2015-09-01 00:00:00")
plot(moos.stream.4$DateTime, moos.stream.4$AbsolutePressure, type = "l")
moos.stream[c(9187, 10405:10412, 15822, 25382:25384, 25386), 2] <- NA
plot(x = moos.stream$DateTime, y = moos.stream$AbsolutePressure, type = "l")
moos.stream <- na_kalman(moos.stream)
plot(x = moos.stream$DateTime, y = moos.stream$AbsolutePressure, type = "l")
write.csv(moos.stream, "~/Documents/DoD_Discharge/PT_data/2015/moos.pt.2015.csv", row.names = FALSE)
plot(caribou.2015.gauge$Precip~ caribou.2015.gauge$DateTime, type="h",
xlim = as.POSIXct(c("2015-05-14 04:05:00","2015-09-22 02:20:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(x = frch.stream$DateTime, y = frch.stream$AbsolutePressure, type = "l")
frch.stream <- frch.stream %>%  subset(frch.stream$DateTime < "2015-09-20 18:30:00") # PT was taken out on the 21st
#May to june
frch.stream.1 <- frch.stream %>% subset(frch.stream$DateTime < "2015-06-01 00:00:00" & frch.stream$DateTime > "2015-05-20 00:00:00")
plot(frch.stream.1$DateTime, frch.stream.1$AbsolutePressure, type = "l")
which(frch.stream.1$AbsolutePressure < 102)
frch.stream.1[c(1535, 2047:2060), 2] <- NA
#Juneto july
frch.stream.2 <- frch.stream %>% subset(frch.stream$DateTime < "2015-07-01 00:00:00" & frch.stream$DateTime > "2015-06-01 00:00:00")
plot(frch.stream.2$DateTime, frch.stream.2$AbsolutePressure, type = "l")
which(frch.stream.2$AbsolutePressure < 100)
frch.stream.2[c(49,2052,4111,5213:5241), 2] <- NA
#July to August # no cleaning necessary
frch.stream.3 <- frch.stream %>% subset(frch.stream$DateTime < "2015-08-01 00:00:00" & frch.stream$DateTime > "2015-07-01 00:00:00")
plot(frch.stream.3$DateTime, frch.stream.3$AbsolutePressure, type = "l")
#August to September
frch.stream.4 <- frch.stream %>% subset(frch.stream$DateTime < "2015-09-01 00:00:00" & frch.stream$DateTime > "2015-08-01 00:00:00")
plot(frch.stream.4$DateTime, frch.stream.4$AbsolutePressure, type = "l")
which(frch.stream.4$AbsolutePressure < 100)
frch.stream.4[c(2641:2656, 4631:4654), 2] <- NA
#September to October # no cleaning necessary
frch.stream.5 <- frch.stream %>% subset(frch.stream$DateTime < "2015-10-01 00:00:00" & frch.stream$DateTime > "2015-09-01 00:00:00")
plot(frch.stream.5$DateTime, frch.stream.5$AbsolutePressure, type = "l")
frch.stream[c(3215,3727:3740,5185,7188,9247,10349:10377,25340:25355,27328:27353), 2] <- NA
plot(x = frch.stream$DateTime, y = frch.stream$AbsolutePressure, type = "l")
frch.stream <- na_kalman(frch.stream)
plot(caribou.2015.gauge$Precip~ caribou.2015.gauge$DateTime, type="h",
xlim = as.POSIXct(c("2015-05-14 04:05:00","2015-09-22 02:20:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(x = frch.stream$DateTime, y = frch.stream$AbsolutePressure, type = "l")
write.csv(frch.stream, "~/Documents/DoD_Discharge/PT_data/2015/frch.pt.2015.csv", row.names = FALSE)
# ALL Sites #
all <- ggplot(QSummary) +
geom_point(aes(x=date, y=Q..L.s., color=site), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
all
a <- QSummary %>% filter(site == "Moose") %>%
ggplot() +
geom_point(aes(x=date, y=Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose")
a
b <- QSummary %>% filter(site == "French") %>%
ggplot() +
geom_point(aes(x=date, y=Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose")
b
plot_grid(all, NA,
a, b,
nrow = 2, ncol = 2)
QSummary.MO <- QSummary %>% filter(site =="Moose")
# Rating curve for MOOS PT1 #
moos.stream$site <- "Moose"
Moose1comb <- full_join(moos.stream, QSummary.MO)
MOOS1.lm <- lm(Moose1comb$Q..L.s. ~ Moose1comb$AbsolutePressure)
moos.formula <- y ~ x
mrc.1 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = Moose1comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose1 all measured Q")
mrc.1
QSummary.MO <- QSummary %>% filter(site =="Moose")
QSummary.MO <- QSummary.MO %>% filter(Q..L.s. < 2500)
# Rating curve for MOOS PT1 #
moos.stream$site <- "Moose"
Moose2comb <- full_join(moos.stream, QSummary.MO)
MOOS2.lm <- lm(Moose2comb$Q..L.s. ~ Moose2comb$AbsolutePressure)
moos.formula <- y ~ x
mrc.2 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = Moose2comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose1 all measured Q")
mrc.2
QSummary.MO <- QSummary.MO %>% filter(Q..L.s. < 1300)
# Rating curve for MOOS PT1 #
moos.stream$site <- "Moose"
Moose3comb <- full_join(moos.stream, QSummary.MO)
MOOS3.lm <- lm(Moose3comb$Q..L.s. ~ Moose3comb$AbsolutePressure)
moos.formula <- y ~ x
mrc.3 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = Moose3comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose1 all measured Q")
mrc.3
plot_grid(mrc.1, mrc.2,
mrc.3, NA,
ncol = 2, nrow = 2)
Moose1comb$pred.moos1.Q <- coef(MOOS1.lm)[2] * Moose1comb$AbsolutePressure+ coef(MOOS1.lm)[1]
ggplot(aes(x = DateTime, y = pred.moos1.Q), data = Moose1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
Moose1comb$pred.moos2.Q <- coef(MOOS2.lm)[2] * Moose1comb$AbsolutePressure+ coef(MOOS2.lm)[1]
ggplot(aes(x = DateTime, y = pred.moos2.Q), data = Moose1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
Moose1comb$pred.moos3.Q <- coef(MOOS3.lm)[2] * Moose1comb$AbsolutePressure+ coef(MOOS3.lm)[1]
ggplot(aes(x = DateTime, y = pred.moos3.Q), data = Moose1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
ggplot(aes(x=DateTime, y=pred.moos1.Q), data=Moose1comb) +
geom_line(aes(x=DateTime, y=pred.moos1.Q), data=Moose1comb, color="#A6CEE3", size=1.25) +
geom_line(aes(x=DateTime, y=pred.moos2.Q), data=Moose1comb,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x=DateTime, y=pred.moos3.Q), data=Moose1comb,color="brown", size=1.25, alpha = 0.75) +
geom_point(aes(x=DateTime, y=Q..L.s.), size=2) +
theme_classic() +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
scale_y_continuous(name="Predicted discharge L/s") +
scale_x_datetime(name = "Time")
Moose1comb_final <- Moose1comb[,-c(1,2,5:15)]
names(Moose1comb_final) <- c("DateTime", "Site", "Q")
Moose1comb_final$Site <- "MOOS"
write.csv(Moose1comb_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2015/MOOS/MOOS.Q.csv", row.names = FALSE)
QSummary.FR <- QSummary %>% filter(site =="French")
### Rating curve for FRCH PT1 ###
frch.stream$site <- "French" # Add a column identifier
French1comb <- full_join(frch.stream, QSummary.FR) # Join PT data with Discharge
French1.lm <- lm(French1comb$Q..L.s. ~ French1comb$AbsolutePressure) # linear model with discharge and water level
frch.formula <- y ~ x
frc.1 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = French1comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.1
QSummary.FR <- QSummary %>% filter(site =="French")
QSummary.FR <- QSummary.FR %>% filter(Q..L.s. < 2500)
### Rating curve for FRCH PT1 ###
frch.stream$site <- "French" # Add a column identifier
French2comb <- full_join(frch.stream, QSummary.FR) # Join PT data with Discharge
French2.lm <- lm(French2comb$Q..L.s. ~ French2comb$AbsolutePressure) # linear model with discharge and water level
frch.formula <- y ~ x
frc.2 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = French2comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.2
French1comb$pred.french1.Q <- coef(French1.lm)[2] * French1comb$AbsolutePressure+ coef(French1.lm)[1]
ggplot(aes(x = DateTime, y = pred.french1.Q), data=French1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("French1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
French1comb_final <- French1comb[,-c(1,2,5:13)]
names(French1comb_final) <- c("DateTime", "Site", "Q")
French1comb_final$Site <- "FRCH"
write.csv(French1comb_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2015/FRCH/FRCH.Q.csv", row.names = FALSE)
final_discharge_2015 <- rbind(Moose1comb_final, French1comb_final)
Q_2015 <- final_discharge_2015
Q_2015$day = format(as.POSIXct(Q_2015$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q_2015$day = as.POSIXct(Q_2015$day, "%Y-%m-%d", tz="America/Anchorage")
#Q_2015$DateTime = NULL
write_csv(Q_2015, "~/Documents/DoD_Discharge/Predicted_Discharge/2015/Q_2015.csv")
Q.daily.2015 = with(Q_2015, tapply(Q, list(day, Site), mean))
Q.daily.2015 = as.data.frame(Q.daily.2015)
write_csv(Q.daily.2015, "~/Documents/DoD_Discharge/Predicted_Discharge/2015/Q.daily.2015.csv")
# Import processed Q data
# Import Data #
French1.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQeBCz7Rq59AjhTnjeJH_H9ot8gtiujyv9-W7KOAKYacPFizjOp4KqxGbhMWmsT756KEGzBYQjeRpgz/pub?output=csv"
French2.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRCm-lCZI01xF1g4ytFCMECZJoUhjjEd11_cQTLDGzyv_4GHeLVEwX5alAVyO8hiDLzJOwWVYQui7E_/pub?output=csv"
Moose1.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTAzlkTb2-hfKPTXP1ZWp1vYCqK1irV4Gy2UMcjF7HSDdUq1WZCRNBfJs07VDrB7dGeHgIalOzrsKPG/pub?output=csv"
Moose2.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTGobrtIaYMa8-jDTYvO2s9OBsnQyksLPLRXPycD0pLi3_Asd786dK0XGnYowobM0p7NLZM5qpxmk9S/pub?output=csv"
# read in data #
French1 <- read.csv(url(French1.url))
French2 <- read.csv(url(French2.url))
Moose1 <- read.csv(url(Moose1.url))
Moose2 <- read.csv(url(Moose2.url))
# Convert time and put in AK time
French1$DateTime <- mdy_hm(French1$DateTimeGMT, tz="GMT") #convert date format.
attributes(French1$DateTime)$tzone <-'America/Anchorage'
French2$DateTime <- mdy_hm(French2$DateTimeGMT, tz="GMT") #convert date format.
attributes(French2$DateTime)$tzone <-'America/Anchorage'
Moose1$DateTime <- mdy_hm(Moose1$DateTimeGMT, tz="GMT") #convert date format.
attributes(Moose1$DateTime)$tzone <-'America/Anchorage'
Moose2$DateTime <- mdy_hm(Moose2$DateTimeGMT, tz="GMT") #convert date format.
attributes(Moose2$DateTime)$tzone <-'America/Anchorage'
# format data, combine all french, combine all moose, combine french and moose
French2 <- French2[1:nrow(French1),] # French 2 has a few extra rows on it from when stopping logger. Stripping them.
French1$name <- "French1" #add column identifier
French2$name <- "French2"
allfrench <- bind_rows(French1, French2) # combine 1&2 into one dataframe French
Moose1$name <- "Moose1" #add column indentifier
Moose2$name <- "Moose2"
allmoose <- bind_rows(Moose1, Moose2) # combine 1&2 into one dataframe Moose
frenchmoose <- bind_rows(allfrench, allmoose) # combine all french and all moose
# Load in Q summary
Qsummary.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vT0R955lmRu0iaZFc-CxoVhwApmJuWaiHCYxhqICnY4oFH1sDI-VhRESmLFeuss01SYz0krWRktJ3oF/pub?output=csv"
Qsummary <- read.csv(url(Qsummary.url))
Qsummary$Date <- mdy(Qsummary$Date)
Qsummary$DateTime <- as.POSIXct(paste(Qsummary$Date, Qsummary$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
Qsummary$DateTime <- lubridate::round_date(Qsummary$DateTime, "15 minutes")
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
plot(x= Moose1$WaterLevelmeters[100:nrow(Moose1)-15], y=Moose2$WaterLevelmeters[100:nrow(Moose2)-15],
main = "Moose PT comparison", xlab = "Moose1 PT", ylab = "Moose2 PT")
allfrench %>%
filter(WaterLevelmeters > 184) %>%
ggplot() +
geom_line(aes(x=DateTime, y=WaterLevelmeters, color=name), size=1.25) +
theme_classic() +
ggtitle("French") +
scale_color_brewer(palette = "Paired")
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
French1[c(1:47), 3] <- NA
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
write.csv(French1, "~/Documents/DoD_Discharge/PT_data/2018/frch.pt.2018.csv", row.names = FALSE)
ggplot(data = allmoose, aes(x = DateTime, y = WaterLevelmeters, color = name))+
geom_line()
Moose1[c(1:38, 7191:7199), 3] <- NA
plot(Moose1$DateTime, Moose1$WaterLevelmeters, type = "l")
# removing the noise on the receding limb of the storm in september
Moose1.pre <- Moose1[-c(4639:7202), ] # clipping off the pre storm part
moos.stream.3 <- Moose2 %>% subset(Moose2$DateTime < "2018-09-08 00:00:00" & DateTime > "2018-09-02 21:30:00") # finding the receding limb in the PT2 dataset
Moose1.pre.middle <- rbind(Moose1.pre, moos.stream.3) # jpining the pre and new receding limb
Moose1.post <- Moose1[-c(1:4882), ] # clipping off through the storm
Moose1.pre.middle.post <- rbind(Moose1.pre.middle, Moose1.post) # joining the new dataframe
# cleaning vertical drop in the middle of september
Moose1.pre.middle.post[c(5642:5662), 3] <- NA
plot(Moose1.pre.middle.post$DateTime, Moose1.pre.middle.post$WaterLevelmeters, type = "l")
Moose1.pre.middle.post <- na_kalman(Moose1.pre.middle.post)
plot(Moose1.pre.middle.post$DateTime, Moose1.pre.middle.post$WaterLevelmeters, type = "l")
write.csv(Moose1.pre.middle.post, "~/Documents/DoD_Discharge/PT_data/2018/moos.pt.2018.csv", row.names = FALSE)
ggplot(Qsummary) +
geom_point(aes(x=Date, y=MeasuredQ_Ls, color=Site, shape=Method), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1")
a <- Qsummary %>% filter(Site == "Moose") %>%
ggplot() +
geom_point(aes(x=Date, y=MeasuredQ_Ls, color=Method), size=3) +
theme_classic() +
ggtitle("Moose")
b <- Qsummary %>% filter(Site == "French") %>%
ggplot() +
geom_point(aes(x=Date, y=MeasuredQ_Ls, color=Method), size=3) +
theme_classic() +
ggtitle("French")
grid.arrange(a,b, ncol=2)
Qsummary.MO <- Qsummary  %>%
filter(Site == "Moose")
moose1comb <- full_join(Moose1.pre.middle.post, Qsummary.MO)
ggplot(aes(x=WaterLevelmeters, y=MeasuredQ_Ls), data=moose1comb) +
geom_point(aes( color=Method), size=3) +
geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(limits = c(166.2,167)) +
theme_classic() +
ggtitle("Moose1 all measured Q")
Moose1.lm <- lm(moose1comb$MeasuredQ_Ls ~ moose1comb$WaterLevelmeters)
summary(Moose1.lm)
Qsummary.MO <- Qsummary  %>%
filter(Site == "Moose")
Qsummary.MO.1 <- Qsummary.MO[-c(9:10), ] # removing HOBO points
moose2comb <- full_join(Moose1.pre.middle.post, Qsummary.MO.1)
ggplot(aes(x=WaterLevelmeters, y=MeasuredQ_Ls), data=moose2comb) +
geom_point(aes( color=Method), size=3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
scale_x_continuous(limits = c(166.2,167)) +
theme_classic() +
ggtitle("Moose1 all measured Q")
Moose2.lm <- lm(moose2comb$MeasuredQ_Ls ~ moose2comb$WaterLevelmeters)
summary(Moose2.lm)
moose2comb$pred.moose1.Q <- coef(Moose2.lm)[2] * moose2comb$WaterLevelmeters + coef(Moose2.lm)[1]
ggplot(aes(x=DateTime, y=pred.moose1.Q), data=moose2comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls, shape=Method), size=2) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
scale_y_continuous(name = "Predicted Discharge L/s") +
scale_x_datetime(name = "Time")
moose2comb_final <- moose2comb[,-c(1:3,5,7:13)]
names(moose2comb_final) <- c("DateTime", "Site", "Q")
moose2comb_final$Site <- "MOOS"
write.csv(moose2comb_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2018/MOOS/MOOS.Q.csv", row.names = FALSE)
Qsummary.FR <- Qsummary  %>% #filter out measured Q at just french
filter(Site == "French")
French1comb <- full_join(French1, Qsummary.FR)
ggplot(aes(x=WaterLevelmeters, y=MeasuredQ_Ls), data=French1comb) +
geom_point(aes( color=Method), size=3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
scale_x_continuous(limits = c(184.2,184.9)) +
theme_classic() +
ggtitle("French1 all measured Q")
French1.lm <- lm(French1comb$MeasuredQ_Ls ~ French1comb$WaterLevelmeters)
summary(French1.lm)
Qsummary.FR.1 <- Qsummary.FR[-c(8:9), ] # removing the HOBOWare points
French2comb <- full_join(French1, Qsummary.FR.1)
ggplot(aes(x=WaterLevelmeters, y=MeasuredQ_Ls), data=French2comb) +
geom_point(aes( color=Method), size=3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
scale_x_continuous(limits = c(184.2,184.9)) +
theme_classic() +
ggtitle("French1 all measured Q")
French2.lm <- lm(French2comb$MeasuredQ_Ls ~ French2comb$WaterLevelmeters)
summary(French1.lm)
French2comb$pred.french1.Q <- coef(French2.lm)[2] * French2comb$WaterLevelmeters + coef(French2.lm)[1]
ggplot(aes(x=DateTime, y=pred.french1.Q), data=French2comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls, shape=Method), size=3) +
theme_classic() +
ggtitle("French1 predicted all measured Q") +
scale_y_continuous(name = "Discharge L/s") +
scale_x_datetime(name = "Time")
French2comb_final <- French2comb[,-c(1:3,5,7:13)]
names(French2comb_final) <- c("DateTime", "Site", "Q")
French2comb_final$Site <- "FRCH"
write.csv(French2comb_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2018/FRCH/FRCH.Q.csv", row.names = FALSE)
final_discharge_2018 <- rbind(moose2comb_final, French2comb_final)
Q_2018 <- final_discharge_2018
Q_2018$day = format(as.POSIXct(Q_2018$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q_2018$day = as.POSIXct(Q_2018$day, "%Y-%m-%d", tz="America/Anchorage")
#Q_2015$DateTime = NULL
write_csv(Q_2018, "~/Documents/DoD_Discharge/Predicted_Discharge/2018/Q_2018.csv")
Q.daily.2018 = with(Q_2018, tapply(Q, list(day, Site), mean))
Q.daily.2018 = as.data.frame(Q.daily.2018)
write_csv(Q.daily.2018, "~/Documents/DoD_Discharge/Predicted_Discharge/2018/Q.daily.2018.csv")
