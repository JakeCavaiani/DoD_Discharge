stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.1
QSummary.FR <- QSummary %>% filter(site =="French")
QSummary.FR <- QSummary.FR %>% filter(Q..L.s. < 2500)
### Rating curve for FRCH PT1 ###
frch.stream$site <- "French" # Add a column identifier
French2comb <- full_join(frch.stream, QSummary.FR) # Join PT data with Discharge
French2.lm <- lm(French2comb$Q..L.s. ~ French2comb$AbsolutePressure) # linear model with discharge and water level
frch.formula <- y ~ x
frc.2 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = French2comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.2
French1comb$pred.french1.Q <- coef(French1.lm)[2] * French1comb$AbsolutePressure+ coef(French1.lm)[1]
ggplot(aes(x = DateTime, y = pred.french1.Q), data=French1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("French1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
French1comb_final <- French1comb[,-c(1,2,5:13)]
names(French1comb_final) <- c("DateTime", "Site", "Q")
French1comb_final$Site <- "FRCH"
write.csv(French1comb_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2015/FRCH/FRCH.Q.csv", row.names = FALSE)
final_discharge_2015 <- rbind(Moose1comb_final, French1comb_final)
Q_2015 <- final_discharge_2015
Q_2015$day = format(as.POSIXct(Q_2015$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q_2015$day = as.POSIXct(Q_2015$day, "%Y-%m-%d", tz="America/Anchorage")
#Q_2015$DateTime = NULL
write_csv(Q_2015, "~/Documents/DoD_Discharge/Predicted_Discharge/2015/Q_2015.csv")
Q.daily.2015 = with(Q_2015, tapply(Q, list(day, Site), mean))
Q.daily.2015 = as.data.frame(Q.daily.2015)
write_csv(Q.daily.2015, "~/Documents/DoD_Discharge/Predicted_Discharge/2015/Q.daily.2015.csv")
# Import processed Q data
# Import Data #
French1.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQeBCz7Rq59AjhTnjeJH_H9ot8gtiujyv9-W7KOAKYacPFizjOp4KqxGbhMWmsT756KEGzBYQjeRpgz/pub?output=csv"
French2.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRCm-lCZI01xF1g4ytFCMECZJoUhjjEd11_cQTLDGzyv_4GHeLVEwX5alAVyO8hiDLzJOwWVYQui7E_/pub?output=csv"
Moose1.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTAzlkTb2-hfKPTXP1ZWp1vYCqK1irV4Gy2UMcjF7HSDdUq1WZCRNBfJs07VDrB7dGeHgIalOzrsKPG/pub?output=csv"
Moose2.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTGobrtIaYMa8-jDTYvO2s9OBsnQyksLPLRXPycD0pLi3_Asd786dK0XGnYowobM0p7NLZM5qpxmk9S/pub?output=csv"
# read in data #
French1 <- read.csv(url(French1.url))
French2 <- read.csv(url(French2.url))
Moose1 <- read.csv(url(Moose1.url))
Moose2 <- read.csv(url(Moose2.url))
# Convert time and put in AK time
French1$DateTime <- mdy_hm(French1$DateTimeGMT, tz="GMT") #convert date format.
attributes(French1$DateTime)$tzone <-'America/Anchorage'
French2$DateTime <- mdy_hm(French2$DateTimeGMT, tz="GMT") #convert date format.
attributes(French2$DateTime)$tzone <-'America/Anchorage'
Moose1$DateTime <- mdy_hm(Moose1$DateTimeGMT, tz="GMT") #convert date format.
attributes(Moose1$DateTime)$tzone <-'America/Anchorage'
Moose2$DateTime <- mdy_hm(Moose2$DateTimeGMT, tz="GMT") #convert date format.
attributes(Moose2$DateTime)$tzone <-'America/Anchorage'
# format data, combine all french, combine all moose, combine french and moose
French2 <- French2[1:nrow(French1),] # French 2 has a few extra rows on it from when stopping logger. Stripping them.
French1$name <- "French1" #add column identifier
French2$name <- "French2"
allfrench <- bind_rows(French1, French2) # combine 1&2 into one dataframe French
Moose1$name <- "Moose1" #add column indentifier
Moose2$name <- "Moose2"
allmoose <- bind_rows(Moose1, Moose2) # combine 1&2 into one dataframe Moose
frenchmoose <- bind_rows(allfrench, allmoose) # combine all french and all moose
# Load in Q summary
Qsummary.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vT0R955lmRu0iaZFc-CxoVhwApmJuWaiHCYxhqICnY4oFH1sDI-VhRESmLFeuss01SYz0krWRktJ3oF/pub?output=csv"
Qsummary <- read.csv(url(Qsummary.url))
Qsummary$Date <- mdy(Qsummary$Date)
Qsummary$DateTime <- as.POSIXct(paste(Qsummary$Date, Qsummary$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
Qsummary$DateTime <- lubridate::round_date(Qsummary$DateTime, "15 minutes")
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
plot(x= Moose1$WaterLevelmeters[100:nrow(Moose1)-15], y=Moose2$WaterLevelmeters[100:nrow(Moose2)-15],
main = "Moose PT comparison", xlab = "Moose1 PT", ylab = "Moose2 PT")
allfrench %>%
filter(WaterLevelmeters > 184) %>%
ggplot() +
geom_line(aes(x=DateTime, y=WaterLevelmeters, color=name), size=1.25) +
theme_classic() +
ggtitle("French") +
scale_color_brewer(palette = "Paired")
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
French1[c(1:47), 3] <- NA
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
write.csv(French1, "~/Documents/DoD_Discharge/PT_data/2018/frch.pt.2018.csv", row.names = FALSE)
ggplot(data = allmoose, aes(x = DateTime, y = WaterLevelmeters, color = name))+
geom_line()
Moose1[c(1:38, 7191:7199), 3] <- NA
plot(Moose1$DateTime, Moose1$WaterLevelmeters, type = "l")
# removing the noise on the receding limb of the storm in september
Moose1.pre <- Moose1[-c(4639:7202), ] # clipping off the pre storm part
moos.stream.3 <- Moose2 %>% subset(Moose2$DateTime < "2018-09-08 00:00:00" & DateTime > "2018-09-02 21:30:00") # finding the receding limb in the PT2 dataset
Moose1.pre.middle <- rbind(Moose1.pre, moos.stream.3) # jpining the pre and new receding limb
Moose1.post <- Moose1[-c(1:4882), ] # clipping off through the storm
Moose1.pre.middle.post <- rbind(Moose1.pre.middle, Moose1.post) # joining the new dataframe
# cleaning vertical drop in the middle of september
Moose1.pre.middle.post[c(5642:5662), 3] <- NA
plot(Moose1.pre.middle.post$DateTime, Moose1.pre.middle.post$WaterLevelmeters, type = "l")
Moose1.pre.middle.post <- na_kalman(Moose1.pre.middle.post)
plot(Moose1.pre.middle.post$DateTime, Moose1.pre.middle.post$WaterLevelmeters, type = "l")
write.csv(Moose1.pre.middle.post, "~/Documents/DoD_Discharge/PT_data/2018/moos.pt.2018.csv", row.names = FALSE)
ggplot(Qsummary) +
geom_point(aes(x=Date, y=MeasuredQ_Ls, color=Site, shape=Method), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1")
a <- Qsummary %>% filter(Site == "Moose") %>%
ggplot() +
geom_point(aes(x=Date, y=MeasuredQ_Ls, color=Method), size=3) +
theme_classic() +
ggtitle("Moose")
b <- Qsummary %>% filter(Site == "French") %>%
ggplot() +
geom_point(aes(x=Date, y=MeasuredQ_Ls, color=Method), size=3) +
theme_classic() +
ggtitle("French")
grid.arrange(a,b, ncol=2)
Qsummary.MO <- Qsummary  %>%
filter(Site == "Moose")
moose1comb <- full_join(Moose1.pre.middle.post, Qsummary.MO)
ggplot(aes(x=WaterLevelmeters, y=MeasuredQ_Ls), data=moose1comb) +
geom_point(aes( color=Method), size=3) +
geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(limits = c(166.2,167)) +
theme_classic() +
ggtitle("Moose1 all measured Q")
Moose1.lm <- lm(moose1comb$MeasuredQ_Ls ~ moose1comb$WaterLevelmeters)
summary(Moose1.lm)
Qsummary.MO <- Qsummary  %>%
filter(Site == "Moose")
Qsummary.MO.1 <- Qsummary.MO[-c(9:10), ] # removing HOBO points
moose2comb <- full_join(Moose1.pre.middle.post, Qsummary.MO.1)
ggplot(aes(x=WaterLevelmeters, y=MeasuredQ_Ls), data=moose2comb) +
geom_point(aes( color=Method), size=3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
scale_x_continuous(limits = c(166.2,167)) +
theme_classic() +
ggtitle("Moose1 all measured Q")
Moose2.lm <- lm(moose2comb$MeasuredQ_Ls ~ moose2comb$WaterLevelmeters)
summary(Moose2.lm)
moose2comb$pred.moose1.Q <- coef(Moose2.lm)[2] * moose2comb$WaterLevelmeters + coef(Moose2.lm)[1]
ggplot(aes(x=DateTime, y=pred.moose1.Q), data=moose2comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls, shape=Method), size=2) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
scale_y_continuous(name = "Predicted Discharge L/s") +
scale_x_datetime(name = "Time")
moose2comb_final <- moose2comb[,-c(1:3,5,7:13)]
names(moose2comb_final) <- c("DateTime", "Site", "Q")
moose2comb_final$Site <- "MOOS"
write.csv(moose2comb_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2018/MOOS/MOOS.Q.csv", row.names = FALSE)
Qsummary.FR <- Qsummary  %>% #filter out measured Q at just french
filter(Site == "French")
French1comb <- full_join(French1, Qsummary.FR)
ggplot(aes(x=WaterLevelmeters, y=MeasuredQ_Ls), data=French1comb) +
geom_point(aes( color=Method), size=3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
scale_x_continuous(limits = c(184.2,184.9)) +
theme_classic() +
ggtitle("French1 all measured Q")
French1.lm <- lm(French1comb$MeasuredQ_Ls ~ French1comb$WaterLevelmeters)
summary(French1.lm)
Qsummary.FR.1 <- Qsummary.FR[-c(8:9), ] # removing the HOBOWare points
French2comb <- full_join(French1, Qsummary.FR.1)
ggplot(aes(x=WaterLevelmeters, y=MeasuredQ_Ls), data=French2comb) +
geom_point(aes( color=Method), size=3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
scale_x_continuous(limits = c(184.2,184.9)) +
theme_classic() +
ggtitle("French1 all measured Q")
French2.lm <- lm(French2comb$MeasuredQ_Ls ~ French2comb$WaterLevelmeters)
summary(French1.lm)
French2comb$pred.french1.Q <- coef(French2.lm)[2] * French2comb$WaterLevelmeters + coef(French2.lm)[1]
ggplot(aes(x=DateTime, y=pred.french1.Q), data=French2comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls, shape=Method), size=3) +
theme_classic() +
ggtitle("French1 predicted all measured Q") +
scale_y_continuous(name = "Discharge L/s") +
scale_x_datetime(name = "Time")
French2comb_final <- French2comb[,-c(1:3,5,7:13)]
names(French2comb_final) <- c("DateTime", "Site", "Q")
French2comb_final$Site <- "FRCH"
write.csv(French2comb_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2018/FRCH/FRCH.Q.csv", row.names = FALSE)
final_discharge_2018 <- rbind(moose2comb_final, French2comb_final)
Q_2018 <- final_discharge_2018
Q_2018$day = format(as.POSIXct(Q_2018$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q_2018$day = as.POSIXct(Q_2018$day, "%Y-%m-%d", tz="America/Anchorage")
#Q_2015$DateTime = NULL
write_csv(Q_2018, "~/Documents/DoD_Discharge/Predicted_Discharge/2018/Q_2018.csv")
Q.daily.2018 = with(Q_2018, tapply(Q, list(day, Site), mean))
Q.daily.2018 = as.data.frame(Q.daily.2018)
write_csv(Q.daily.2018, "~/Documents/DoD_Discharge/Predicted_Discharge/2018/Q.daily.2018.csv")
library(tidyverse)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(readr)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
########################################## 2022 ####
# Import data from google drive #
discharge.2022 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQR6HHHDpnxc6DmNHfdNLR9-dgDHR5Imt0Ve4_t2DzIF18_8D3O2da5zcWQzJUSoFQfaetPZDeXZ610/pub?gid=0&single=true&output=csv"
QSummary.2022 <- read.csv(url(discharge.2022))
names(QSummary.2022)
str(QSummary.2022)
QSummary.2022$Date <- mdy(QSummary.2020$Date)
QSummary.2022$Date <- mdy(QSummary.2022$Date)
head(QSummary.2022)
str(QSummary.2022)
QSummary.2022$DateTime <- as.POSIXct(paste(QSummary.2022$Date, QSummary.2022$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
View(QSummary.2022)
QSummary.2022$DateTime <- lubridate::round_date(QSummary.2022$DateTime, "15 minutes")
### ALL Sites ###
ggplot(QSummary.2022) +
geom_point(aes(x=Date, y=MeasuredQ_Ls, color=Site, shape=Method), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
### ALL Sites ###
ggplot(QSummary.2022) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls, color=Site, shape=Method), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
### ALL Sites ###
ggplot(QSummary.2022) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls, color=Site, shape=Method), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES") +
theme_light()
### Filter Poker ###
QSummary.PO.2022 <- QSummary.2022 %>% filter(Site =="POKE")
# Load in water pressure data
moos.atmo.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ7QMNWjVX1R43qflIW7lVqkj7wRHouhgQhWK76kfR8zK-UZg9bFSm92ccPy8T0luhFHKwsLNQQjA56/pub?output=csv"
moos.atmo.22 <- read.csv(url(moos.atmo.2022.url), skip = 1)
View(moos.atmo.22)
moos.stream.two.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRBpyHQqVDqrUTjTvYXM4RhAEoeG0lRV7fB2mHHGa55Xa__nHrjKCRX_GAIyoIatgWfOwNlmjN-hzzb/pub?output=csv"
moos.stream.two.2022 <- read.csv(url(moos.stream.two.2022.url), skip = 1)
### Filter MOOS ###
QSummary.MO.2022 <- QSummary.2022 %>% filter(Site =="MOOS")
names(moos.atmo.22)
moos.atmo.2022 <- read.csv(url(moos.atmo.2022.url), skip = 1)
moos.atmo.2022 <- moos.atmo.2022[, -c(1,5:11)]
names(moos.atmo.2022)
rm(moos.atmo.2022)
moos.atmo.2022 <- moos.atmo.2022[, -c(5:11)] # removing columns that arent date/abs pressure and temp
moos.atmo.2022 <- read.csv(url(moos.atmo.2022.url), skip = 1)
moos.atmo.2022 <- moos.atmo.2022[, -c(5:11)] # removing columns that arent date/abs pressure and temp
names(moos.atmo.2022) <- c("Site", "DateTimeGMT", "AbsolutePressure", "TempC")
names(moos.stream.two.2022)
moos.stream.two.2022 <- moos.stream.two.2022[, -c(5:12)] # removing columns that arent date/abs pressure and temp
names(moos.stream.two.2022) <- c("Site", "DateTimeGMT", "AbsolutePressure", "TempC")
# join the two atmospheric and water pressure together
MOOS.2022 <- full_join(moos.atmo.2022, moos.stream.two.2022)
View(MOOS.2022)
# join the two atmospheric and water pressure together
MOOS.2022 <- left_join(moos.atmo.2022, moos.stream.two.2022)
View(MOOS.2022)
names(moos.atmo.2022) <- c("Site", "DateTimeGMT", "AirPressure", "TempC")
names(moos.stream.two.2022) <- c("Site", "DateTimeGMT", "WaterPressure", "TempC")
# join the two atmospheric and water pressure together
MOOS.2022 <- full_join(moos.atmo.2022, moos.stream.two.2022)
?cbind
nrow(moos.atmo.2022)
nrow(moos.stream.two.2022)
range(moos.atmo.2022$DateTimeGMT)
# join the two atmospheric and water pressure together
MOOS.2022 <- left_join(moos.atmo.2022, moos.stream.two.2022)
range(moos.stream.two.2022)
range(moos.stream.two.2022$DateTimeGMT)
# join the two atmospheric and water pressure together
MOOS.2022 <- left_join(moos.atmo.2022, moos.stream.two.2022, by = "DateTimeGMT")
# Water pressure - atmospheric pressure
MOOS.2022$difference <- MOOS.2022$WaterPressure - MOOS.2022$AirPressure
### Filter MOOS ###
QSummary.MO.2022 <- QSummary.2022 %>% filter(Site =="MOOS")
Moose1comb.2022 <- full_join(MOOS.2022, QSummary.MO.2022)
names(QSummary.MO.2022)
########################################### 2021 ##############################################################
QSummary.2021 <- read_csv("~/Desktop/Q_Summary_2021.csv")
discharge.2020 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTPrFKu3yyEDEDkxPVJW2vIWznwmSUcwuNlHInDmrD4EjOQYAkHmtnWJXRT1toDa74ptmHj4O1My3xw/pub?output=csv"
QSummary.2020 <- read.csv(url(discharge.2020))
QSummary.2020 <-  subset(QSummary.2020, select = -c(X2019, Notes, Average, X, Observations, X.1, X2020, average.as.of.8.29., X.2, observations.as.of.8.29.)) # Cleaning columns that are not important to the dataset
QSummary.2020$date <- mdy(QSummary.2020$Date)
QSummary.2020$DateTime <- as.POSIXct(paste(QSummary.2020$date, QSummary.2020$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
### ALL Sites ###
ggplot(QSummary.2020) +
geom_point(aes(x=Date, y=MeasuredQ_Ls, color=Site, shape=Method), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
# Filter French #
QSummary.FR.2020 <- QSummary.2020 %>% filter(Site =="FRCH")
### Rating curve for FRCH PT1 ###
frch.stream.one.2020$Site <- "FRCH"
French1comb.2020 <- full_join(frch.stream.one.2020, QSummary.FR.2020) # Join PT data with Discharge
MOOS.2022$DateTime <- mdy_hms(MOOS.2022$DateTimeGMT, tz = "GMT")
attributes(MOOS.2022$DateTime)$tzone <- 'America/Anchorage'
Moose1comb.2022 <- full_join(MOOS.2022, QSummary.MO.2022)
View(Moose1comb.2022)
MOOS1.lm.2022 <- lm(Moose1comb.2022$MeasuredQ_Ls ~ Moose1comb.2022$difference)
moos.formula <- y ~ x
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Moose1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Moos1 all measured Q")
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Moose1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Moos1 all measured Q")
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Moose1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Moos1 all measured Q")
MOOS1.lm.2022 <- lm(Moose1comb.2022$MeasuredQ_Ls ~ Moose1comb.2022$WaterPressure)
ggplot(aes(x = WaterPressure, y = MeasuredQ_Ls), data = Moose1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Moos1 all measured Q")
### Filter POKE ###
QSummary.PO.2022 <- QSummary.2022 %>% filter(Site =="POKE")
### POKE ####
poke.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSIx8D5P_93-MADOTtYZ75oAXQp_KJWk7es6sG9x_ytpNSXX7dSkGEUds5UvPUwpAucNyih3jCmzwRM/pub?output=csv"
poke.stream.two.2022 <- read.csv(url(poke.stream.two.2022.url), skip = 1)
### POKE ####
poke.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSIx8D5P_93-MADOTtYZ75oAXQp_KJWk7es6sG9x_ytpNSXX7dSkGEUds5UvPUwpAucNyih3jCmzwRM/pub?output=csv"
poke.stream.one.2022 <- read.csv(url(poke.stream.one.2022.url), skip = 1)
names
names(poke.stream.one.2022)
poke.stream.one.2022 <- poke.stream.one.2022[, -c(5:13)] # removing columns that arent date/abs pressure and temp
names(poke.stream.one.2022) <- c("Site", "DateTimeGMT", "WaterPressure", "TempC")
# join the two atmospheric and water pressure together
POKE.2022 <- left_join(moos.atmo.2022, poke.stream.one.2022, by = "DateTimeGMT")
POKE.2022$DateTime <- mdy_hms(POKE.2022$DateTimeGMT, tz = "GMT")
attributes(POKE.2022$DateTime)$tzone <- 'America/Anchorage'
# Water pressure - atmospheric pressure
POKE.2022$difference <- POKE.2022$WaterPressure - POKE.2022$AirPressure
Poker1comb.2022 <- full_join(POKE.2022, QSummary.PO.2022)
POKE1.lm.2022 <- lm(Poker1comb.2022$MeasuredQ_Ls ~ Poker1comb.2022$difference)
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Poker1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Moos1 all measured Q")
poke.formula <- y ~ x
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Poker1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Moos1 all measured Q")
POKE2.lm.2022 <- lm(Poker1comb.2022$MeasuredQ_Ls ~ Poker1comb.2022$WaterPressure)
poke.formula <- y ~ x
ggplot(aes(x = WaterPressure, y = MeasuredQ_Ls), data = Poker1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Moos1 all measured Q")
ggplot(aes(x = WaterPressure, y = MeasuredQ_Ls), data = Poker1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Poker1 all measured Q")
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Poker1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Poker1 all measured Q")
### STRT ####
strt.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSXPDD-aCfqJ8R8mF5W0aWQ_wnFQMGc_ioP5qtgadW8rsjzfKCouALYcC3VCC65U6uUApPffsX8pPo0/pub?output=csv"
### STRT ####
strt.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSXPDD-aCfqJ8R8mF5W0aWQ_wnFQMGc_ioP5qtgadW8rsjzfKCouALYcC3VCC65U6uUApPffsX8pPo0/pub?output=csv"
strt.stream.one.2022 <- read.csv(url(strt.stream.one.2022.url), skip = 1)
names(strt.stream.one.2022)
strt.stream.one.2022 <- strt.stream.one.2022[, -c(5:8)] # removing columns that arent date/abs pressure and temp
names(strt.stream.one.2022) <- c("Site", "DateTimeGMT", "WaterPressure", "TempC")
# join the two atmospheric and water pressure together
STRT.2022 <- left_join(moos.atmo.2022, strt.stream.one.2022, by = "DateTimeGMT")
STRT.2022$DateTime <- mdy_hms(STRT.2022$DateTimeGMT, tz = "GMT")
attributes(STRT.2022$DateTime)$tzone <- 'America/Anchorage'
# Water pressure - atmospheric pressure
STRT.2022$difference <- STRT.2022$WaterPressure - STRT.2022$AirPressure
### Filter STRT ###
QSummary.ST.2022 <- QSummary.2022 %>% filter(Site =="STRT")
Stuart1comb.2022 <- full_join(STRT.2022, QSummary.ST.2022)
Stuart1comb.2022 <- full_join(STRT.2022, QSummary.ST.2022)
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference)
strt.formula <- y ~ x
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Poker1 all measured Q")
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Stuart1 all measured Q")
### FRCH ####
frch.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTGeOE-b-tvYIqLruE4YTUM_D9VXU3aveSkAAa0RK0HCpmlDezPsQzo4DLVpir-dGUyObDxZnf2TfaK/pub?output=csv"
frch.stream.one.2022 <- read.csv(url(frch.stream.one.2022.url), skip = 1)
names(frch.stream.one.2022)
frch.stream.one.2022 <- frch.stream.one.2022[, -c(5:13)] # removing columns that arent date/abs pressure and temp
names(frch.stream.one.2022) <- c("Site", "DateTimeGMT", "WaterPressure", "TempC")
# join the two atmospheric and water pressure together
FRCH.2022 <- left_join(moos.atmo.2022, frch.stream.one.2022, by = "DateTimeGMT")
FRCH.2022$DateTime <- mdy_hms(FRCH.2022$DateTimeGMT, tz = "GMT")
attributes(FRCH.2022$DateTime)$tzone <- 'America/Anchorage'
# Water pressure - atmospheric pressure
FRCH.2022$difference <- FRCH.2022$WaterPressure - FRCH.2022$AirPressure
### Filter STRT ###
QSummary.FR.2022 <- QSummary.2022 %>% filter(Site =="FRCH")
French1comb.2022 <- full_join(FRCH.2022, QSummary.FR.2022)
FRCH1.lm.2022 <- lm(French1comb.2022$MeasuredQ_Ls ~ French1comb.2022$difference)
frch.formula <- y ~ x
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = French1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = frch.formula) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("French1 all measured Q")
