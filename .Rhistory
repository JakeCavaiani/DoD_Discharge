plot(frch.stream.5$DateTime, frch.stream.5$AbsolutePressure, type = "l")
frch.stream[c(3215, 3727:3740,5185,7188,10349:10377,25340:25355,27328:27353), 2] <- NA
plot(x = frch.stream$DateTime, y = frch.stream$AbsolutePressure, type = "l")
View(frch.stream.2)
frch.stream[c(3215,3727:3740,5185,7188,9247,10349:10377,25340:25355,27328:27353), 2] <- NA
plot(x = frch.stream$DateTime, y = frch.stream$AbsolutePressure, type = "l")
# ALL Sites #
ggplot(QSummary) +
geom_point(aes(x=date, y=Q..L.s., color=site), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
a <- Qsummary %>% filter(site == "Moose") %>%
ggplot() +
geom_point(aes(x=Date, y=Q..L.s), size=3) +
theme_classic() +
ggtitle("Moose")
a <- QSummary %>% filter(site == "Moose") %>%
ggplot() +
geom_point(aes(x=Date, y=Q..L.s), size=3) +
theme_classic() +
ggtitle("Moose")
a
a <- QSummary %>% filter(site == "Moose") %>%
ggplot() +
geom_point(aes(x=date, y=Q..L.s), size=3) +
theme_classic() +
ggtitle("Moose")
a
a <- QSummary %>% filter(site == "Moose") %>%
ggplot() +
geom_point(aes(x=date, y=Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose")
a
b <- QSummary %>% filter(site == "French") %>%
ggplot() +
geom_point(aes(x=date, y=Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose")
b
# ALL Sites #
all <- ggplot(QSummary) +
geom_point(aes(x=date, y=Q..L.s., color=site), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
plot_grid(all, NA,
a, b,
nrow = 2, ncol = 2)
# Import summary notes from field book
discharge.2015 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSQ6BgEmEPZOcC_Yx7IPII36OaIc_Gh5aZfor1Fjkgz1BhsQRnauWkiuTuQQrVLVg/pub?output=csv"
QSummary <- read.csv(url(discharge.2015))
QSummary$date <- mdy(QSummary$date)
QSummary$DateTime <- as.POSIXct(paste(QSummary$date, QSummary$time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
# ALL Sites #
all <- ggplot(QSummary) +
geom_point(aes(x=date, y=Q..L.s., color=site), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
all
# Import summary notes from field book
discharge.2015 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQC9Bk0nS-Cx4Ec8MyLHd2xNuSv8JTobR8SSV_ODQHAvp4cUK8k3z9EmOs/pub?output=csv"
QSummary <- read.csv(url(discharge.2015))
QSummary$date <- mdy(QSummary$date)
QSummary$DateTime <- as.POSIXct(paste(QSummary$date, QSummary$time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
# ALL Sites #
all <- ggplot(QSummary) +
geom_point(aes(x=date, y=Q..L.s., color=site), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
all
plot_grid(all, NA,
a, b,
nrow = 2, ncol = 2)
QSummary.MO <- QSummary %>% filter(site =="Moose")
# Rating curve for MOOS PT1 #
moos.stream$site <- "Moose"
Moose1comb <- full_join(moos.stream, QSummary.MO)
MOOS1.lm <- lm(Moose1comb$Q..L.s. ~ Moose1comb$AbsolutePressure)
moos.formula <- y ~ x
mrc.1 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = Moose1comb) +
geom_point(aes(color = Q..L.s.), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose1 all measured Q")
mrc.1
mrc.1 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = Moose1comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose1 all measured Q")
mrc.1
QSummary.MO <- QSummary %>% filter(site =="Moose")
View(QSummary.MO)
QSummary.MO <- QSummary.MO %>% filter(Q..L.s. < 2500)
# Rating curve for MOOS PT1 #
moos.stream$site <- "Moose"
Moose2comb <- full_join(moos.stream, QSummary.MO)
MOOS2.lm <- lm(Moose2comb$Q..L.s. ~ Moose2comb$AbsolutePressure)
moos.formula <- y ~ x
mrc.2 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = Moose2comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose1 all measured Q")
mrc.2
plot_grid(mrc.1, mrc.2,
ncol = 2, nrow = 1)
QSummary.MO <- QSummary.MO %>% filter(Q..L.s. < 1300)
# Rating curve for MOOS PT1 #
moos.stream$site <- "Moose"
Moose3comb <- full_join(moos.stream, QSummary.MO)
MOOS3.lm <- lm(Moose3comb$Q..L.s. ~ Moose3comb$AbsolutePressure)
moos.formula <- y ~ x
mrc.3 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = Moose3comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose1 all measured Q")
plot_grid(mrc.1, mrc.2, mrc.3
ncol = 2, nrow = 1)
plot_grid(mrc.1, mrc.2, mrc.3
ncol = 3, nrow = 1)
plot_grid(mrc.1, mrc.2, mrc.3,
ncol = 3, nrow = 1)
plot_grid(mrc.1, mrc.2, mrc.3,
ncol = 3, nrow = 2)
plot_grid(mrc.1, mrc.2,
mrc.3,
ncol = 3, nrow = 2)
plot_grid(mrc.1, mrc.2,
mrc.3, NA,
ncol = 2, nrow = 2)
Moose1comb$pred.moos1.Q <- coef(MOOS1.lm)[2] * Moose1comb$AbsolutePressure+ coef(MOOS1.lm)[1]
ggplot(aes(x = DateTime, y = pred.moos1.Q), data = Moose1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
Moose1comb$pred.moos2.Q <- coef(MOOS2.lm)[2] * Moose1comb$AbsolutePressure+ coef(MOOS2.lm)[1]
ggplot(aes(x = DateTime, y = pred.moos2.Q), data = Moose1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
Moose1comb$pred.moos3.Q <- coef(MOOS3.lm)[2] * Moose1comb$AbsolutePressure+ coef(MOOS3.lm)[1]
ggplot(aes(x = DateTime, y = pred.moos3.Q), data = Moose1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
ggplot(aes(x=DateTime, y=pred.moose1.Q), data=moose1comb) +
geom_line(aes(x=DateTime, y=pred.moose1.Q), data=moose1comb, color="#A6CEE3", size=1.25) +
geom_line(aes(x=DateTime, y=pred.moose2.Q), data=moose2comb,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x=DateTime, y=pred.moose3.Q), data=moose2comb,color="#brown", size=1.25, alpha = 0.75) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls), size=2) +
theme_classic() +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
scale_y_continuous(name="Predicted discharge L/s") +
scale_x_datetime(name = "Time")
ggplot(aes(x=DateTime, y=pred.moose1.Q), data=moose1comb) +
geom_line(aes(x=DateTime, y=pred.moose1.Q), data=Moose1comb, color="#A6CEE3", size=1.25) +
geom_line(aes(x=DateTime, y=pred.moose2.Q), data=Moose1comb,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x=DateTime, y=pred.moose3.Q), data=Moose1comb,color="#brown", size=1.25, alpha = 0.75) +
geom_point(aes(x=DateTime, y=Q..L.s.), size=2) +
theme_classic() +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
scale_y_continuous(name="Predicted discharge L/s") +
scale_x_datetime(name = "Time")
ggplot(aes(x=DateTime, y=pred.moose1.Q), data=Moose1comb) +
geom_line(aes(x=DateTime, y=pred.moose1.Q), data=Moose1comb, color="#A6CEE3", size=1.25) +
geom_line(aes(x=DateTime, y=pred.moose2.Q), data=Moose1comb,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x=DateTime, y=pred.moose3.Q), data=Moose1comb,color="#brown", size=1.25, alpha = 0.75) +
geom_point(aes(x=DateTime, y=Q..L.s.), size=2) +
theme_classic() +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
scale_y_continuous(name="Predicted discharge L/s") +
scale_x_datetime(name = "Time")
ggplot(aes(x=DateTime, y=pred.moos1.Q), data=Moose1comb) +
geom_line(aes(x=DateTime, y=pred.moos1.Q), data=Moose1comb, color="#A6CEE3", size=1.25) +
geom_line(aes(x=DateTime, y=pred.moos2.Q), data=Moose1comb,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x=DateTime, y=pred.moos3.Q), data=Moose1comb,color="#brown", size=1.25, alpha = 0.75) +
geom_point(aes(x=DateTime, y=Q..L.s.), size=2) +
theme_classic() +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
scale_y_continuous(name="Predicted discharge L/s") +
scale_x_datetime(name = "Time")
ggplot(aes(x=DateTime, y=pred.moos1.Q), data=Moose1comb) +
geom_line(aes(x=DateTime, y=pred.moos1.Q), data=Moose1comb, color="#A6CEE3", size=1.25) +
geom_line(aes(x=DateTime, y=pred.moos2.Q), data=Moose1comb,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x=DateTime, y=pred.moos3.Q), data=Moose1comb,color="brown", size=1.25, alpha = 0.75) +
geom_point(aes(x=DateTime, y=Q..L.s.), size=2) +
theme_classic() +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
scale_y_continuous(name="Predicted discharge L/s") +
scale_x_datetime(name = "Time")
QSummary.FR <- QSummary %>% filter(site =="French")
### Rating curve for FRCH PT1 ###
frch.stream$site <- "French" # Add a column identifier
French1comb <- full_join(frch.stream, QSummary.FR) # Join PT data with Discharge
French1.lm <- lm(French1comb$Q..L.s. ~ French1comb$AbsolutePressure) # linear model with discharge and water level
frch.formula <- y ~ x
frc.1 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = French1comb) +
geom_point(aes(color = Q..L.s.), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.1
frc.1 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = French1comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.1
frc.1
QSummary.FR <- QSummary.FR %>% filter(Q..L.s. < 2500)
### Rating curve for FRCH PT1 ###
frch.stream$site <- "French" # Add a column identifier
French2comb <- full_join(frch.stream, QSummary.FR) # Join PT data with Discharge
French2.lm <- lm(French2comb$Q..L.s. ~ French2comb$AbsolutePressure) # linear model with discharge and water level
frc.2 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = French2comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.2
### Rating curve for FRCH PT1 ###
frch.stream$site <- "French" # Add a column identifier
French2comb <- full_join(frch.stream, QSummary.FR) # Join PT data with Discharge
French2.lm <- lm(French2comb$Q..L.s. ~ French2comb$AbsolutePressure) # linear model with discharge and water level
frch.formula <- y ~ x
frc.2 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = French2comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.2
View(QSummary.FR)
View(French2comb)
French2.lm <- lm(French2comb$Q..L.s. ~ French2comb$AbsolutePressure) # linear model with discharge and water level
French2.lm
frc.2 <- ggplot(aes(x = AbsolutePressure, y = Q..L.s.), data = French2comb) +
geom_point(size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("French1 all measured Q")
frc.2
French1comb$pred.french1.Q <- coef(French1.lm)[2] * French1comb$AbsolutePressure+ coef(French1.lm)[1]
ggplot(aes(x = DateTime, y = pred.french1.Q), data=French1comb) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q..L.s.), size=3) +
theme_classic() +
ggtitle("French1 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge")
cols <- c("DateTime", "name", "Q_Ls") #select columns to join
ggplot(aes(x=DateTime, y=pred.moos1.Q), data=Moose1comb) +
geom_line(aes(x=DateTime, y=pred.moos1.Q), data=Moose1comb, color="#A6CEE3", size=1.25) +
geom_line(aes(x=DateTime, y=pred.moos2.Q), data=Moose2comb,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x=DateTime, y=pred.moos3.Q), data=Moose3comb,color="brown", size=1.25, alpha = 0.75) +
geom_point(aes(x=DateTime, y=Q..L.s.), size=2) +
theme_classic() +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
scale_y_continuous(name="Predicted discharge L/s") +
scale_x_datetime(name = "Time")
Moose1comb <- Moose1comb %>%
select(cols)
French1comb <- French1comb %>%
select(cols)
View(Moose1comb)
cols <- c("DateTime", "site", "Q..L.s.") #select columns to join
Moose1comb <- Moose1comb %>%
select(cols)
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
French1.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQeBCz7Rq59AjhTnjeJH_H9ot8gtiujyv9-W7KOAKYacPFizjOp4KqxGbhMWmsT756KEGzBYQjeRpgz/pub?output=csv"
French2.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRCm-lCZI01xF1g4ytFCMECZJoUhjjEd11_cQTLDGzyv_4GHeLVEwX5alAVyO8hiDLzJOwWVYQui7E_/pub?output=csv"
Moose1.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTAzlkTb2-hfKPTXP1ZWp1vYCqK1irV4Gy2UMcjF7HSDdUq1WZCRNBfJs07VDrB7dGeHgIalOzrsKPG/pub?output=csv"
Moose2.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTGobrtIaYMa8-jDTYvO2s9OBsnQyksLPLRXPycD0pLi3_Asd786dK0XGnYowobM0p7NLZM5qpxmk9S/pub?output=csv"
# read in data #
French1 <- read.csv(url(French1.url))
French2 <- read.csv(url(French2.url))
Moose1 <- read.csv(url(Moose1.url))
Moose2 <- read.csv(url(Moose2.url))
# Convert time and put in AK time
French1$DateTime <- mdy_hm(French1$DateTimeGMT, tz="GMT") #convert date format.
attributes(French1$DateTime)$tzone <-'America/Anchorage'
French2$DateTime <- mdy_hm(French2$DateTimeGMT, tz="GMT") #convert date format.
attributes(French2$DateTime)$tzone <-'America/Anchorage'
Moose1$DateTime <- mdy_hm(Moose1$DateTimeGMT, tz="GMT") #convert date format.
attributes(Moose1$DateTime)$tzone <-'America/Anchorage'
Moose2$DateTime <- mdy_hm(Moose2$DateTimeGMT, tz="GMT") #convert date format.
attributes(Moose2$DateTime)$tzone <-'America/Anchorage'
# format data, combine all french, combine all moose, combine french and moose
French2 <- French2[1:nrow(French1),] # French 2 has a few extra rows on it from when stopping logger. Stripping them.
French1$name <- "French1" #add column identifier
French2$name <- "French2"
allfrench <- bind_rows(French1, French2) # combine 1&2 into one dataframe French
Moose1$name <- "Moose1" #add column indentifier
Moose2$name <- "Moose2"
allmoose <- bind_rows(Moose1, Moose2) # combine 1&2 into one dataframe Moose
frenchmoose <- bind_rows(allfrench, allmoose) # combine all french and all moose
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
plot(x= Moose1$WaterLevelmeters[100:nrow(Moose1)-15], y=Moose2$WaterLevelmeters[100:nrow(Moose2)-15],
main = "Moose PT comparison", xlab = "Moose1 PT", ylab = "Moose2 PT")
par(mfrow=c(1,2))
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
plot(x= Moose1$WaterLevelmeters[100:nrow(Moose1)-15], y=Moose2$WaterLevelmeters[100:nrow(Moose2)-15],
main = "Moose PT comparison", xlab = "Moose1 PT", ylab = "Moose2 PT")
allfrench %>%
filter(WaterLevelmeters > 184) %>%
ggplot() +
geom_line(aes(x=DateTime, y=WaterLevelmeters, color=name), size=1.25) +
theme_classic() +
ggtitle("French") +
scale_color_brewer(palette = "Paired")
names(French1)
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
which(French1$WaterLevelmeters < 184)
View(French1)
French1[c(1:47), 3] <- NA
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
options(tz="America/Anchorage")
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(plyr)
library(imputeTS)
library(TSA)
library(bbmle)
library(zoo)
library(xts)
library(forecast)
library(stats)
library(lattice)
library(nlme)
library(geosphere)
library(car)
library(EcoHydRology)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(TZ='America/Anchorage')
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
library(rio)
library(neonUtilities)
library(raster)
library(data.table)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
French1.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQeBCz7Rq59AjhTnjeJH_H9ot8gtiujyv9-W7KOAKYacPFizjOp4KqxGbhMWmsT756KEGzBYQjeRpgz/pub?output=csv"
French2.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRCm-lCZI01xF1g4ytFCMECZJoUhjjEd11_cQTLDGzyv_4GHeLVEwX5alAVyO8hiDLzJOwWVYQui7E_/pub?output=csv"
Moose1.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTAzlkTb2-hfKPTXP1ZWp1vYCqK1irV4Gy2UMcjF7HSDdUq1WZCRNBfJs07VDrB7dGeHgIalOzrsKPG/pub?output=csv"
Moose2.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTGobrtIaYMa8-jDTYvO2s9OBsnQyksLPLRXPycD0pLi3_Asd786dK0XGnYowobM0p7NLZM5qpxmk9S/pub?output=csv"
French1 <- read.csv(url(French1.url))
French1 <- read.csv(url(French1.url))
French2 <- read.csv(url(French2.url))
Moose1 <- read.csv(url(Moose1.url))
Moose2 <- read.csv(url(Moose2.url))
French1$DateTime <- mdy_hm(French1$DateTimeGMT, tz="GMT") #convert date format.
attributes(French1$DateTime)$tzone <-'America/Anchorage'
French2$DateTime <- mdy_hm(French2$DateTimeGMT, tz="GMT") #convert date format.
attributes(French2$DateTime)$tzone <-'America/Anchorage'
Moose1$DateTime <- mdy_hm(Moose1$DateTimeGMT, tz="GMT") #convert date format.
attributes(Moose1$DateTime)$tzone <-'America/Anchorage'
Moose2$DateTime <- mdy_hm(Moose2$DateTimeGMT, tz="GMT") #convert date format.
attributes(Moose2$DateTime)$tzone <-'America/Anchorage'
French2 <- French2[1:nrow(French1),] # French 2 has a few extra rows on it from when stopping logger. Stripping them.
French1$name <- "French1" #add column identifier
French2$name <- "French2"
allfrench <- bind_rows(French1, French2) # combine 1&2 into one dataframe French
Moose1$name <- "Moose1" #add column indentifier
Moose2$name <- "Moose2"
allmoose <- bind_rows(Moose1, Moose2) # combine 1&2 into one dataframe Moose
frenchmoose <- bind_rows(allfrench, allmoose) # combine all french and all moose
par(mfrow=c(1,2))
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
plot(x= Moose1$WaterLevelmeters[100:nrow(Moose1)-15], y=Moose2$WaterLevelmeters[100:nrow(Moose2)-15],
main = "Moose PT comparison", xlab = "Moose1 PT", ylab = "Moose2 PT")
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
a <- plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
b <- plot(x= Moose1$WaterLevelmeters[100:nrow(Moose1)-15], y=Moose2$WaterLevelmeters[100:nrow(Moose2)-15],
main = "Moose PT comparison", xlab = "Moose1 PT", ylab = "Moose2 PT")
plot_grid(a,b,
ncol = 2, nrow = 1)
plot(x= French1$WaterLevelmeters[100:nrow(French1)], y=French2$WaterLevelmeters[100:nrow(French2)],
main = "French PT comparison", xlab = "French1 PT", ylab = "French2 PT")
plot(x= Moose1$WaterLevelmeters[100:nrow(Moose1)-15], y=Moose2$WaterLevelmeters[100:nrow(Moose2)-15],
main = "Moose PT comparison", xlab = "Moose1 PT", ylab = "Moose2 PT")
allfrench %>%
filter(WaterLevelmeters > 184) %>%
ggplot() +
geom_line(aes(x=DateTime, y=WaterLevelmeters, color=name), size=1.25) +
theme_classic() +
ggtitle("French") +
scale_color_brewer(palette = "Paired")
allfrench <- bind_rows(French1, French2) # combine 1&2 into one dataframe French
allfrench %>%
filter(WaterLevelmeters > 184) %>%
ggplot() +
geom_line(aes(x=DateTime, y=WaterLevelmeters, color=name), size=1.25) +
theme_classic() +
ggtitle("French") +
scale_color_brewer(palette = "Paired")
View(allfrench)
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
French1[c(1:47), 3] <- NA
plot(French1$DateTime, French1$WaterLevelmeters, type = "l")
allmoose %>%
filter(WaterLevelmeters > 166) %>%
ggplot() +
geom_line(aes(x=DateTime, y=WaterLevelmeters, color=name), size=1.25) +
theme_classic() +
ggtitle("Moose") +
scale_color_brewer(palette = "Paired")
ggplot(data = allmoose, aes(DateTime, WaterLevelmeters))+
geom_line(color = name)
ggplot(data = allmoose, aes(x = DateTime, y = WaterLevelmeters, color = name))+
geom_line()
plot(Moose1$DateTime, Moose1$WaterLevelmeters)
plot(Moose1$DateTime, Moose1$WaterLevelmeters, type = "l")
plot(Moose2$DateTime, Moose2$WaterLevelmeters, type = "l")
which(Moose1$WaterLevelmeters < 166)
Moose1[c(1:38, 7191:7199), 3] <- NA
plot(Moose1$DateTime, Moose1$WaterLevelmeters, type = "l")
moos.stream.1 <- Moose1 %>% subset(Moose1$DateTime < "2019-10-01 00:00:00" & Moose1$DateTime > "2019-09-01 00:00:00")
moos.stream.1 <- Moose1 %>% subset(Moose1$DateTime < "2018-10-01 00:00:00" & Moose1$DateTime > "2018-09-01 00:00:00")
View(Moose1)
moos.stream.1 <- Moose1 %>% subset(Moose1$DateTime < "2018-10-01 00:00:00")
moos.stream.1 <- Moose1 %>% subset(DateTime < "2018-10-01 00:00:00")
library(tidyverse)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(readr)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(data.table)
library(rio)
library(neonUtilities)
library(raster)
moos.stream.1 <- Moose1 %>% subset(Moose1$DateTime < "2018-10-01 00:00:00", Moose1$DateTime > "2018-09-01 00:00:00")
# cleaning Moose 1 #
plot(Moose1$DateTime, Moose1$WaterLevelmeters, type = "l")
str(Moose1)
moos.stream.1 <- Moose1 %>% subset(Moose1$DateTime < "2018-10-01 00:00:00" & Moose1$DateTime > "2018-09-01 00:00:00")
moos.stream.1 <- Moose1 %>% subset(Moose1, DateTime < "2018-10-01 00:00:00" & DateTime > "2018-09-01 00:00:00")
