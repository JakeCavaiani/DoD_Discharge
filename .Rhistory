scale_shape_discrete(name = "Method", labels = c("ADCP", "Wading Rod", "Salt Dilution")) +
xlab("") +
ylab("Discharge(L/s)")
moos.final.discharge.2021 <- full_join(Moos1comb.2021, Moos2comb.2021, by = "DateTime")
moos.final.discharge.2021$MeanDischarge <- rowMeans(moos.final.discharge.2021[,c("pred.moos1.Q", 'pred.moos2.Q')], na.rm = TRUE) # taking the average of the two PTs
moos.final.discharge.2021 <- moos.final.discharge.2021[,-c(1:4,6:13,15:26)] # remove unnecesary columns
# Moose1 (light blue) and Moose2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021) +
geom_line(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.moos2.Q), data = Moos2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = moos.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 4000) +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
names(moos.final.discharge.2021)
moos.final.discharge.2021_final <- moos.final.discharge.2021[,-c(2:3)]
moos.final.discharge.2021_final$Site <- "MOOS"
names(moos.final.discharge.2021)
names(moos.final.discharge.2021_final)
names(moos.final.discharge.2021_final) <- c("DateTime", "Q", "Site")
write.csv(moos.final.discharge.2021_final, "~/Documents/DoD_Discharge/PT_data/2021/MOOS/MOOS.Q.csv", row.names = FALSE)
write.csv(moos.final.discharge.2021_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/MOOS/MOOS.Q.csv", row.names = FALSE)
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-28 02:30:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(frch.stream.one.2021$DateTime, frch.stream.one.2021$WaterLevel, type = 'l')
frch.stream.one.2021 <- frch.stream.one.2021 %>% subset(frch.stream.one.2021$DateTime < "2021-09-27") #  removed on the 28th of september and it appears that there was some ice influence on the 28th
frch.stream.one.2021[12958, 4] - frch.stream.one.2021[12957, 4] #0.568 is the difference
frch.stream.one.2021.before <- frch.stream.one.2021[-c(12958:31008), ]
frch.stream.one.2021.after <- frch.stream.one.2021[-c(1:12957), ]
frch.stream.one.2021.before$WaterLevel <- frch.stream.one.2021.before[, 4] + 0.568
frch.stream.one.2021.final <- rbind(frch.stream.one.2021.before, frch.stream.one.2021.after)
plot(frch.stream.one.2021.final$DateTime, frch.stream.one.2021.final$WaterLevel, type = 'l')
frch.stream.one.2021 <- frch.stream.one.2021.final
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-28 02:30:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(frch.stream.one.2021$DateTime, frch.stream.one.2021$WaterLevel, type = 'l')
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-28 02:30:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(frch.stream.two.2021$DateTime, frch.stream.two.2021$WaterLevel, type = 'l')
frch.stream.two.2021 <- frch.stream.two.2021 %>% subset(frch.stream.two.2021$DateTime < "2021-09-27") #  removed on the 28th of september and it appears that there was some ice influence on the 28th
frch.stream.two.2021[c(12948, 17535,31360,31361), 4] <- NA
frch.stream.two.2021 <- na_kalman(frch.stream.two.2021)
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-28 02:30:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(frch.stream.two.2021$DateTime, frch.stream.two.2021$WaterLevel, type = 'l')
frch.pt.2021 <- rbind(frch.stream.one.2021, frch.stream.two.2021)
write.csv(frch.pt.2021, "~/Documents/DoD_Discharge/PT_data/2021/FRCH/frch.pt.2021.csv", row.names = FALSE)
### Filter FRCH ###
QSummary.FR.2021 <- QSummary.2021 %>% filter(Site =="FRCH")
### Rating curve for FRCH PT1 ###
frch.stream.one.2021$Site <- "FRCH"
Frch1comb.2021 <- full_join(frch.stream.one.2021, QSummary.FR.2021)
FRCH1.lm.2021 <- lm(Frch1comb.2021$MeasuredQ_Ls ~ Frch1comb.2021$WaterLevel)
frch.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = frch.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Frch1 all measured Q")
### Filter FRCH ###
QSummary.FR.2021.1 <- QSummary.FR.2021[-c(1,16), ]
Frch1comb.2021 <- full_join(frch.stream.one.2021, QSummary.FR.2021.1)
FRCH1.lm.2021 <- lm(Frch1comb.2021$MeasuredQ_Ls ~ Frch1comb.2021$WaterLevel)
frch.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = frch.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Frch1 all measured Q")
### Filter FRCH ###
frch.stream.two.2021$Site <- "FRCH"
Frch2comb.2021 <- full_join(frch.stream.two.2021, QSummary.FR.2021)
FRCH2.lm.2021 <- lm(Frch2comb.2021$MeasuredQ_Ls ~ Frch2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Frch2 all measured Q")
### Filter FRCH ###
frch.stream.two.2021$Site <- "FRCH"
Frch2comb.2021 <- full_join(frch.stream.two.2021, QSummary.FR.2021.1)
FRCH2.lm.2021 <- lm(Frch2comb.2021$MeasuredQ_Ls ~ Frch2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Frch2 all measured Q")
# PT1 #
Frch1comb.2021$pred.frch1.Q <- coef(FRCH1.lm.2021)[2] * Frch1comb.2021$WaterLevel+ coef(FRCH1.lm.2021)[1]
Frch1comb.2021 <- Frch1comb.2021 %>% subset(Frch1comb.2021$DateTime < "2021-09-26")
ggplot(aes(x = DateTime, y = pred.frch1.Q), data = Frch1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("French1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
Frch2comb.2021$pred.frch2.Q <- coef(FRCH2.lm.2021)[2] * Frch2comb.2021$WaterLevel+ coef(FRCH2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.frch2.Q), data = Frch2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("French 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylab("Discharge(L/s)")
frch.final.discharge.2021 <- full_join(Frch1comb.2021, Frch2comb.2021, by = "DateTime")
frch.final.discharge.2021$MeanDischarge <- rowMeans(frch.final.discharge.2021[,c ("pred.frch1.Q", 'pred.frch2.Q')], na.rm = TRUE) # taking the average of the two PTs
frch.final.discharge.2021 <- frch.final.discharge.2021[,-c(1:4,6:13,15:26)] # remove unnecesary columns
# French1 (light blue) and French2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.frch1.Q), data = Frch1comb.2021) +
geom_line(aes(x = DateTime, y = pred.frch1.Q), data = Frch1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.frch2.Q), data = Frch2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = frch.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 1500) +
ggtitle("French1(light) & French2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
names(frch.final.discharge.2021)
frch.final.discharge.2021_final <- frch.final.discharge.2021[,-c(2:3)]
frch.final.discharge.2021_final$Site <- "FRCH"
names(frch.final.discharge.2021_final) <- c("DateTime", "Q", "Site")
write.csv(frch.final.discharge.2021_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/FRCH/FRCH.Q.csv", row.names = FALSE)
plot(POKE_RainGauge_2021$inst_rainfall_mm ~ POKE_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-06 09:00:00","2021-09-29 06:25:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(poke.stream.one.2021$DateTime, poke.stream.one.2021$WaterLevel, type = 'l')
poke.stream.one.2021[c(5957:7397, 8261:9773,17247,23665:25616), 4] <- NA
poke.stream.one.2021 <- na_kalman(poke.stream.one.2021)
plot(POKE_RainGauge_2021$inst_rainfall_mm ~ POKE_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-06 09:00:00","2021-09-29 06:25:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(poke.stream.one.2021$DateTime, poke.stream.one.2021$WaterLevel, type = 'l')
plot(POKE_RainGauge_2021$inst_rainfall_mm ~ POKE_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-06 09:00:00","2021-09-29 06:20:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(poke.stream.two.2021$DateTime, poke.stream.two.2021$WaterLevel, type = 'l')
poke.stream.two.2021[c(3725, 5957:7175,7973:9145,17247,23733:25600), 4] <- NA
poke.stream.two.2021 <- na_kalman(poke.stream.two.2021)
plot(POKE_RainGauge_2021$inst_rainfall_mm ~ POKE_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-06 09:00:00","2021-09-29 06:20:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(poke.stream.two.2021$DateTime, poke.stream.two.2021$WaterLevel, type = 'l')
poke.pt.2021 <- rbind(poke.stream.one.2021, poke.stream.two.2021)
write.csv(poke.pt.2021, "~/Documents/DoD_Discharge/PT_data/2021/POKE/poke.pt.2021.csv", row.names = FALSE)
### Filter Poker ###
QSummary.PO.2021 <- QSummary.2021 %>% filter(Site =="POKE")
### Rating curve for POKE PT1 ###
poke.stream.one.2021$Site <- "POKE"
Poke1comb.2021 <- full_join(poke.stream.one.2021, QSummary.PO.2021)
POKE1.lm.2021 <- lm(Poke1comb.2021$MeasuredQ_Ls ~ Poke1comb.2021$WaterLevel)
poke.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Poke1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Poke1 all measured Q")
### Filter Poker ###
QSummary.PO.2021.1 <- QSummary.PO.2021[-c(1,2,11,24), ]
Poke1comb.2021 <- full_join(poke.stream.one.2021, QSummary.PO.2021.1)
POKE1.lm.2021 <- lm(Poke1comb.2021$MeasuredQ_Ls ~ Poke1comb.2021$WaterLevel)
poke.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Poke1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Poke1 all measured Q")
### Filter Poker ###
QSummary.PO.2021.1 <- QSummary.PO.2021[-c(1,2,11,24), ]
Poke1comb.2021 <- full_join(poke.stream.one.2021, QSummary.PO.2021.1)
POKE1.lm.2021 <- lm(Poke1comb.2021$MeasuredQ_Ls ~ Poke1comb.2021$WaterLevel)
poke.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Poke1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Poke1 all measured Q")
poke.stream.two.2021$Site <- "POKE"
Poke2comb.2021 <- full_join(poke.stream.two.2021, QSummary.PO.2021)
POKE2.lm.2021 <- lm(Poke2comb.2021$MeasuredQ_Ls ~ Poke2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Poke2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Poker2 all measured Q")
poke.stream.two.2021$Site <- "POKE"
Poke2comb.2021 <- full_join(poke.stream.two.2021, QSummary.PO.2021)
POKE2.lm.2021 <- lm(Poke2comb.2021$MeasuredQ_Ls ~ Poke2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Poke2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Poker2 all measured Q")
### Filter Poker ###
Poke2comb.2021 <- full_join(poke.stream.two.2021, QSummary.PO.2021.1)
POKE2.lm.2021 <- lm(Poke2comb.2021$MeasuredQ_Ls ~ Poke2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Poke2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Poker2 all measured Q")
### Filter Poker ###
Poke1comb.2021$pred.poke1.Q <- coef(POKE1.lm.2021)[2] * Poke1comb.2021$WaterLevel+ coef(POKE1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.poke1.Q), data = Poke1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Poker1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
### Filter Poker ###
Poke2comb.2021$pred.poke2.Q <- coef(POKE2.lm.2021)[2] * Poke2comb.2021$WaterLevel+ coef(POKE2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.poke2.Q), data = Poke2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Poker") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylim(0, 1500) +
ylab("Discharge(L/s)")
poke.final.discharge.2021 <- full_join(Poke1comb.2021, Poke2comb.2021, by = "DateTime")
poke.final.discharge.2021$MeanDischarge <- rowMeans(poke.final.discharge.2021[,c ("pred.poke1.Q", 'pred.poke2.Q')], na.rm = TRUE) # taking the average of the two PTs
poke.final.discharge.2021 <- poke.final.discharge.2021[,-c(1:4,6:13,15:26)] # remove unnecesary columns
poke.final.discharge.2021 <- poke.final.discharge.2021[-c(30574:31598) , ] # Removing duplicate date values
# Poker1 (light blue) and Poker2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.poke1.Q), data = Poke1comb.2021) +
geom_line(aes(x = DateTime, y = pred.poke1.Q), data = Poke1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.poke2.Q), data = Poke2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = poke.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 1500) +
ggtitle("Poker1(light) & Poker2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
names(poke.final.discharge.2021)
poke.final.discharge.2021_final <- poke.final.discharge.2021[,-c(2:3)]
poke.final.discharge.2021_final$Site <- "POKE"
names(poke.final.discharge.2021_final) <- c("DateTime", "Q", "Site")
write.csv(poke.final.discharge.2021_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/POKE/POKE.Q.csv", row.names = FALSE)
plot(VAUL_RainGauge_2021$inst_rainfall_mm ~ VAUL_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-10 09:00:00","2021-09-27 08:10:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(vaul.stream.one.2021$DateTime, vaul.stream.one.2021$WaterLevel, type = 'l')
vaul.stream.one.2021[c(4777:4994, 16861, 30756:30759), 4] <- NA
vaul.stream.one.2021 <- na_kalman(vaul.stream.one.2021)
plot(VAUL_RainGauge_2021$inst_rainfall_mm ~ VAUL_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-10 09:00:00","2021-09-27 08:10:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(vaul.stream.one.2021$DateTime, vaul.stream.one.2021$WaterLevel, type = 'l')
### Filter VAUL ###
QSummary.VA.2021 <- QSummary.2021 %>% filter(Site =="VAUL")
### Rating curve for VAUL PT1 ###
vaul.stream.one.2021$Site <- "VAUL"
Vaul1comb.2021 <- full_join(vaul.stream.one.2021, QSummary.VA.2021)
VAUL1.lm.2021 <- lm(Vaul1comb.2021$MeasuredQ_Ls ~ Vaul1comb.2021$WaterLevel)
vaul.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Vaul1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = vaul.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Vaul1 all measured Q")
Vaul1comb.2021$pred.vaul1.Q <- coef(VAUL1.lm.2021)[2] * Vaul1comb.2021$WaterLevel+ coef(VAUL1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.vaul1.Q), data = Vaul1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Vaul1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
write.csv(vaul.stream.one.2021, "~/Documents/DoD_Discharge/PT_data/2021/VAUL/vaul.pt.2021.csv", row.names = FALSE)
### Filter VAUL ###
QSummary.VA.2021 <- QSummary.2021 %>% filter(Site =="VAUL")
### Rating curve for VAUL PT1 ###
vaul.stream.one.2021$Site <- "VAUL"
Vaul1comb.2021 <- full_join(vaul.stream.one.2021, QSummary.VA.2021)
VAUL1.lm.2021 <- lm(Vaul1comb.2021$MeasuredQ_Ls ~ Vaul1comb.2021$WaterLevel)
vaul.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Vaul1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = vaul.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Vaul1 all measured Q")
Vaul1comb.2021$pred.vaul1.Q <- coef(VAUL1.lm.2021)[2] * Vaul1comb.2021$WaterLevel+ coef(VAUL1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.vaul1.Q), data = Vaul1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Vaul1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-30 06:30:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(strt.stream.one.2021$DateTime, strt.stream.one.2021$WaterLevel, type = 'l')
names(Vaul1comb.2021)
vaul.final.discharge.2021_final <- Vaul1comb.2021[,-c(2:4, 6:13)]
names(vaul.final.discharge.2021_final) <- c("Site", "DateTime", "Q")
write.csv(vaul.final.discharge.2021_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/VAUL/VAUL.Q.csv", row.names = FALSE)
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-30 06:30:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(strt.stream.one.2021$DateTime, strt.stream.one.2021$WaterLevel, type = 'l')
strt.stream.one.2021[5261, 4] - strt.stream.one.2021[5257, 4] # 0.543
strt.stream.one.2021.after <- strt.stream.one.2021[-c(1:5260), ]
strt.stream.one.2021.before <- strt.stream.one.2021[-c(5258:32362), ]
strt.stream.one.2021.before$WaterLevel <- strt.stream.one.2021.before[, 4] + 0.543
strt.stream.one.2021.final <- rbind(strt.stream.one.2021.before, strt.stream.one.2021.after)
plot(strt.stream.one.2021.final$DateTime, strt.stream.one.2021.final$WaterLevel, type = 'l')
strt.stream.one.2021 <- strt.stream.one.2021.final
strt.stream.one.2021[c(910:923, 5923:10458, 11837:13900, 17342, 31626:31634), 4] <- NA
strt.stream.one.2021[17339, 4] <- NA
strt.stream.one.2021 <- na_kalman(strt.stream.one.2021)
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-30 06:30:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(strt.stream.one.2021$DateTime, strt.stream.one.2021$WaterLevel, type = "l")
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-30 06:35:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(strt.stream.two.2021$DateTime, strt.stream.two.2021$WaterLevel, type = 'l')
strt.stream.two.2021[c(5257:10460, 12997:13911, 17349:17380), 4] <- NA
strt.stream.two.2021[c(10461:17381), 4] <- strt.stream.two.2021[c(10461:17381), 4] + 0.407
plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-30 06:35:00"), tz="America/Anchorage"),
ylim = c(20,0),
axes=F, xlab="", ylab="")
par(new = T)
plot(strt.stream.two.2021$DateTime, strt.stream.two.2021$WaterLevel, type = "l")
strt.pt.2021 <- rbind(strt.stream.one.2021, strrt.stream.two.2021)
strt.pt.2021 <- rbind(strt.stream.one.2021, strt.stream.two.2021)
write.csv(strt.pt.2021, "~/Documents/DoD_Discharge/PT_data/2021/STRT/strt.pt.2021.csv", row.names = FALSE)
### Filter STRT ###
QSummary.ST.2021 <- QSummary.2021 %>% filter(Site =="STRT")
### Rating curve for STRT PT1 ###
strt.stream.one.2021$Site <- "STRT"
Strt1comb.2021 <- full_join(strt.stream.one.2021, QSummary.ST.2021)
STRT1.lm.2021 <- lm(Strt1comb.2021$MeasuredQ_Ls ~ Strt1comb.2021$WaterLevel)
strt.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Strt1 all measured Q")
### Filter STRT ###
QSummary.ST.2021.1 <- QSummary.ST.2021[-c(1,2,3,14,17,22),]
Strt1comb.2021 <- full_join(strt.stream.one.2021, QSummary.ST.2021.1)
STRT1.lm.2021 <- lm(Strt1comb.2021$MeasuredQ_Ls ~ Strt1comb.2021$WaterLevel)
strt.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Strt1 all measured Q")
strt.stream.two.2021$Site <- "STRT"
Strt2comb.2021 <- full_join(strt.stream.two.2021, QSummary.ST.2021)
STRT2.lm.2021 <- lm(Strt2comb.2021$MeasuredQ_Ls ~ Strt2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
Strt2comb.2021 <- full_join(strt.stream.two.2021, QSummary.ST.2021.1)
STRT2.lm.2021 <- lm(Strt2comb.2021$MeasuredQ_Ls ~ Strt2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
Strt1comb.2021$pred.strt1.Q <- coef(STRT1.lm.2021)[2] * Strt1comb.2021$WaterLevel+ coef(STRT1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
Strt2comb.2021$pred.strt2.Q <- coef(STRT2.lm.2021)[2] * Strt2comb.2021$WaterLevel+ coef(STRT2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.strt2.Q), data = Strt2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("ADCP", "Wading Rod", "Salt Dilution")) +
xlab("") +
ylim(0, 2000) +
ylab("Discharge(L/s)")
strt.final.discharge.2021 <- full_join(Strt1comb.2021, Strt2comb.2021, by = "DateTime")
strt.final.discharge.2021$MeanDischarge <- rowMeans(strt.final.discharge.2021[,c ("pred.strt1.Q", 'pred.strt2.Q')], na.rm = TRUE) # taking the average of the two PTs
strt.final.discharge.2021 <- strt.final.discharge.2021[,-c(1:4,6:13,15:26)] # remove unnecesary columns
# Stuart1 (light blue) and Stuart2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021) +
geom_line(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.strt2.Q), data = Strt2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = strt.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 3000) +
ggtitle("STRT1(light) & STRT2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
# Stuart1 (light blue) and Stuart2 (dark blue) with observed Q.
strt.final.discharge.2021.test <- strt.final.discharge.2021
strt.final.discharge.2021.test.1 <- na_kalman(strt.final.discharge.2021.test)
ggplot(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = strt.final.discharge.2021.test.1, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 3000) +
ggtitle("STRT1(light) & STRT2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
names(strt.final.discharge.2021)
strt.final.discharge.2021_final <- strt.final.discharge.2021[,-c(2:3)]
strt.final.discharge.2021_final$Site <- "STRT"
names(strt.final.discharge.2021_final) <- c("DateTime", "Q", "Site")
write.csv(strt.final.discharge.2021_final, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/STRT/STRT.Q.csv", row.names = FALSE)
Q_2021 <- rbind(moos.final.discharge.2021_final, frch.final.discharge.2021_final,
poke.final.discharge.2021_final, vaul.final.discharge.2021_final,
strt.final.discharge.2021_final)
Q_2021$day = format(as.POSIXct(Q_2021$DateTime,format="%Y-%m-%d %H:%M:%S"),format="%Y-%m-%d")
Q_2021$day = as.POSIXct(Q_2021$day, "%Y-%m-%d", tz="America/Anchorage")
Q.daily.2021 = with(Q_2021, tapply(Q, list(day, Site), mean))
Q.daily.2021 = as.data.frame(Q.daily.2021)
write.csv(Q.daily.2021, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/Q.daily.2021.csv", row.names = FALSE)
write.csv(Q_2021, "~/Documents/DoD_Discharge/Predicted_Discharge/2021/Q_2021.csv", row.names = FALSE)
