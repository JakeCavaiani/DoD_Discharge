library(cowplot)
library(zoo)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(imputeTS)
library(itsmr)
library(here)
# Import processed Q data
### Import Data ###
moos.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS_IoyPoUK6tDeBoPsTibXES49eORxi6SUzt5Df3iSmMmIXncaIAQWlsmzKwjecJelrcKDL3rryyKjS/pub?output=csv"
moos.stream.2020.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRb88DUzb4g2wJjmw0wfBatqS6Hg90epELO1sMlnQfzuI0t7aTWuqXYIY18r-T8mt0koTH4gc041PxL/pub?output=csv"
frch.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQQ0F4a3e4MTwKTChJmS3GTwC_ENETsM_CoJNq6awdnXzXnl1nQKizm63JjFg3WUbXZusXBLt_DNcMX/pub?output=csv"
frch.stream.2020.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRtJhzv4dunVMRCmolhShz29XDicFk2wFafUUC4ZDWaOs7z-5Q--vEJWCcYJsVEikjXYql6fc3TZV63/pub?output=csv"
strt.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSE57c7ol5XBElx6nIOm4fl4UFB5qgffo49nSw2RuJ_kIZAC43vLusqtjQy5h2h3bNikmJwDvIBEO7X/pub?output=csv"
strt.stream.2020.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSPRQxqqKl_N36uEzbMC1_T5v8k67aUyJhhMYZvsmwJKafU2NmL1NtbmOW8BvtqWqxSTY3ndYnjzy_f/pub?output=csv"
vaul.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRVA4AxNNaYJY6hJCD7c7Y4jloR68x1Zols2Grg7xiKx-gVQlqh5yb3e3L5XkFUXyRn0GnD1nRi_XXJ/pub?output=csv"
poke.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQwtaiz8D9c4QelUMsM5BwCMu4lu_Eqlo6IwTC0s-MXE-a075hQ4xgEvMovGrrMuv9_qX7cCYJvISrN/pub?output=csv"
poke.stream.2020.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQuyeltwK25QUepwlUKTSL9SAFCwgTtxs6YscILt_npSKjFV1mY5DVrs-RxGivvpg7ZCKfGuej0DOJO/pub?output=csv"
# Load Data#
moos.stream.one.2020 <- read.csv(url(moos.stream.2020.url), skip = 491) # started in lab it looks like
moos.stream.two.2020 <- read.csv(url(moos.stream.2020.url.two), skip = 1)
frch.stream.one.2020 <- read.csv(url(frch.stream.2020.url), skip = 1)
frch.stream.two.2020 <- read.csv(url(frch.stream.2020.url.two), skip = 4)
strt.stream.one.2020 <- read.csv(url(strt.stream.2020.url), skip = 1)
strt.stream.two.2020 <- read.csv(url(strt.stream.2020.url.two), skip = 1)
vaul.stream.2020 <- read.csv(url(vaul.stream.2020.url), skip = 1)
poke.stream.one.2020 <- read.csv(url(poke.stream.2020.url), skip = 1)
poke.stream.two.2020 <- read.csv(url(poke.stream.2020.url.two), skip = 1)
# Rename columns #
names(moos.stream.one.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(moos.stream.two.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(frch.stream.one.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(frch.stream.two.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(strt.stream.one.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(strt.stream.two.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(vaul.stream.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(poke.stream.one.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(poke.stream.two.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
# Input NA for missing time #
moos.stream.one.2020$DateTimeGMT[moos.stream.one.2020$DateTimeGMT == ""] <- NA
moos.stream.two.2020$DateTimeGMT[moos.stream.two.2020$DateTimeGMT == ""] <- NA
frch.stream.one.2020$DateTimeGMT[frch.stream.one.2020$DateTimeGMT == ""] <- NA
frch.stream.two.2020$DateTimeGMT[frch.stream.two.2020$DateTimeGMT == ""] <- NA
strt.stream.one.2020$DateTimeGMT[strt.stream.one.2020$DateTimeGMT == ""] <- NA
strt.stream.two.2020$DateTimeGMT[strt.stream.two.2020$DateTimeGMT == ""] <- NA
vaul.stream.2020$DateTimeGMT[vaul.stream.2020$DateTimeGMT == ""] <- NA
poke.stream.one.2020$DateTimeGMT[poke.stream.one.2020$DateTimeGMT == ""] <- NA
poke.stream.two.2020$DateTimeGMT[poke.stream.two.2020$DateTimeGMT == ""] <- NA
# Convert time and put in AK time #
moos.stream.one.2020$DateTime <- mdy_hms(moos.stream.one.2020$DateTimeGMT, tz = "GMT")
attributes(moos.stream.one.2020$DateTime)$tzone <- 'America/Anchorage'
moos.stream.two.2020$DateTime <- mdy_hms(moos.stream.two.2020$DateTimeGMT, tz = "GMT")
attributes(moos.stream.two.2020$DateTime)$tzone <- 'America/Anchorage'
frch.stream.one.2020$DateTime <- mdy_hms(frch.stream.one.2020$DateTimeGMT, tz = "GMT")
attributes(frch.stream.one.2020$DateTime)$tzone <- 'America/Anchorage'
frch.stream.two.2020$DateTime <- mdy_hms(frch.stream.two.2020$DateTimeGMT, tz = "GMT")
attributes(frch.stream.two.2020$DateTime)$tzone <- 'America/Anchorage'
strt.stream.one.2020$DateTime <- mdy_hms(strt.stream.one.2020$DateTimeGMT, tz = "GMT")
attributes(strt.stream.one.2020$DateTime)$tzone <- 'America/Anchorage'
strt.stream.two.2020$DateTime <- mdy_hms(strt.stream.two.2020$DateTimeGMT, tz = "GMT")
attributes(strt.stream.two.2020$DateTime)$tzone <- 'America/Anchorage'
vaul.stream.2020$DateTime <- mdy_hms(vaul.stream.2020$DateTimeGMT, tz = "GMT")
attributes(vaul.stream.2020$DateTime)$tzone <- 'America/Anchorage'
poke.stream.one.2020$DateTime <- mdy_hms(poke.stream.one.2020$DateTimeGMT, tz = "GMT")
attributes(poke.stream.one.2020$DateTime)$tzone <- 'America/Anchorage'
poke.stream.two.2020$DateTime <- mdy_hms(poke.stream.two.2020$DateTimeGMT, tz = "GMT")
attributes(poke.stream.two.2020$DateTime)$tzone <- 'America/Anchorage'
# Observed discharge
# Import data from google drive #
discharge.2020 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTPrFKu3yyEDEDkxPVJW2vIWznwmSUcwuNlHInDmrD4EjOQYAkHmtnWJXRT1toDa74ptmHj4O1My3xw/pub?output=csv"
QSummary.2020 <- read.csv(url(discharge.2020))
QSummary.2020 <-  subset(QSummary.2020, select = -c(X2019, Notes, Average, X, Observations, X.1, X2020, average.as.of.8.29., X.2, observations.as.of.8.29.)) # Cleaning columns that are not important to the dataset
QSummary.2020$date <- mdy(QSummary.2020$Date)
QSummary.2020$DateTime <- as.POSIXct(paste(QSummary.2020$date, QSummary.2020$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
#FRCH_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/FRCH.RainGauge.2020.csv")
#FRCH_RainGauge_2020$DateTime <-  ymd_hms(FRCH_RainGauge_2020$DateTime)
#attributes(FRCH_RainGauge_2020$DateTime)$tzone <-'America/Anchorage'
#POKE_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/POKE.RainGauge.2020.csv")
#POKE_RainGauge_2020$DateTime <-  ymd_hms(POKE_RainGauge_2020$DateTime)
#attributes(POKE_RainGauge_2020$DateTime)$tzone <-'America/Anchorage'
#STRT_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/STRT.RainGauge.2020.csv")
#STRT_RainGauge_2020$DateTime <-  ymd_hms(STRT_RainGauge_2020$DateTime)
#attributes(STRT_RainGauge_2020$DateTime)$tzone <-'America/Anchorage'
#VAUL_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/VAUL.RainGauge.2020.csv")
#VAUL_RainGauge_2020$DateTime <-  ymd_hms(VAUL_RainGauge_2020$DateTime)
#attributes(VAUL_RainGauge_2020$DateTime)$tzone <-'America/Anchorage'
# Combine the two PT into one #
moos.stream.two.2020 <- moos.stream.two.2020[1:nrow(moos.stream.one.2020),]
moos.stream.one.2020$Site <- "MOOS1" #add column identifier
moos.stream.two.2020$Site <- "MOOS2"
moos.pt.2020 <- bind_rows(moos.stream.one.2020, moos.stream.two.2020)
frch.stream.two.2020 <- frch.stream.two.2020[1:nrow(frch.stream.one.2020),]
frch.stream.one.2020$Site <- "FRCH1" #add column identifier
frch.stream.two.2020$Site <- "FRCH2"
frch.pt.2020 <- bind_rows(frch.stream.one.2020, frch.stream.two.2020)
strt.stream.two.2020 <- strt.stream.two.2020[1:nrow(strt.stream.one.2020),]
strt.stream.one.2020$Site <- "STRT1" #add column identifier
strt.stream.two.2020$Site <- "STRT2"
strt.pt.2020 <- bind_rows(strt.stream.one.2020, strt.stream.two.2020)
vaul.stream.2020$Site <- "VAUL" #add column identifier
vaul.pt.2020 <- vaul.stream.2020
names(vaul.pt.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "MeanWL", "DateTime")
poke.stream.two.2020 <- poke.stream.two.2020[1:nrow(poke.stream.one.2020),]
poke.stream.one.2020$Site <- "POKE1" #add column identifier
poke.stream.two.2020$Site <- "POKE2"
poke.pt.2020 <- bind_rows(poke.stream.one.2020, poke.stream.two.2020)
# Checking closeness between two PT #
plot(x = moos.stream.one.2020$WaterLevel, y = moos.stream.two.2020$WaterLevel, main = "Moose PT comparison",
xlab = "Moose1PT",
ylab = "Moose2PT")
plot(x = frch.stream.one.2020$WaterLevel, y = frch.stream.two.2020$WaterLevel, main = "French PT comparison",
xlab = "French1 PT",
ylab = "French2 PT")
plot(x = strt.stream.one.2020$WaterLevel, y = strt.stream.two.2020$WaterLevel, main = "Stuart PT comparison",
xlab = "Stuart1 PT",
ylab = "Stuart2 PT")
plot(x = poke.stream.one.2020$WaterLevel, y = poke.stream.two.2020$WaterLevel, main = "Poker PT comparison",
xlab = "Poker1 PT",
ylab = "Poker2 PT")
# ALL Sites #
all <- ggplot(QSummary.2020) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls, color=Site), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
all
a <- QSummary.2020 %>% filter(Site == "MOOS") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("Moose")
a
b <- QSummary.2020 %>% filter(Site == "FRCH") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("French")
b
c <- QSummary.2020 %>% filter(Site == "POKE") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("Poker")
c
d <- QSummary.2020 %>% filter(Site == "VAUL") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("Vault")
d
e <- QSummary.2020 %>% filter(Site == "STRT") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("Stuart")
e
plot_grid(all, NA,
a, b,
c,d,
e,
nrow = 4, ncol = 2)
#plot(FRCH_RainGauge_2020$inst_rainfall_mm ~ FRCH_RainGauge_2020$DateTime, type="h",
#     xlim = as.POSIXct(c("2020-06-15 09:30:00","2020-10-15 12:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(moos.stream.one.2020$DateTime, moos.stream.one.2020$WaterLevel, type = 'l')
moos.stream.one.2020 <- moos.stream.one.2020 %>% subset(moos.stream.one.2020$DateTime < "2020-10-14") # cleaning data that is below 165.5 because those are errant and then before 10/14 because thats when we took the PTs out
moos.stream.one.2020[c(1115:1499, 6032:6038 ), 4] <- NA # Setting NA to noisy part of the data set from the 27th to 30th
plot(moos.stream.one.2020$DateTime, moos.stream.one.2020$WaterLevel, type = 'l')
# shifting the back end of the data up
moos.stream.one.2020[6031, 4] # Last measurement before cleaning on 8/17 @ 04:45
moos.stream.one.2020[6039, 4]# First measurement after cleaning on 8/17 @7:00
moos.stream.one.2020[6031, 4] - moos.stream.one.2020[6039, 4] #0.116
moos.stream.one.before <- moos.stream.one.2020[-c(6032:11578), ] # clipping off after cleaning
moos.stream.one.after <- moos.stream.one.2020[-c(1:6031),] # clipping off before cleaning
moos.stream.one.after$difference <- moos.stream.one.after[, 4] + 0.116
names(moos.stream.one.after) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WLB4", "DateTime", "WaterLevel")
moos.stream.one.2020.final <- full_join(moos.stream.one.before, moos.stream.one.after)
moos.stream.one.2020.final <- na_kalman(moos.stream.one.2020.final)
#plot(FRCH_RainGauge_2020$inst_rainfall_mm ~ FRCH_RainGauge_2020$DateTime, type="h",
#     xlim = as.POSIXct(c("2020-06-15 09:30:00","2020-10-15 12:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(moos.stream.one.2020.final$DateTime, moos.stream.one.2020.final$WaterLevel, type = 'l')
#plot(FRCH_RainGauge_2020$inst_rainfall_mm ~ FRCH_RainGauge_2020$DateTime, type="h",
#     xlim = as.POSIXct(c("2020-06-15 09:30:00","2020-10-15 12:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(moos.stream.two.2020$DateTime, moos.stream.two.2020$WaterLevel, type = 'l')
moos.stream.two.2020 <- moos.stream.two.2020 %>% subset(moos.stream.two.2020$DateTime < "2020-10-14") # cleaning data that is below 165.5 because those are errant and then before 10/14 because thats when we took the PTs out
# shifting the back end of the data up
moos.stream.two.2020[6030, 4] # Last measurement before cleaning
moos.stream.two.2020[6038, 4] # first measurement after cleaning
moos.stream.two.2020[6030, 4] - moos.stream.two.2020[6038, 4] #0.19 is the difference
moos.stream.two.before <- moos.stream.two.2020[-c(6031:11578), ]
moos.stream.two.after <- moos.stream.two.2020[-c(1:6030), ]
moos.stream.two.after$difference <- moos.stream.two.after[, 4] + 0.19
names(moos.stream.two.after) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WLB4", "DateTime", "WaterLevel")
moos.stream.two.2020.final <- full_join(moos.stream.two.before, moos.stream.two.after)
moos.stream.two.2020.final <- na_kalman(moos.stream.two.2020.final)
#plot(FRCH_RainGauge_2020$inst_rainfall_mm ~ FRCH_RainGauge_2020$DateTime, type="h",
#     xlim = as.POSIXct(c("2020-06-15 09:30:00","2020-10-15 12:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(moos.stream.two.2020.final$DateTime, moos.stream.two.2020.final$WaterLevel, type = 'l')
moos.pt.2020 <- rbind(moos.stream.one.2020.final, moos.stream.two.2020.final)
write.csv(moos.pt.2020, here("PT_data/2020/MOOS/moos.pt.2020.csv"))
QSummary.MO.2020 <- QSummary.2020 %>% filter(Site =="MOOS")
moos.stream.one.2020.final$Site <- "MOOS"
Moose1comb.2020 <- full_join(moos.stream.one.2020.final, QSummary.MO.2020)
MOOS1.lm.2020 <- lm(Moose1comb.2020$MeasuredQ_Ls ~ Moose1comb.2020$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moose1comb.2020) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(165.75,166.5) +
theme_classic() +
ggtitle("Moose1 all measured Q")
QSummary.MO.2020.1 <- QSummary.MO.2020[-c(1, 9,13,18), ]
Moose2comb.2020 <- full_join(moos.stream.one.2020.final, QSummary.MO.2020.1)
MOOS2.lm.2020 <- lm(Moose2comb.2020$MeasuredQ_Ls ~ Moose2comb.2020$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moose2comb.2020) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(165.75,166.5) +
theme_classic() +
ggtitle("Moose1 all measured Q")
moos.stream.two.2020.final$Site <- "MOOS"
Moose3comb.2020 <- full_join(moos.stream.two.2020.final, QSummary.MO.2020)
MOOS3.lm.2020 <- lm(Moose3comb.2020$MeasuredQ_Ls ~ Moose3comb.2020$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moose3comb.2020) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(165.75,166.75) +
theme_classic() +
ggtitle("Moose2 all measured Q")
QSummary.MO.2020.2 <- QSummary.MO.2020[-c(13), ]
Moose4comb.2020 <- full_join(moos.stream.two.2020.final, QSummary.MO.2020.2)
MOOS4.lm.2020 <- lm(Moose4comb.2020$MeasuredQ_Ls ~ Moose4comb.2020$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moose4comb.2020) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(165.75,166.75) +
theme_classic() +
ggtitle("Moose2 measured Q")
Moose5comb.2020 <- Moose3comb.2020 %>% filter(Method == "Wading rod")
MOOS5.lm.2020 <- lm(Moose5comb.2020$MeasuredQ_Ls ~ Moose5comb.2020$WaterLevel)
moos.formula <- y ~ x
Moose5comb.2020 %>% ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls)) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose2 measured Q")
Moose5comb.2020$pred.moos2.Q <- coef(MOOS5.lm.2020)[2] * Moose5comb.2020$WaterLevel+ coef(MOOS5.lm.2020)[1]
ggplot(aes(x = DateTime, y = pred.moos2.Q), data = Moose5comb.2020) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("Date") +
ylab("Predicted Discharge")
View(Moose3comb.2020)
Moose5comb.2020 <- Moose3comb.2020 %>% filter(!Method %in% "YSI")
MOOS5.lm.2020 <- lm(Moose5comb.2020$MeasuredQ_Ls ~ Moose5comb.2020$WaterLevel)
moos.formula <- y ~ x
Moose5comb.2020 %>% ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls)) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moose2 measured Q")
Moose5comb.2020 %>% ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls)) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(165.75,166.75) +
theme_classic() +
ggtitle("Moose2 measured Q")
Moose5comb.2020$pred.moos2.Q <- coef(MOOS5.lm.2020)[2] * Moose5comb.2020$WaterLevel+ coef(MOOS5.lm.2020)[1]
ggplot(aes(x = DateTime, y = pred.moos2.Q), data = Moose5comb.2020) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("Date") +
ylab("Predicted Discharge")
moos.final.discharge.2020 <- full_join(Moose2comb.2020, Moose5comb.2020, by = c("DateTime"))
View(moos.final.discharge.2020)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(TZ='America/Anchorage')
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
library(rio)
library(neonUtilities)
library(raster)
library(data.table)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(imputeTS)
library(itsmr)
library(here)
# Import processed Q data
### Import Data ###
moos.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS_IoyPoUK6tDeBoPsTibXES49eORxi6SUzt5Df3iSmMmIXncaIAQWlsmzKwjecJelrcKDL3rryyKjS/pub?output=csv"
moos.stream.2020.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRb88DUzb4g2wJjmw0wfBatqS6Hg90epELO1sMlnQfzuI0t7aTWuqXYIY18r-T8mt0koTH4gc041PxL/pub?output=csv"
frch.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQQ0F4a3e4MTwKTChJmS3GTwC_ENETsM_CoJNq6awdnXzXnl1nQKizm63JjFg3WUbXZusXBLt_DNcMX/pub?output=csv"
frch.stream.2020.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRtJhzv4dunVMRCmolhShz29XDicFk2wFafUUC4ZDWaOs7z-5Q--vEJWCcYJsVEikjXYql6fc3TZV63/pub?output=csv"
strt.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSE57c7ol5XBElx6nIOm4fl4UFB5qgffo49nSw2RuJ_kIZAC43vLusqtjQy5h2h3bNikmJwDvIBEO7X/pub?output=csv"
strt.stream.2020.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSPRQxqqKl_N36uEzbMC1_T5v8k67aUyJhhMYZvsmwJKafU2NmL1NtbmOW8BvtqWqxSTY3ndYnjzy_f/pub?output=csv"
vaul.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRVA4AxNNaYJY6hJCD7c7Y4jloR68x1Zols2Grg7xiKx-gVQlqh5yb3e3L5XkFUXyRn0GnD1nRi_XXJ/pub?output=csv"
poke.stream.2020.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQwtaiz8D9c4QelUMsM5BwCMu4lu_Eqlo6IwTC0s-MXE-a075hQ4xgEvMovGrrMuv9_qX7cCYJvISrN/pub?output=csv"
poke.stream.2020.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQuyeltwK25QUepwlUKTSL9SAFCwgTtxs6YscILt_npSKjFV1mY5DVrs-RxGivvpg7ZCKfGuej0DOJO/pub?output=csv"
# Load Data#
moos.stream.one.2020 <- read.csv(url(moos.stream.2020.url), skip = 491) # started in lab it looks like
moos.stream.two.2020 <- read.csv(url(moos.stream.2020.url.two), skip = 1)
frch.stream.one.2020 <- read.csv(url(frch.stream.2020.url), skip = 1)
frch.stream.two.2020 <- read.csv(url(frch.stream.2020.url.two), skip = 4)
strt.stream.one.2020 <- read.csv(url(strt.stream.2020.url), skip = 1)
strt.stream.two.2020 <- read.csv(url(strt.stream.2020.url.two), skip = 1)
vaul.stream.2020 <- read.csv(url(vaul.stream.2020.url), skip = 1)
poke.stream.one.2020 <- read.csv(url(poke.stream.2020.url), skip = 1)
poke.stream.two.2020 <- read.csv(url(poke.stream.2020.url.two), skip = 1)
# Rename columns #
names(moos.stream.one.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(moos.stream.two.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(frch.stream.one.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(frch.stream.two.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(strt.stream.one.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(strt.stream.two.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(vaul.stream.2020) <- c("Site", "DateTimeGMT", "Absolute Pressure", "WaterLevel")
names(poke.stream.one.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(poke.stream.two.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
# Input NA for missing time #
moos.stream.one.2020$DateTimeGMT[moos.stream.one.2020$DateTimeGMT == ""] <- NA
moos.stream.two.2020$DateTimeGMT[moos.stream.two.2020$DateTimeGMT == ""] <- NA
frch.stream.one.2020$DateTimeGMT[frch.stream.one.2020$DateTimeGMT == ""] <- NA
frch.stream.two.2020$DateTimeGMT[frch.stream.two.2020$DateTimeGMT == ""] <- NA
strt.stream.one.2020$DateTimeGMT[strt.stream.one.2020$DateTimeGMT == ""] <- NA
strt.stream.two.2020$DateTimeGMT[strt.stream.two.2020$DateTimeGMT == ""] <- NA
vaul.stream.2020$DateTimeGMT[vaul.stream.2020$DateTimeGMT == ""] <- NA
poke.stream.one.2020$DateTimeGMT[poke.stream.one.2020$DateTimeGMT == ""] <- NA
poke.stream.two.2020$DateTimeGMT[poke.stream.two.2020$DateTimeGMT == ""] <- NA
# Convert time and put in AK time #
moos.stream.one.2020$DateTime <- mdy_hms(moos.stream.one.2020$DateTimeGMT, tz = "GMT")
attributes(moos.stream.one.2020$DateTime)$tzone <- 'America/Anchorage'
moos.stream.two.2020$DateTime <- mdy_hms(moos.stream.two.2020$DateTimeGMT, tz = "GMT")
attributes(moos.stream.two.2020$DateTime)$tzone <- 'America/Anchorage'
frch.stream.one.2020$DateTime <- mdy_hms(frch.stream.one.2020$DateTimeGMT, tz = "GMT")
attributes(frch.stream.one.2020$DateTime)$tzone <- 'America/Anchorage'
frch.stream.two.2020$DateTime <- mdy_hms(frch.stream.two.2020$DateTimeGMT, tz = "GMT")
attributes(frch.stream.two.2020$DateTime)$tzone <- 'America/Anchorage'
strt.stream.one.2020$DateTime <- mdy_hms(strt.stream.one.2020$DateTimeGMT, tz = "GMT")
attributes(strt.stream.one.2020$DateTime)$tzone <- 'America/Anchorage'
strt.stream.two.2020$DateTime <- mdy_hms(strt.stream.two.2020$DateTimeGMT, tz = "GMT")
attributes(strt.stream.two.2020$DateTime)$tzone <- 'America/Anchorage'
vaul.stream.2020$DateTime <- mdy_hms(vaul.stream.2020$DateTimeGMT, tz = "GMT")
attributes(vaul.stream.2020$DateTime)$tzone <- 'America/Anchorage'
poke.stream.one.2020$DateTime <- mdy_hms(poke.stream.one.2020$DateTimeGMT, tz = "GMT")
attributes(poke.stream.one.2020$DateTime)$tzone <- 'America/Anchorage'
poke.stream.two.2020$DateTime <- mdy_hms(poke.stream.two.2020$DateTimeGMT, tz = "GMT")
attributes(poke.stream.two.2020$DateTime)$tzone <- 'America/Anchorage'
# Observed discharge
# Import data from google drive #
discharge.2020 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTPrFKu3yyEDEDkxPVJW2vIWznwmSUcwuNlHInDmrD4EjOQYAkHmtnWJXRT1toDa74ptmHj4O1My3xw/pub?output=csv"
QSummary.2020 <- read.csv(url(discharge.2020))
QSummary.2020 <-  subset(QSummary.2020, select = -c(X2019, Notes, Average, X, Observations, X.1, X2020, average.as.of.8.29., X.2, observations.as.of.8.29.)) # Cleaning columns that are not important to the dataset
QSummary.2020$date <- mdy(QSummary.2020$Date)
QSummary.2020$DateTime <- as.POSIXct(paste(QSummary.2020$date, QSummary.2020$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
#FRCH_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/FRCH.RainGauge.2020.csv")
#FRCH_RainGauge_2020$DateTime <-  ymd_hms(FRCH_RainGauge_2020$DateTime)
#attributes(FRCH_RainGauge_2020$DateTime)$tzone <-'America/Anchorage'
#POKE_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/POKE.RainGauge.2020.csv")
#POKE_RainGauge_2020$DateTime <-  ymd_hms(POKE_RainGauge_2020$DateTime)
#attributes(POKE_RainGauge_2020$DateTime)$tzone <-'America/Anchorage'
#STRT_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/STRT.RainGauge.2020.csv")
#STRT_RainGauge_2020$DateTime <-  ymd_hms(STRT_RainGauge_2020$DateTime)
#attributes(STRT_RainGauge_2020$DateTime)$tzone <-'America/Anchorage'
#VAUL_RainGauge_2020 <- read.csv("~/Documents/DoD_2020/RainGauge/VAUL.RainGauge.2020.csv")
#VAUL_RainGauge_2020$DateTime <-  ymd_hms(VAUL_RainGauge_2020$DateTime)
#attributes(VAUL_RainGauge_2020$DateTime)$tzone <-'America/Anchorage'
# Combine the two PT into one #
moos.stream.two.2020 <- moos.stream.two.2020[1:nrow(moos.stream.one.2020),]
moos.stream.one.2020$Site <- "MOOS1" #add column identifier
moos.stream.two.2020$Site <- "MOOS2"
moos.pt.2020 <- bind_rows(moos.stream.one.2020, moos.stream.two.2020)
frch.stream.two.2020 <- frch.stream.two.2020[1:nrow(frch.stream.one.2020),]
frch.stream.one.2020$Site <- "FRCH1" #add column identifier
frch.stream.two.2020$Site <- "FRCH2"
frch.pt.2020 <- bind_rows(frch.stream.one.2020, frch.stream.two.2020)
strt.stream.two.2020 <- strt.stream.two.2020[1:nrow(strt.stream.one.2020),]
strt.stream.one.2020$Site <- "STRT1" #add column identifier
strt.stream.two.2020$Site <- "STRT2"
strt.pt.2020 <- bind_rows(strt.stream.one.2020, strt.stream.two.2020)
vaul.stream.2020$Site <- "VAUL" #add column identifier
vaul.pt.2020 <- vaul.stream.2020
names(vaul.pt.2020) <- c("Site", "DateTimeGMT", "AbsolutePressure", "MeanWL", "DateTime")
poke.stream.two.2020 <- poke.stream.two.2020[1:nrow(poke.stream.one.2020),]
poke.stream.one.2020$Site <- "POKE1" #add column identifier
poke.stream.two.2020$Site <- "POKE2"
poke.pt.2020 <- bind_rows(poke.stream.one.2020, poke.stream.two.2020)
# Checking closeness between two PT #
plot(x = moos.stream.one.2020$WaterLevel, y = moos.stream.two.2020$WaterLevel, main = "Moose PT comparison",
xlab = "Moose1PT",
ylab = "Moose2PT")
plot(x = frch.stream.one.2020$WaterLevel, y = frch.stream.two.2020$WaterLevel, main = "French PT comparison",
xlab = "French1 PT",
ylab = "French2 PT")
plot(x = strt.stream.one.2020$WaterLevel, y = strt.stream.two.2020$WaterLevel, main = "Stuart PT comparison",
xlab = "Stuart1 PT",
ylab = "Stuart2 PT")
plot(x = poke.stream.one.2020$WaterLevel, y = poke.stream.two.2020$WaterLevel, main = "Poker PT comparison",
xlab = "Poker1 PT",
ylab = "Poker2 PT")
# ALL Sites #
all <- ggplot(QSummary.2020) +
geom_point(aes(x=DateTime, y=MeasuredQ_Ls, color=Site), size=3) +
theme_classic() +
scale_color_brewer(palette = "Set1") +
ggtitle("ALL SITES")
all
a <- QSummary.2020 %>% filter(Site == "MOOS") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("Moose")
a
b <- QSummary.2020 %>% filter(Site == "FRCH") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("French")
b
c <- QSummary.2020 %>% filter(Site == "POKE") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("Poker")
c
d <- QSummary.2020 %>% filter(Site == "VAUL") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("Vault")
d
e <- QSummary.2020 %>% filter(Site == "STRT") %>%
ggplot() +
geom_point(aes(x=DateTime, y = MeasuredQ_Ls, color = Method), size=3) +
theme_classic() +
ggtitle("Stuart")
e
plot_grid(all, NA,
a, b,
c,d,
e,
nrow = 4, ncol = 2)
#plot(FRCH_RainGauge_2020$inst_rainfall_mm ~ FRCH_RainGauge_2020$DateTime, type="h",
#     xlim = as.POSIXct(c("2020-06-15 09:30:00","2020-10-15 12:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(moos.stream.one.2020$DateTime, moos.stream.one.2020$WaterLevel, type = 'l')
moos.stream.one.2020 <- moos.stream.one.2020 %>% subset(moos.stream.one.2020$DateTime < "2020-10-14") # cleaning data that is below 165.5 because those are errant and then before 10/14 because thats when we took the PTs out
moos.stream.one.2020[c(1115:1499, 6032:6038 ), 4] <- NA # Setting NA to noisy part of the data set from the 27th to 30th
plot(moos.stream.one.2020$DateTime, moos.stream.one.2020$WaterLevel, type = 'l')
# shifting the back end of the data up
moos.stream.one.2020[6031, 4] # Last measurement before cleaning on 8/17 @ 04:45
moos.stream.one.2020[6039, 4]# First measurement after cleaning on 8/17 @7:00
moos.stream.one.2020[6031, 4] - moos.stream.one.2020[6039, 4] #0.116
moos.stream.one.before <- moos.stream.one.2020[-c(6032:11578), ] # clipping off after cleaning
moos.stream.one.after <- moos.stream.one.2020[-c(1:6031),] # clipping off before cleaning
moos.stream.one.after$difference <- moos.stream.one.after[, 4] + 0.116
names(moos.stream.one.after) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WLB4", "DateTime", "WaterLevel")
moos.stream.one.2020.final <- full_join(moos.stream.one.before, moos.stream.one.after)
