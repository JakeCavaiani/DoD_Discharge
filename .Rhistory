strt.stream.one.2021 <- strt.stream.one.2021[-17342, ]
ggplot(strt.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
strt.stream.one.2021 <- strt.stream.one.2021[-c(17342:17343), ]
ggplot(strt.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
strt.stream.one.2021 <- strt.stream.one.2021[-c(17342:17345) , ] # removing erroneous points on 5/13 from 20:15-23:30
ggplot(strt.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
strt.stream.one.2021 <- strt.stream.one.2021[-c(17342:18000) , ] # removing erroneous points on 5/13 from 20:15-23:30
rm(strt.stream.one.2021)
strt.stream.one.2021 <- strt.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
strt.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTBHVco3KO6uDX5ixIteIKLgnLUTe1GIGYK-8WBM2eXn1VWvthOjFIGvmXyVOq3l2vnxiBQQaDzbqE1/pub?output=csv"
strt.stream.one.2021 <- read.csv(url(strt.stream.2021.url), skip = 1) # Deployed the 7th of May
strt.stream.one.2021 <- strt.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
names(strt.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
strt.stream.one.2021$DateTimeGMT[strt.stream.one.2021$DateTimeGMT == ""] <- NA
strt.stream.one.2021$DateTime <- mdy_hms(strt.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(strt.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
strt.stream.two.2021$DateTime <- mdy_hms(strt.stream.two.2021$DateTimeGMT, tz = "GMT")
attributes(strt.stream.two.2021$DateTime)$tzone <- 'America/Anchorage'
# STRT #
ggplot(strt.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
strt.stream.one.2021 <- strt.stream.one.2021[-c(910:923) , ] # removing erroneous points on 5/13 from 20:15-23:30
# STRT #
ggplot(strt.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
View(strt.stream.one.2021)
strt.stream.one.2021 <- strt.stream.one.2021[-c(17340:17350) , ] # removing erroneous points on 5/13 from 20:15-23:30
strt.stream.one.2021 <- strt.stream.one.2021[-c(17342:17348) , ] # removing erroneous points on 5/13 from 20:15-23:30
ggplot(strt.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
ggplot(strt.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
ggplot(strt.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
strt.stream.two.2021 <- strt.stream.two.2021[1:nrow(strt.stream.one.2021),]
strt.stream.one.2021$Site <- "STRT1" #add column identifier
strt.stream.two.2021$Site <- "STRT2"
strt.pt.2021 <- bind_rows(strt.stream.one.2021, strt.stream.two.2021)
# Checking closeness between two PT #
plot(x = poke.stream.one.2021$WaterLevel, y = poke.stream.two.2021$WaterLevel, main = "Poker PT comparison",
xlab = "Poker1PT",
ylab = "Poker2PT")
abline(1,1)
plot(x = strt.stream.one.2021$WaterLevel, y = strt.stream.two.2021$WaterLevel, main = "Stuart PT comparison",
xlab = "Poker1PT",
ylab = "Poker2PT")
abline(1,1)
### Filter STRT ###
QSummary.ST.2021 <- QSummary.2021 %>% filter(Site =="STRT")
### Rating curve for POKE PT1 ###
strt.stream.one.2021$Site <- "STRT"
Strt1comb.2021 <- full_join(strt.stream.one.2021, QSummary.ST.2021)
STRT1.lm.2021 <- lm(Strt1comb.2021$MeasuredQ_Ls ~ Strt1comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Poke1 all measured Q")
strt.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Poke1 all measured Q")
View(Strt1comb.2021)
View(QSummary.ST.2021)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(248.4, 251) +
ylim(200, 5000) +
theme_classic() +
ggtitle("Strt1 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(250, 251) +
ylim(200, 5000) +
theme_classic() +
ggtitle("Strt1 all measured Q")
strt.stream.two.2021$Site <- "STRT"
Strt2comb.2021 <- full_join(strt.stream.two.2021, QSummary.ST.2021)
STRT2.lm.2021 <- lm(Strt2comb.2021$MeasuredQ_Ls ~ Strt2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Poker2 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Strt2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(249.5, 250.15) +
ylim(200, 3000) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
### STRT ###
# PT1 #
Strt1comb.2021$pred.strt1.Q <- coef(STRT1.lm.2021)[2] * Strt1comb.2021$WaterLevel+ coef(STRT1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
# PT2 #
Strt2comb.2021$pred.poke2.Q <- coef(STRT2.lm.2021)[2] * Strt2comb.2021$WaterLevel+ coef(STRT2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.strt2.Q), data = Strt2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylim(0, 3500) +
ylab("Discharge(L/s)")
# PT2 #
Strt2comb.2021$pred.strt2.Q <- coef(STRT2.lm.2021)[2] * Strt2comb.2021$WaterLevel+ coef(STRT2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.strt2.Q), data = Strt2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylim(0, 3500) +
ylab("Discharge(L/s)")
ggplot(aes(x = DateTime, y = pred.strt2.Q), data = Strt2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylim(0, 2000) +
ylab("Discharge(L/s)")
strt.final.discharge.2021 <- full_join(Strt1comb.2021, Strt2comb.2021, by = "DateTime")
strt.final.discharge.2021$MeanDischarge <- rowMeans(strt.final.discharge.2021[,c ("pred.strt1.Q", 'pred.strt2.Q')], na.rm = TRUE) # taking the average of the two PTs
strt.final.discharge.2021 <- strt.final.discharge.2021[,-c(1:4,6:13,15:26)] # remove unnecesary columns
names(strt.final.discharge.2021)
# Poker1 (light blue) and Poker2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.poke1.Q), data = Poke1comb.2021) +
geom_line(aes(x = DateTime, y = pred.poke1.Q), data = Poke1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.poke2.Q), data = Poke2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = poke.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 3000) +
ggtitle("Poker1(light) & Poker2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
# Poker1 (light blue) and Poker2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021) +
geom_line(aes(x = DateTime, y = pred.strt1.Q), data = Strt1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.strt2.Q), data = Strt2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = strt.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 3000) +
ggtitle("Poker1(light) & Poker2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
vaul.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSUpdW2ARqdQmnNzpRIbIyGD24DhBSwL5CHFzAG8bwhOsttnyU2nehzfJ0gG8BZHX2VbSc3W1NikCIH/pub?output=csv"
vaul.stream.one.2021 <- read.csv(url(vaul.stream.2021.url), skip = 1)
moos.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSVsPDDkXNKBU9Ux2qnvtWl-HS0hgXM2cww9_1l2Xz0Vc9C1_KA2Ss56FuS1fq8mESdgqq2Pl5Nvw6o/pub?output=csv"
moos.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRCnhugeQ8EmP9P22kirbLQhPgDwFoPyMmZ4SR05jSHgleJBcUQYjNb3K2w6hGtdu4W-XJixdl8fk6-/pub?output=csv"
frch.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQi6_PAev36hNhtcXdBBQk3pyJqBoQEKpV8tSvtZgz_DPdqXSg93-d_FDomNSH_lkNhb7fJJVloxl1g/pub?output=csv"
frch.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vR0NaSrjYnUkQC42v448LFY0EZEr98R6a2gH0FpPlMBwpfEDY80rSzbDOP3OfpB-SI4QQBCOMgoQxd2/pub?output=csv"
vaul.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSUpdW2ARqdQmnNzpRIbIyGD24DhBSwL5CHFzAG8bwhOsttnyU2nehzfJ0gG8BZHX2VbSc3W1NikCIH/pub?output=csv"
vaul.stream.one.2021 <- read.csv(url(vaul.stream.2021.url), skip = 1)
frch.stream.one.2021 <- read.csv(url(frch.stream.2021.url), skip = 1) # Deployed the 7th of May
frch.stream.two.2021 <- read.csv(url(frch.stream.2021.url.two), skip = 1) # Deployed the 19th of May
moos.stream.one.2021 <- read.csv(url(moos.stream.2021.url), skip = 1) # Deployed the 7th of May
moos.stream.two.2021 <- read.csv(url(moos.stream.2021.url.two), skip = 1) # Deployed the 19th of May
vaul.stream.one.2021 <- vaul.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
frch.stream.one.2021 <- frch.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
frch.stream.two.2021 <- frch.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
moos.stream.one.2021 <- moos.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
moos.stream.two.2021 <- moos.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
names(vaul.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(frch.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(frch.stream.two.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(moos.stream.one.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
names(moos.stream.two.2021) <- c("Site", "DateTimeGMT", "AbsolutePressure", "WaterLevel")
frch.stream.one.2021$DateTimeGMT[frch.stream.one.2021$DateTimeGMT == ""] <- NA
frch.stream.two.2021$DateTimeGMT[frch.stream.two.2021$DateTimeGMT == ""] <- NA
moos.stream.one.2021$DateTimeGMT[moos.stream.one.2021$DateTimeGMT == ""] <- NA
moos.stream.two.2021$DateTimeGMT[moos.stream.two.2021$DateTimeGMT == ""] <- NA
vaul.stream.one.2021$DateTime <- mdy_hms(vaul.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(vaul.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
frch.stream.one.2021$DateTime <- mdy_hms(frch.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(frch.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
frch.stream.two.2021$DateTime <- mdy_hms(frch.stream.two.2021$DateTimeGMT, tz = "GMT")
attributes(frch.stream.two.2021$DateTime)$tzone <- 'America/Anchorage'
moos.stream.one.2021$DateTime <- mdy_hms(moos.stream.one.2021$DateTimeGMT, tz = "GMT")
attributes(moos.stream.one.2021$DateTime)$tzone <- 'America/Anchorage'
moos.stream.two.2021$DateTime <- mdy_hms(moos.stream.two.2021$DateTimeGMT, tz = "GMT")
attributes(moos.stream.two.2021$DateTime)$tzone <- 'America/Anchorage'
# vaul #
ggplot(vaul.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
vaul.one.below.197.75 <- vaul.stream.one.2021[which(vaul.stream.one.2021$WaterLevel < "197.75"), ] # trying to find the erroneous point in the dataframe
View(vaul.one.below.197.75)
vaul.stream.one.2021 <- vaul.stream.one.2021[-c(4777:4793, 16861, 30756:30757) , ] # removing erroneous points on 5/13 from 20:15-23:30
# vaul #
ggplot(vaul.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
# FRCH #
ggplot(frch.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
frch.stream.one.2021 <- frch.stream.one.2021 %>% subset(frch.stream.one.2021$DateTime < "2021-09-28") #  removed on the 28th of september
# FRCH #
ggplot(frch.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
frch.stream.one.2021 <- frch.stream.one.2021 %>% subset(frch.stream.one.2021$DateTime < "2021-09-27") #  removed on the 28th of september
# FRCH #
ggplot(frch.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
ggplot(frch.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
frch.two.below.183.6 <- frch.stream.two.2021[which(frch.stream.two.2021$WaterLevel < "183.6")]
frch.two.below.183.6 <- frch.stream.two.2021[which(frch.stream.two.2021$WaterLevel < "183.6"), ]
frch.two.below.183.6
frch.stream.two.2021 <- frch.stream.two.2021[-c(12948, 17535,31360,31361) , ] # removing erroneous points
ggplot(frch.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
frch.stream.two.2021 <- frch.stream.two.2021 %>% subset(frch.stream.two.2021$DateTime < "2021-09-27") #  removed on the 28th of september and it appears that there was some ice influence on the 28th
ggplot(frch.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
# MOOS #
ggplot(moos.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
moos.stream.one.2021 <- moos.stream.one.2021 %>% subset(moos.stream.one.2021$DateTime < "2021-09-27") #  removed on the 28th of september and it appears that there was some ice influence on the 28th
# MOOS #
ggplot(moos.stream.one.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
ggplot(moos.stream.two.2021) +
geom_point(aes(x = DateTime, y = WaterLevel)) # plot check
frch.stream.two.2021 <- frch.stream.two.2021[1:nrow(frch.stream.one.2021),]
frch.stream.one.2021$Site <- "FRCH1" #add column identifier
frch.stream.two.2021$Site <- "FRCH2"
frch.pt.2021 <- bind_rows(frch.stream.one.2021, frch.stream.two.2021)
moos.stream.two.2021 <- moos.stream.two.2021[1:nrow(moos.stream.one.2021),]
moos.stream.one.2021$Site <- "MOOS1" #add column identifier
moos.stream.two.2021$Site <- "MOOS2"
moos.pt.2021 <- bind_rows(moos.stream.one.2021, moos.stream.two.2021)
plot(x = frch.stream.one.2021$WaterLevel, y = frch.stream.two.2021$WaterLevel, main = "French PT comparison",
xlab = "French1PT",
ylab = "French2PT")
abline(1,1)
plot(x = moos.stream.one.2021$WaterLevel, y = moos.stream.two.2021$WaterLevel, main = "Moose PT comparison",
xlab = "Moose1PT",
ylab = "Moose2PT")
abline(1,1)
Vaul1comb.2021 <- full_join(vaul.stream.one.2021, QSummary.VA.2021)
### Filter VAUL ###
QSummary.VA.2021 <- QSummary.2021 %>% filter(Site =="VAUL")
### Rating curve for STRT PT1 ###
vaul.stream.one.2021$Site <- "VAUL"
Vaul1comb.2021 <- full_join(vaul.stream.one.2021, QSummary.VA.2021)
VAUL1.lm.2021 <- lm(Vaul1comb.2021$MeasuredQ_Ls ~ Vaul1comb.2021$WaterLevel)
vaul.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Vaul1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = vaul.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Vaul1 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Vaul1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = vaul.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(197.5, 198.5) +
ylim(0, 1250) +
theme_classic() +
ggtitle("Vaul1 all measured Q")
### Filter FRCH ###
QSummary.FR.2021 <- QSummary.2021 %>% filter(Site =="FRCH")
### Rating curve for FRCH PT1 ###
frch.stream.one.2021$Site <- "FRCH"
Frch1comb.2021 <- full_join(frch.stream.one.2021, QSummary.FR.2021)
FRCH1.lm.2021 <- lm(Frch1comb.2021$MeasuredQ_Ls ~ Frch1comb.2021$WaterLevel)
frch.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = frch.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Strt1 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = frch.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(184, 185) +
theme_classic() +
ggtitle("Strt1 all measured Q")
frch.stream.two.2021$Site <- "FRCH"
Frch2comb.2021 <- full_join(frch.stream.two.2021, QSummary.FR.2021)
FRCH2.lm.2021 <- lm(Frch2comb.2021$MeasuredQ_Ls ~ Frch2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(184, 184.3) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = frch.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(184, 185) +
theme_classic() +
ggtitle("Frch1 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Frch2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = frch.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Frch2 all measured Q")
### Filter MOOS ###
QSummary.MO.2021 <- QSummary.2021 %>% filter(Site =="MOOS")
### Rating curve for FRCH PT1 ###
moos.stream.one.2021$Site <- "MOOS"
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(165.8, 166.1) +
theme_classic() +
ggtitle("Moos1 all measured Q")
moos.stream.two.2021$Site <- "MOOS"
Moos2comb.2021 <- full_join(moos.stream.two.2021, QSummary.MO.2021)
MOOS2.lm.2021 <- lm(Moos2comb.2021$MeasuredQ_Ls ~ Moos2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos2 all measured Q")
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(165.8, 166) +
theme_classic() +
ggtitle("Moos2 all measured Q")
### FRCH ###
# PT1 #
Frch1comb.2021$pred.frch1.Q <- coef(FRCH1.lm.2021)[2] * Frch1comb.2021$WaterLevel+ coef(FRCH1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.strt1.Q), data = Frch1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("French1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
ggplot(aes(x = DateTime, y = pred.frch1.Q), data = Frch1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("French1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
# PT2 #
Frch2comb.2021$pred.frch2.Q <- coef(FRCH2.lm.2021)[2] * Frch2comb.2021$WaterLevel+ coef(FRCH2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.frch2.Q), data = Frch2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("French 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylab("Discharge(L/s)")
frch.final.discharge.2021 <- full_join(Frch1comb.2021, Frch2comb.2021, by = "DateTime")
frch.final.discharge.2021$MeanDischarge <- rowMeans(frch.final.discharge.2021[,c ("pred.frch1.Q", 'pred.frch2.Q')], na.rm = TRUE) # taking the average of the two PTs
frch.final.discharge.2021 <- frch.final.discharge.2021[,-c(1:4,6:13,15:26)] # remove unnecesary columns
# French1 (light blue) and French2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.frch1.Q), data = Frch1comb.2021) +
geom_line(aes(x = DateTime, y = pred.frch1.Q), data = Frch1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.frch2.Q), data = Frch2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = frch.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 3000) +
ggtitle("French1(light) & French2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
# French1 (light blue) and French2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.frch1.Q), data = Frch1comb.2021) +
geom_line(aes(x = DateTime, y = pred.frch1.Q), data = Frch1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.frch2.Q), data = Frch2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = frch.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 1500) +
ggtitle("French1(light) & French2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
### MOOS ###
# PT1 #
Moos1comb.2021$pred.moos1.Q <- coef(MOOS1.lm.2021)[2] * Moos1comb.2021$WaterLevel+ coef(MOOA1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
### MOOS ###
# PT1 #
Moos1comb.2021$pred.moos1.Q <- coef(MOOS1.lm.2021)[2] * Moos1comb.2021$WaterLevel+ coef(MOOS1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
# PT2 #
Moos2comb.2021$pred.moos2.Q <- coef(MOOS2.lm.2021)[2] * Moos2comb.2021$WaterLevel+ coef(MOOS2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.moos2.Q), data = Moos2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Moose 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylab("Discharge(L/s)")
moos.final.discharge.2021 <- full_join(Moos1comb.2021, Moos2comb.2021, by = "DateTime")
moos.final.discharge.2021$MeanDischarge <- rowMeans(moos.final.discharge.2021[,c ("pred.moos1.Q", 'pred.moos2.Q')], na.rm = TRUE) # taking the average of the two PTs
moos.final.discharge.2021 <- moos.final.discharge.2021[,-c(1:4,6:13,15:26)] # remove unnecesary columns
# Moose1 (light blue) and Moose2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021) +
geom_line(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.moos2.Q), data = Moos2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = moos.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 4000) +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
### VAUL ###
# PT1 #
Vaul1comb.2021$pred.vaul1.Q <- coef(VAUL1.lm.2021)[2] * Vaul1comb.2021$WaterLevel+ coef(VAUL1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.vaul1.Q), data = Vaul1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Vaul1 predicted all measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
