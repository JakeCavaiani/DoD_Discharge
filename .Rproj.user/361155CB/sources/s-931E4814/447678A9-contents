#### READ ME ####
# The purpose of this script is to prepare DoD data for hysteresis analysis and, specifically, the hysteresisMetrics function.
# Step 1: Load in processed SUNA and EXO data from DoD_2020 script within DoD->AK Sensors->2020-> SUNA->Processed & DoD->AK Sensors->2020-> EXO->Processed 
# Step 2: fill gaps in nitrate, fDOM, SpCond, and turbidity data
# Step 3: Define baseflow in each catchment.
# Step 4: Set criteria for storm delineation for each catchment based on some percentage over baseflow.
# Step 5: Delineate storms in each catchment.
# Step 6: IN PYTHON: convert R discharge df to pandas df containing a datetime column named 'valuedatetime', and discharge values in a column 'datavalue'
# Step 7: IN PYTHON: convert R response df(s) to pandas df(s) containing a datetime column named 'valuedatetime', and response values in a column 'datavalue'


library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(plyr)
library(imputeTS)
library(TSA)
library(bbmle)
library(zoo)
library(xts)
library(forecast)
library(stats)
library(lattice)
library(nlme)
library(geosphere)
library(car)
library(EcoHydRology)

#### Load from google drive ####
#suna.2020.url <- "https://drive.google.com/drive/u/1/folders/1QGwlgWHBQI_AeLuMGNzD4qWB90UqlykK"

#SUNA_new <- drive_get(as_id(suna.2020.url))
#EXO_new <- drive_get(as_id(exo.2020.url))

#SUNA_glist <- drive_ls(SUNA_new, type = "csv")
#EXO_glist <- drive_ls(EXO_new, type = "csv")

#SUNAfile_list <- list.files(path = "")

#SUNA.ALL <- lapply(SUNA_glist)
#read.csv(SUNA_glist)

### Load from local machine ###
EXO_ALL <- read_csv("~/Documents/DoD_2020/EXO_data/from_internal_harddrive/processed/EXO.ALL.csv")

EXO_ALL$Site <- EXO_ALL$site.ID
EXO_ALL$DateTime <- as.POSIXct(EXO_ALL$DateTime)

ALL <- full_join(EXO_ALL, final_discharge_2020)

SUNA_ALL <- read_csv("~/Documents/DoD_2020/SUNA_data/from_internal_harddrive/processed/SUNA.processed.csv")
SUNA_ALL <- SUNA_ALL[, -(14:269)] # Remove channels
SUNA_ALL$Site <- SUNA_ALL$site.ID
SUNA_ALL$DateTime <- SUNA_ALL$datetimeAK

ALL <- full_join(ALL, SUNA_ALL)


#### subset data by site ####
FRCH <-  subset(ALL, Site == "FRCH")
head(FRCH$DateTime)
STRT = subset(ALL, Site == "STRT")
head(STRT$DateTime)
POKE = subset(ALL, Site == "POKE")
head(POKE$DateTime)
VAUL = subset(ALL, Site == "VAUL")
head(VAUL$DateTime)
MOOS = subset(ALL, Site == "MOOS")
head(MOOS$DateTime)

FRCH_Q = as.data.frame(Q.daily$FRCH)
FRCH_Q$day = as.Date(rownames(Q.daily))
names(FRCH_Q) = c("Discharge_Lsec", "day")
write.csv(FRCH_Q, "Predicted_Discharge/processed/FRCH_Q_2020.csv", row.names = FALSE)

STRT_Q = as.data.frame(Q.daily$STRT)
STRT_Q$day = as.Date(rownames(Q.daily))
names(STRT_Q) = c("Discharge_Lsec", "day")

POKE_Q = as.data.frame(Q.daily$POKE)
POKE_Q$day = as.Date(rownames(Q.daily))
names(POKE_Q) = c("Discharge_Lsec", "day")

VAUL_Q = as.data.frame(Q.daily$VAUL)
VAUL_Q$day = as.Date(rownames(Q.daily))
names(VAUL_Q) = c("Discharge_Lsec", "day")

MOOS_Q = as.data.frame(Q.daily$MOOS)
MOOS_Q$day = as.Date(rownames(Q.daily))
names(MOOS_Q) = c("Discharge_Lsec", "day")


#### data wrangling - fill gaps ####
# fxn #
fillgaps15 = function(df, dat, datquotes, largegap.num){
  ## Document gaps >= largegap.num (1 largegap.num = 15 min) ##
  # (note - the criteria of what constitutes a "large" gap should be reevaluated depending on the trend being characterized)
  is.na.rle <- rle(is.na(dat))
  is.na.rle$values <- is.na.rle$values & is.na.rle$lengths >= (largegap.num)
  biggaps = df[inverse.rle(is.na.rle), ]
  tz(biggaps$DateTime) = "America/Anchorage"
  biggaps = subset(biggaps, select = "DateTime")
  # Make univariate time series, covert to zoo, then to ts #
  ts.xts = subset(df, select = c("DateTime",datquotes))
  ts.xts<-read.zoo(ts.xts, index.column=1, format="%Y-%m-%d %H:%M:%S", tz="America/Anchorage")
  ts.xts<-as.xts(ts.xts)
  # remove leading and trailing NAs #
  ts.xts = na.trim(ts.xts, is.na="any")
  # Apply auto.arima and kalman filter to impute missing values #
  fit2 = auto.arima(ts.xts) 
  kal = KalmanSmooth(ts.xts, fit2$model)
  id.na<-which(is.na(ts.xts))
  for(i in id.na) 
    ts.xts[i]<-fit2$model$Z %*% kal$smooth[i,]
  # revert to dataframe #
  ts.df = as.data.frame((ts.xts))
  ts.df$date_timeAK = as.POSIXct(row.names(ts.df), tz="America/Anchorage")
  names(ts.df) = c("dat_filled", "DateTime")
  # remove large gaps # 
  ts.df$dat_filled[ts.df$date_timeAK %in% as.POSIXct(biggaps$DateTime)] = NA
  # Replace large gaps with linear interpolation #
  ts.df$dat_filled = na.interpolation(ts.df$dat_filled)
  ts.df = subset(ts.df, select = c("dat_filled", "DateTime"))
  return(ts.df)
}


# FRCH # 
FRCH.no3 <- subset(FRCH, select = c("datetimeAK","nitrateuM"))
#FRCH.no3 <-  fillgaps15(FRCH.no3, FRCH.no3$nitrateuM, "nitrateuM", 16)

names(FRCH.no3) = c("DateTime", "nitrate_uM_filled")
FRCH$
FRCH.fDOM = subset(FRCH, select = c("date","fDOM.QSU"))
#FRCH.fDOM = fillgaps15(FRCH.fDOM, FRCH.fDOM$fDOM.RFU, "fDOM.RFU", 16)
ggplot(FRCH) +
  geom_point(mapping = aes(x = Date, y = fDOM.QSU)) +
  theme_classic()
names(FRCH.fDOM) = c("fDOM_filled", "DateTime")

#FRCH.SpCond = subset(FRCH, select = c("date_timeAK","SpCond_uScm"))
#FRCH.SpCond = fillgaps15(FRCH.SpCond, FRCH.SpCond$SpCond_uScm, "SpCond_uScm", 16)
#plot(FRCH.SpCond$dat_filled, type="l")
#plot(FRCH$SpCond.uScm ~ FRCH$Date)
#names(FRCH.SpCond) = c("SpCond_uScm_filled", "date_timeAK")

#FRCH.turb = subset(FRCH, select = c("date_timeAK","Turbidity_FNU"))
#FRCH.turb = fillgaps15(FRCH.turb, FRCH.turb$Turbidity_FNU, "Turbidity_FNU", 16)
#plot(FRCH.turb$dat_filled, type="l")
#names(FRCH.turb) = c("Turbidity_FNU_filled", "date_timeAK")

FRCH = left_join(FRCH, FRCH.no3, by="date_timeAK")
FRCH = left_join(FRCH, FRCH.fDOM, by="date_timeAK")
FRCH = left_join(FRCH, FRCH.SpCond, by="date_timeAK")
FRCH = left_join(FRCH, FRCH.turb, by="date_timeAK")
#
### STRT ###
STRT.no3 <- subset(STRT, select = c("DateTime", "nitrateuM"))
#STRT.no3 = fillgaps15(STRT.no3, STRT.no3$nitrateuM, "nitrateuM", 16)
plot(STRT.no3$dat_filled, type="l")
names(STRT.no3) = c("DateTime", "nitrate_uM_filled")

STRT.fDOM = subset(STRT, select = c("DateTime","fDOM.QSU"))
#STRT.fDOM = fillgaps15(STRT.fDOM, STRT.fDOM$fDOM.RFU, "fDOM.RFU", 16)
plot(STRT$dat_filled, type="l")
names(STRT.fDOM) = c("fDOM_filled", "DateTime")

### POKE ### 
POKE.no3 <- subset(POKE, select = c("DateTime", "nitrateuM"))
POKE.no3 <- POKE.no3[!is.na(POKE.no3$DateTime), ]
#POKE.no3 <-  fillgaps15(POKE.no3, POKE.no3$nitrateuM, "nitrateuM", 16)
plot(POKE.no3$dat_filled, type="l")
names(POKE.no3) = c("nitrate_uM_filled", "DateTime")

POKE.fDOM = subset(POKE, select = c("DateTime","fDOM.RFU"))
#POKE.fDOM = fillgaps15(POKE.fDOM, POKE.fDOM$fDOM.RFU, "fDOM.RFU", 16)
plot(POKE$dat_filled, type="l")
names(POKE.fDOM) = c("fDOM_filled", "DateTime")

### VAUL ### 
VAUL.no3 <- subset(VAUL, select = c("DateTime", "nitrateuM"))
#VAUL.no3 <-  fillgaps15(VAUL.no3, VAUL.no3$nitrateuM, "nitrateuM", 16)
plot(VAUL.no3$dat_filled, type="l")
names(VAUL.no3) = c("nitrate_uM_filled", "DateTime")

VAUL.fDOM = subset(VAUL, select = c("DateTime","fDOM.RFU"))
#VAUL.fDOM = fillgaps15(VAUL.fDOM, VAUL.fDOM$fDOM.RFU, "fDOM.RFU", 16)
plot(VAUL$dat_filled, type="l")
names(VAUL.fDOM) = c("fDOM_filled", "DateTime")

### MOOS ###
MOOS.no3 <- subset(MOOS, select = c("DateTime", "nitrateuM"))
#MOOS.no3 <-  fillgaps15(MOOS.no3, MOOS.no3$nitrateuM, "nitrateuM", 16)
plot(MOOS.no3$dat_filled, type="l")


MOOS.fDOM = subset(MOOS, select = c("DateTime","fDOM.RFU"))
#MOOS.fDOM = fillgaps15(MOOS.fDOM, MOOS.fDOM$fDOM.RFU, "fDOM.RFU", 16)
plot(MOOS$dat_filled, type="l")
names(MOOS.fDOM) = c("fDOM_filled", "DateTime")

#### Baseflow Separation ####

any(is.na(FRCH_Q$day))
any(is.na(FRCH_Q$Discharge_Lsec))
FRCH_Q <- na.omit(FRCH_Q) # Remove 7 NaNs

any(is.na(STRT_Q$day))
any(is.na(STRT_Q$Discharge_Lsec))
STRT_Q <- na.omit(STRT_Q) # Remove 19 NaNs

any(is.na(POKE_Q$day))
any(is.na(POKE_Q$Discharge_Lsec))
POKE_Q <- na.omit(POKE_Q) # Remove 4 NaNs

any(is.na(VAUL_Q$day))
any(is.na(VAUL_Q$Discharge_Lsec))
VAUL_Q <- na.omit(VAUL_Q) # Remove 21 NaNs

any(is.na(MOOS_Q$day))
any(is.na(MOOS_Q$Discharge_Lsec))
MOOS_Q <- na.omit(MOOS_Q) # Remove 11 NaNs


### examine the recursive digital filter at .9, .925, .95 levels ###
plot(FRCH$MeanDischarge ~ FRCH$DateTime, type = "l", xlab = "", ylab = "Q (L/sec)",
    xlim =  as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
    ylim = c(0, 3000), col="blue")
#
plot(poke.final.discharge$MeanDischarge ~ poke.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

plot(vaul.final.discharge$MeanDischarge ~ vaul.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(0,3000), col="blue")

### Hydrograph Separation ###
#
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH_Q, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 

#
strt.final.discharge <- strt.final.discharge[-c(10815:10817), ] # clean Nas.


STRT_Q_bf = BaseflowSeparation(strt.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(STRT_Q, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(POKE_Q, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(VAUL_Q, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(MOOS_Q, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 

###.925 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(FRCH_Q, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(STRT_Q, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(POKE_Q, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(VAUL_Q, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge$MeanDischarge, filter_parameter = 0.925, passes = 3)
hydrograph(input=subset(MOOS_Q, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 


### .95 ###
FRCH_Q_bf = BaseflowSeparation(frch.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(FRCH_Q, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
#
STRT_Q_bf = BaseflowSeparation(strt.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(STRT_Q, select = c(day, Discharge_Lsec)), streamflow2=STRT_Q_bf$bt)
#
POKE_Q_bf = BaseflowSeparation(poke.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(POKE_Q, select = c(day, Discharge_Lsec)), streamflow2=POKE_Q_bf$bt) 
#
VAUL_Q_bf = BaseflowSeparation(vaul.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(VAUL_Q, select = c(day, Discharge_Lsec)), streamflow2=VAUL_Q_bf$bt) 

MOOS_Q_bf = BaseflowSeparation(moos.final.discharge$MeanDischarge, filter_parameter = 0.95, passes = 3)
hydrograph(input=subset(MOOS_Q, select = c(day, Discharge_Lsec)), streamflow2=MOOS_Q_bf$bt) 


#### Deliniate storms in FRCH ####

# ID storms: Any events where Q reached 2X mean base flow 
# Pick starting points: manually select inflection pt when Q began to rise
# Pick ending points: manually select pt when Q reached pre-storm baseflow OR when another event occurred


FRCH_bfQ_mn = mean(FRCH_Q_bf$bt)
FRCH_bfQ_mn
FRCH_bfQ_mn*2

STRT_bfQ_mn = mean(STRT_Q_bf$bt)
STRT_bfQ_mn
STRT_bfQ_mn*2

VAUL_bfQ_mn = mean(VAUL_Q_bf$bt)
VAUL_bfQ_mn
VAUL_bfQ_mn*2

POKE_bfQ_mn = mean(POKE_Q_bf$bt)
POKE_bfQ_mn
POKE_bfQ_mn*2

MOOS_bfQ_mn = mean(MOOS_Q_bf$bt)
MOOS_bfQ_mn
MOOS_bfQ_mn*2

### Merge Discharge and Precip ###
frch.precip.discharge <- full_join(frch.final.discharge, FRCH.st) # merging precip data and discharge
strt.precip.discharge <- full_join(strt.final.discharge, STRT.st.final) # merging precip data and discharge
vaul.precip.discharge <- full_join(vaul.final.discharge, VAUL.st.final) # merging precip data and discharge
poke.precip.discharge <- full_join(poke.final.discharge, poke.gauge) # merging precip data and discharge


### Sum daily discharge ###
frch.precip.discharge <- frch.precip.discharge[-c(1:3),] # Remove out of water discharge
frch.precip.discharge$twentyfour <- rollapplyr(frch.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
frch.precip.discharge$fourtyeight <- rollapplyr(frch.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

strt.precip.discharge$twentyfour <- rollapplyr(strt.precip.discharge$Precip, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
strt.precip.discharge$fourtyeight <- rollapplyr(strt.precip.discharge$Precip, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

vaul.precip.discharge$twentyfour <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
vaul.precip.discharge$fourtyeight <- rollapplyr(vaul.precip.discharge$inst_rainfall_mm, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

poke.precip.discharge$twentyfour <- rollapplyr(poke.precip.discharge$Precip, 96, sum, na.rm = TRUE, fill = NA, partial = TRUE)
poke.precip.discharge$fourtyeight <- rollapplyr(poke.precip.discharge$Precip, 192, sum, na.rm = TRUE, fill = NA, partial = TRUE)

# Greater than 5 #
frch.five.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
frch.five.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

strt.five.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
strt.five.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

vaul.five.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
vaul.five.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10

poke.five.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 5),] # twenty four hour period where the precip is 5
poke.five.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 5),] # fourty eight hour period where the precip is greater than 10


# Greater than 10 #
frch.ten.twenty.four <- frch.precip.discharge[which(frch.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
frch.ten.fourty.eight <- frch.precip.discharge[which(frch.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

strt.ten.twenty.four <- strt.precip.discharge[which(strt.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
strt.ten.fourty.eight <- strt.precip.discharge[which(strt.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

vaul.ten.twenty.four <- vaul.precip.discharge[which(vaul.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
vaul.ten.fourty.eight <- vaul.precip.discharge[which(vaul.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

poke.ten.twenty.four <- poke.precip.discharge[which(poke.precip.discharge$twentyfour >= 10),] # twenty four hour period where the precip is 10
poke.ten.fourty.eight <- poke.precip.discharge[which(poke.precip.discharge$fourtyeight >= 10),] # fourty eight hour period where the precip is greater than 10

write.csv(frch.precip.discharge, "frch.precip.discharge.csv", row.names = FALSE)
write.csv(strt.precip.discharge, "strt.precip.discharge.csv", row.names = FALSE)
write.csv(vaul.precip.discharge, "vaul.precip.discharge.csv", row.names = FALSE)
write.csv(poke.precip.discharge, "poke.precip.discharge.csv", row.names = FALSE)

#
#frch.gauge$date <- as.Date(frch.gauge$DateTime)# breaking into days
#daily.sum <- aggregate(frch.gauge["inst_rainfall_mm"], by = frch.gauge["date"], sum) # summing days
#frch.ten <- daily.sum[which(daily.sum$inst_rainfall_mm >= 10),] # anything greater than 10 is filtered 

#strt.gauge$date <- as.Date(strt.gauge$DateTime)
#strt.daily.sum <- aggregate(strt.gauge["inst_rainfall_mm"], by = strt.gauge["date"], sum)
#strt.ten <- strt.daily.sum[which(strt.daily.sum$inst_rainfall_mm >= 10),]

#vaul.gauge$date <- as.Date(vaul.gauge$DateTime)
#vaul.daily.sum <- aggregate(vaul.gauge["inst_rainfall_mm"], by = vaul.gauge["date"], sum)
#vaul.ten <- vaul.daily.sum[which(vaul.daily.sum$inst_rainfall_mm >= 10),]
#par(mfrow=c(1,1))

#precip.cariboupeak$date <- as.Date(precip.cariboupeak$DateTime)
#poke.daily.sum <- aggregate(precip.cariboupeak["Precip"], by = precip.cariboupeak["date"], sum)
#poke.ten <- poke.daily.sum[which(poke.daily.sum$Precip >= 10),]


#plot(FRCH_Q$Discharge_Lsec ~ FRCH_Q$day, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,3000), col="blue", main="FRCH")
#lines(FRCH_Q_bf$bt ~ FRCH_Q$day, col="red")
#lines(FRCH_Q_bf$bt*1.3 ~ FRCH_Q$day, col="red", lty = 2)
#lines((FRCH_Q_bf$bt*5) ~ FRCH_Q$day, col="red", lty=2)
#abline(h = FRCH_bfQ_mn*2, col="red", lty=2)

### Discharge/Chem/Precip ###
# FRCH #
### Import precipitation data into the *ALL document ### 
# FRCH rain gauge installed on the 11th of June. 
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(20,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
par(mfrow=c(1,1))
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)

abline(v = as.POSIXct(frch.ten.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.ten.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(25,0), 
     axes=F, xlab="", ylab="")
par(new = T)

plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
lines(FRCH$nitrateuM * 20 ~ FRCH.no3$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(FRCH$fDOM.RFU * 10 ~ FRCH$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))


### Storms ###
# FRCH #
# Storm 1 #



# STRT #
# STRT rain gauge installed on the 29th of July #
plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'STRT precip. (mm)') 
par(new = T)
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)


abline(v = as.POSIXct(strt.ten.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.ten.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)
plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage")) 
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
lines(STRT$nitrateuM * 45 ~ STRT.no3$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(STRT$fDOM.QSU * 20 ~ STRT.fDOM$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
plot(x = STRT.no3$DateTime, y = STRT$nitrateuM)

### Storms ###
# STRT #
# Storm 1a #
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-19 02:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-20 06:00:00", tz="America/Anchorage"), col="purple")

# Storm 1b #
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-20 06:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-22 00:00:00", tz="America/Anchorage"), col="purple")

# Storm 1c #
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-22 00:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-23 05:00:00", tz="America/Anchorage"), col="purple")

# Storm 1d #
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-23 05:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-24 02:00:00", tz="America/Anchorage"), col="purple")

# Storm 1e #
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-19 00:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-19 0:00:00","2020-06-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-24 02:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-28 18:00:00", tz="America/Anchorage"), col="purple")

# Storm 2? # No discharge response
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-28 00:00:00","2020-07-06 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-28 0:00:00","2020-07-06 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-06-24 02:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-28 18:00:00", tz="America/Anchorage"), col="purple")

# Storm 2 #
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-07 00:00:00","2020-07-14 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-07 0:00:00","2020-07-14 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-09 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-11 00:00:00", tz="America/Anchorage"), col="purple")

# Storm 3 # No response in discharge
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-15 00:00:00","2020-07-20 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-15 0:00:00","2020-07-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-09 10:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-11 00:00:00", tz="America/Anchorage"), col="purple")

# Storm 4 # 
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-20 00:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-20 0:00:00","2020-07-27 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-21 00:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-26 00:00:00", tz="America/Anchorage"), col="purple")

# Storm 5a # 
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-05 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-05 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-01 12:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-03 00:00:00", tz="America/Anchorage"), col="purple")

# Storm 5b # 
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-03 04:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-06 03:00:00", tz="America/Anchorage"), col="purple")

# Storm 6 # Small response in discharge
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-12 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-09 0:00:00","2020-08-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-02 19:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-05 05:00:00", tz="America/Anchorage"), col="purple")

# Storm 6.5 # Small response in discharge
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-12 00:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-12 0:00:00","2020-08-19 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-12 03:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-13 09:00:00", tz="America/Anchorage"), col="purple")


# Storm 7 # One or two storms?
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-20 00:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-08-23 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-02 19:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-05 05:00:00", tz="America/Anchorage"), col="purple")

# Storm 8 # Looks like there is a response after the 26th of August???
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-23 00:00:00","2020-09-01 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-23 0:00:00","2020-09-01 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-08-28 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-30 05:00:00", tz="America/Anchorage"), col="purple")

# Storm 9a # 
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 0:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-03 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-05 05:00:00", tz="America/Anchorage"), col="purple")

# Storm 9b # 
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 0:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-06 22:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-07 23:00:00", tz="America/Anchorage"), col="purple")

# Storm 9c # 
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-01 00:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-01 0:00:00","2020-09-12 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-09 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-12 20:00:00", tz="America/Anchorage"), col="purple")

# Storm 9.5??? #  NOTHING
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-13 00:00:00","2020-09-20 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-13 0:00:00","2020-09-20 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-09 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-12 20:00:00", tz="America/Anchorage"), col="purple")

# Storm 10 # 
plot(strt.final.discharge$MeanDischarge ~ strt.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-21 00:00:00","2020-09-30 20:00:00"), tz="America/Anchorage"))
abline(h=STRT_bfQ_mn*2, col="red", lty=2)
abline(h=STRT_bfQ_mn, col="red")
par(new = T)


plot(STRT.st.final$Precip ~ STRT.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-21 0:00:00","2020-09-30 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(strt.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(strt.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-09-09 08:15:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-12 20:00:00", tz="America/Anchorage"), col="purple")



# VAUL #
# VAUL rain gauge installed on the 22nd of June but added FRCH rain gauge on for before that#
plot(VAUL.st.final$inst_rainfall_mm ~ VAUL.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'VAUL precip. (mm)') 
abline(v = as.POSIXct(vaul.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.five.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)
plot(VAUL.st.final$inst_rainfall_mm ~ VAUL.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")

abline(v = as.POSIXct(vaul.ten.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(vaul.ten.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)
plot(VAUL.st.final$inst_rainfall_mm ~ VAUL.st.final$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(vaul.final.discharge$MeanDischarge ~ vaul.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage")) 
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
lines(VAUL$nitrateuM * 5 ~ VAUL.no3$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(VAUL$fDOM.RFU * 5 ~ VAUL.fDOM$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))


### Storms ###
# VAUL #
# Storm 1
plot(vaul.final.discharge$MeanDischarge ~ vaul.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",ylim = c(0,1200), col="blue", main="VAUL",
     xlim = as.POSIXct(c("2020-06-23 00:00:00","2020-06-24 23:00:00"), tz="America/Anchorage"))
abline(h=VAUL_bfQ_mn*2, col="red", lty=2)
abline(h=VAUL_bfQ_mn, col="red")
par(new = T)
par(mar=c(3,5,3,5), bty = "n")

plot(VAUL.st$inst_rainfall_mm ~ VAUL.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2020-06-23 00:00:00","2020-06-24 23:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v= as.POSIXct("2020-06-23 01:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-24 23:00:00", tz="America/Anchorage"), col="purple")

## POKE ##
### Import precipitation data from LTER ### 
plot(poke.gauge$Precip ~ poke.gauge$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-01 0:00:00","2020-10-31 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'POKE precip. (mm)') 
abline(v = as.POSIXct(poke.ten.fourty.eight$DateTime), col = "red", lwd = 0.1)
abline(v = as.POSIXct(poke.ten.twenty.four$DateTime), col="blue", lwd = 0.1)
par(new = T)

plot(poke.final.discharge$MeanDischarge ~ poke.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=POKE_bfQ_mn*2, col="red", lty=2)
abline(h=POKE_bfQ_mn, col="red")
lines(POKE$nitrateuM * 25 ~ POKE.no3$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(POKE$fDOM.RFU * 15 ~ POKE.no3$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))

### STORMS ###
# Storm 1 #

### MOOS ###
### Import precipitation data into the *ALL document ### 
# FRCH rain gauge installed on the 11th of June. 
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'FRCH precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)


abline(v = as.POSIXct(frch.ten.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.ten.twenty.four$DateTime), col="green", lwd = 0.1)
par(new = T)
plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-05 0:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"),
     ylim = c(15,0), 
     axes=F, xlab="", ylab="")
par(new = T)
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
lines(MOOS$nitrateuM * 40 ~ MOOS.no3$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))
lines(MOOS$fDOM.RFU * 20 ~ MOOS.fDOM$DateTime, type="l", xlab="", ylab="", col="purple",
      xlim = as.POSIXct(c("2020-06-01 00:00:00","2020-10-15 01:00:00"), tz="America/Anchorage"))


### STORMS ###
# Storm 1 #
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-21 00:00:00","2020-07-10 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-21 0:00:00","2020-07-10 00:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v= as.POSIXct("2020-06-20 19:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-28 10:00:00", tz="America/Anchorage"), col="purple")

# Storm 2 #
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-21 00:00:00","2020-07-10 00:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)

plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-06-21 0:00:00","2020-07-10 00:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v= as.POSIXct("2020-06-20 19:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-06-28 10:00:00", tz="America/Anchorage"), col="purple")

plot(FRCH$MeanDischarge ~ FRCH$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-06-20 00:00:00","2020-07-07 00:00:00"), tz="America/Anchorage"))
abline(h=FRCH_bfQ_mn*2, col="red", lty=2)
abline(h=FRCH_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$datetimeAK, type="h",
     xlim = as.POSIXct(c("2020-06-20 0:00:00","2020-07-07 00:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v= as.POSIXct("2020-06-20 18:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-07 00:00:00", tz="America/Anchorage"), col="purple")

# Storm 2 # Doesnt show an increase in discharge
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-14 00:00:00","2020-07-15 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-14 0:00:00","2020-07-16 00:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v= as.POSIXct("2020-07-14 12:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-15 10:00:00", tz="America/Anchorage"), col="purple")

# Storm 3 #
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-20 00:00:00","2020-07-24 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-20 0:00:00","2020-07-24 00:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.1)
abline(v= as.POSIXct("2020-07-20 11:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-23 12:00:00", tz="America/Anchorage"), col="purple")

# Storm 4 # Doesnt really show in increase in discharge
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-07-27 00:00:00","2020-07-28 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-07-27 0:00:00","2020-07-28 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.5)
abline(v= as.POSIXct("2020-07-27 2:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-07-27 23:45:00", tz="America/Anchorage"), col="purple")

# Storm 5a # 
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-01 20:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-02 23:45:00", tz="America/Anchorage"), col="purple")

# Storm 5b # 
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-01 00:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-01 0:00:00","2020-08-06 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-03 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-06 10:45:00", tz="America/Anchorage"), col="purple")

# Storm 6a # 
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-16 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-09 0:00:00","2020-08-16 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-09 10:30:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-12 07:45:00", tz="America/Anchorage"), col="purple")

# Storm 6b # 
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-09 00:00:00","2020-08-16 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-09 0:00:00","2020-08-16 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-12 08:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-16 19:45:00", tz="America/Anchorage"), col="purple")

# Storm 7 # Not showing an increase in discharge....I was thinking there might be an A & B within this window
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-08-20 00:00:00","2020-08-26 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-08-20 0:00:00","2020-08-26 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-08-12 08:00:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-08-16 19:45:00", tz="America/Anchorage"), col="purple")

# Storm 8 # 
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-03 00:00:00","2020-09-08 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-03 0:00:00","2020-09-08 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-09-03 10:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-06 18:45:00", tz="America/Anchorage"), col="purple")

# Storm 9 # 
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-08 00:00:00","2020-09-13 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-08 0:00:00","2020-09-13 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-09-09 08:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-13 18:45:00", tz="America/Anchorage"), col="purple")

# Checking to see if the rest of the data set has a storm in it and it doesnt appear so 
plot(moos.final.discharge$MeanDischarge ~ moos.final.discharge$DateTime, type="l", xlab="", ylab="Q (L/sec)",
     xlim = as.POSIXct(c("2020-09-13 0:00:00","2020-10-13 20:00:00"), tz="America/Anchorage"))
abline(h=MOOS_bfQ_mn*2, col="red", lty=2)
abline(h=MOOS_bfQ_mn, col="red")
par(new = T)


plot(FRCH.st$inst_rainfall_mm ~ FRCH.st$DateTime, type="h",
     xlim = as.POSIXct(c("2020-09-13 0:00:00","2020-10-13 20:00:00"), tz="America/Anchorage"),
     ylim = c(5,0), 
     axes=F, xlab="", ylab="")
axis(side = 4)
mtext(side = 4, line = 3, 'CRREL Met Station precip. (mm)') 
abline(v = as.POSIXct(frch.five.fourty.eight$DateTime), col = "yellow", lwd = 0.1)
abline(v = as.POSIXct(frch.five.twenty.four$DateTime), col="green", lwd = 0.3)
abline(v= as.POSIXct("2020-09-09 08:45:00", tz="America/Anchorage"), col="purple")
abline(v= as.POSIXct("2020-09-13 18:45:00", tz="America/Anchorage"), col="purple")




###################################################################################################
############################## 2019 & 2020 data together #########################################
###################################################################################################
#import 2019 
FRCH_Q_2019 <- read_csv("~/Documents/DoD_2019/Storm Analysis/Plots/Hydrograph Separation /FRCH/FRCH_Q_2019.csv") # discharge per day
FRCH_final_2019 <- read_csv("~/Documents/DoD_2019/Q/Final_Q/FRCH/FRCH.csv") # predicted discharge
FRCH_final_2019 <- FRCH_final_2019[,-c(4:5)] # Remove PTs
#import 2020 discharge per day
FRCH_Q_2020 <- read_csv("Predicted_Discharge/Processed/FRCH_Q_2020.csv")
FRCH_final_2020 <- read_csv("Predicted_Discharge/Processed/FRCH.csv")
names(FRCH_final_2020) <- c("Site", "DateTime", "MeanDischarge")

#Combine data sets
FRCH_all <- full_join(FRCH_Q_2019, FRCH_Q_2020)
FRCH_ALL.final.discharge <- full_join(FRCH_final_2019, FRCH_final_2020)

any(is.na(FRCH_ALL.final.discharge))
FRCH_ALL.final.discharge <- na.omit(FRCH_ALL.final.discharge) # Removed 4 rows

any(is.na(FRCH_all))
FRCH_all <- na.omit(FRCH_all) # Removed 22 rows

FRCH_Q_bf_2019_2020 = BaseflowSeparation(FRCH_ALL.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH_all, select = c(day, Discharge_Lsec)), streamflow2 = FRCH_Q_bf_2019_2020$bt) 

FRCH_Q_bf = BaseflowSeparation(frch.final.discharge$MeanDischarge, filter_parameter = 0.90, passes = 3)
hydrograph(input=subset(FRCH_Q, select = c(day, Discharge_Lsec)), streamflow2=FRCH_Q_bf$bt) 
hydrograph(FRCH_Q_bf_2019_2020)

