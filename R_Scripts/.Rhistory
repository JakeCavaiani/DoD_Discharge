STRT.2022.dt <- subset(STRT.2022.dt, DateTimeAK < "2022-09-02 05:00:00") # removing rows that had dates corresponding to end of record that messed up the rolling nearest function
View(STRT.2022.dt)
View(STRT.2022)
View(strt.final.pressure.2022)
# join the two atmospheric and water pressure together
STRT.2022 <- left_join(eielson.atmo.2022.compare, strt.final.pressure.2022, by = "DateTimeAK")
# Water pressure - atmospheric pressure
STRT.2022$difference <- STRT.2022$WaterPressure - STRT.2022$AirPressureCorrectedSTRT
STRT.2022 <-  STRT.2022[ , -which(names(STRT.2022) %in% c("TempC"))] # removing columns I do not need
STRT.2022$Site <- "STRT"
# trying to merge by nearest date if we have an offset point
STRT.2022.dt <- setDT(STRT.2022)
STRT.2022.dt <- subset(STRT.2022.dt, DateTimeAK < "2022-09-02 05:00:00") # removing rows that had dates corresponding to end of record that messed up the rolling nearest function
# join the two atmospheric and water pressure together
STRT.2022 <- left_join(eielson.atmo.2022.compare, strt.final.pressure.2022, by = "DateTimeAK")
# Water pressure - atmospheric pressure
STRT.2022$difference <- STRT.2022$WaterPressure - STRT.2022$AirPressureCorrectedSTRT
STRT.2022 <-  STRT.2022 %>% filter(!difference %in% NA)
# trying to merge by nearest date if we have an offset point
STRT.2022.dt <- setDT(STRT.2022)
STRT.2022.dt <- subset(STRT.2022.dt, DateTimeAK < "2022-09-02 05:00:00") # removing rows that had dates corresponding to end of record that messed up the rolling nearest function
QSummary.ST.2022.dt <- QSummary.ST.2022
Stuart1comb.2022 <- STRT.2022.dt[QSummary.ST.2022.dt, on = "DateTimeAK", roll = 'nearest']
View(Stuart1comb.2022)
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference)
### Filter STRT ###
strt.formula <- y ~ x
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Stuart all measured Q")
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference + Stuart1comb.2022$difference^2)
strt.formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
#xlim(216, 216.4) +
#ylim(0,1500) +
theme_light() +
ggtitle("Stuart all measured Q")
Stuart1comb.2022.2 <- Stuart1comb.2022 %>% filter(difference > 4.5 | MeasuredQ_Ls <1250) %>% filter(Method == "Wading Rod")
STRT1.lm.2022 <- lm(Stuart1comb.2022.2$MeasuredQ_Ls ~ Stuart1comb.2022.2$difference + Stuart1comb.2022.2$difference^2)
strt.formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022.2) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Stuart all measured Q")
Stuart1comb.2022 <- Stuart1comb.2022 %>% filter(difference > 4.5 | MeasuredQ_Ls <1250)
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference + Stuart1comb.2022$difference^2)
strt.formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Stuart all measured Q")
STRT.lm.2022 <- lm(STRT1comb.2022$MeasuredQ_Ls ~ Moose1comb.2022$difference + Moose1comb.2022$difference^2)
STRT.lm.2022 <- lm(STRT1comb.2022$MeasuredQ_Ls ~ STRT1comb.2022$difference + STRT1comb.2022$difference^2)
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference + Stuart1comb.2022$difference^2)
STRT.2022.dt$pred.moos1.Q <- coef(STRT1.lm.2022)[2] * STRT.2022.dt$difference+ coef(STRT1.lm.2022)[1]
STRT.2022.dt <- STRT.2022.dt %>% select(DateTimeAK, pred.moos1.Q)
STRT.2022.dt$pred.strt1.Q <- coef(STRT1.lm.2022)[2] * STRT.2022.dt$difference+ coef(STRT1.lm.2022)[1]
STRT.2022.dt <- STRT.2022.dt %>% select(DateTimeAK, pred.moos1.Q)
STRT.2022.dt %>% na.omit() %>% ggplot(aes(x = DateTimeAK, y = pred.strt1.Q)) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(data = STRT1comb.2022, aes(x = DateTimeAK, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("STRT predicted and measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
STRT.2022.dt %>% na.omit() %>% ggplot(aes(x = DateTimeAK, y = pred.strt1.Q)) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(data = Stuart1comb.2022, aes(x = DateTimeAK, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("STRT predicted and measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
# trying to merge by nearest date if we have an offset point
STRT.2022.dt <- setDT(STRT.2022)
STRT.2022.dt <- subset(STRT.2022.dt, DateTimeAK < "2022-09-02 05:00:00") # removing rows that had dates corresponding to end of record that messed up the rolling nearest function
QSummary.ST.2022.dt <- QSummary.ST.2022
Stuart1comb.2022 <- STRT.2022.dt[QSummary.ST.2022.dt, on = "DateTimeAK", roll = 'nearest']
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference)
### Filter STRT ###
strt.formula <- y ~ x
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Stuart all measured Q")
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference + Stuart1comb.2022$difference^2)
strt.formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Stuart all measured Q")
STRT.2022.dt$pred.strt1.Q <- coef(STRT1.lm.2022)[2] * STRT.2022.dt$difference+ coef(STRT1.lm.2022)[1]
STRT.2022.dt <- STRT.2022.dt %>% select(DateTimeAK, pred.moos1.Q)
STRT.2022.dt %>% na.omit() %>% ggplot(aes(x = DateTimeAK, y = pred.strt1.Q)) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(data = Stuart1comb.2022, aes(x = DateTimeAK, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("STRT predicted and measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
# trying to merge by nearest date if we have an offset point
STRT.2022.dt <- setDT(STRT.2022)
# trying to merge by nearest date if we have an offset point
STRT.2022.dt <- setDT(STRT.2022)
QSummary.ST.2022.dt <- QSummary.ST.2022
Stuart1comb.2022 <- STRT.2022.dt[QSummary.ST.2022.dt, on = "DateTimeAK", roll = 'nearest']
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference)
### Filter STRT ###
strt.formula <- y ~ x
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Stuart all measured Q")
STRT1.lm.2022 <- lm(Stuart1comb.2022$MeasuredQ_Ls ~ Stuart1comb.2022$difference + Stuart1comb.2022$difference^2)
strt.formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(aes(x = difference, y = MeasuredQ_Ls), data = Stuart1comb.2022) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = strt.formula) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_light() +
ggtitle("Stuart all measured Q")
STRT.2022.dt$pred.strt1.Q <- coef(STRT1.lm.2022)[2] * STRT.2022.dt$difference+ coef(STRT1.lm.2022)[1]
STRT.2022.dt <- STRT.2022.dt %>% select(DateTimeAK, pred.moos1.Q)
STRT.2022.dt %>% na.omit() %>% ggplot(aes(x = DateTimeAK, y = pred.strt1.Q)) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(data = Stuart1comb.2022, aes(x = DateTimeAK, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("STRT predicted and measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
STRT.2022.dt <- STRT.2022.dt %>% select(DateTimeAK, pred.moos1.Q)
STRT.2022.dt <- STRT.2022.dt %>% select(DateTimeAK, pred.strt1.Q)
STRT.2022.dt %>% na.omit() %>% ggplot(aes(x = DateTimeAK, y = pred.strt1.Q)) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(data = Stuart1comb.2022, aes(x = DateTimeAK, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("STRT predicted and measured Q") +
xlab("Date") +
ylab("Discharge (L/s)")
frch.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRkT5GIhFY4nLblzPi4Upc8y6Pk2k4vXLSGAkFyMhLowsCmct0fZ5rxm-vd85RfFr7YLrCuuSiOqQbL/pub?output=csv"
frch.stream.two.2022.url <-  "https://docs.google.com/spreadsheets/d/e/2PACX-1vRiDAbzBj_jHk1Hd3iM7fFvzMrRCSF9fbKTcmQD_dUFGOjoIQuBZBKV4KdNhfevLOq0Udch0LbWiKXw/pub?output=csv"
# load in url
frch.stream.one.2022 <- read.csv(url(frch.stream.one.2022.url), skip = 1)
frch.stream.two.2022 <- read.csv(url(frch.stream.two.2022.url), skip = 1)
# clean for merging purposes
frch.stream.one.2022 <- frch.stream.one.2022[, -c(5:13)] # removing columns that arent date/abs pressure and temp
frch.stream.two.2022 <- frch.stream.two.2022[, -c(5:14)] # removing columns that arent date/abs pressure and temp
# changing to AK time (It reads in as GMT but it is actually AKST )
frch.stream.one.2022$DateTimeAK <- mdy_hms(frch.stream.one.2022$Date.Time..GMT.08.00)
frch.stream.two.2022$DateTimeAK <- mdy_hms(frch.stream.two.2022$Date.Time..GMT.08.00)
# round date to 5 minute intervals
frch.stream.one.2022$DateTimeAK <- lubridate::round_date(frch.stream.one.2022$DateTimeAK, "15 minutes")
frch.stream.two.2022$DateTimeAK <- lubridate::round_date(frch.stream.two.2022$DateTimeAK, "15 minutes")
# cleaning off original datetime
frch.stream.one.2022 <- frch.stream.one.2022[, -c(2)] # removing columns that aren't date/abs pressure and temp
frch.stream.two.2022 <- frch.stream.two.2022[, -c(2)] # removing columns that arent
names(frch.stream.one.2022) <- c("Site", "WaterPressure", "TempC", "DateTimeAK")
names(frch.stream.two.2022) <- c("Site", "WaterPressure", "TempC", "DateTimeAK")
# merge to one
frch.final.pressure.2022 <- left_join(frch.stream.one.2022, frch.stream.two.2022, by = c("DateTimeAK"))
frch.final.pressure.2022$MeanPressure <- rowMeans(frch.final.pressure.2022[,c(2,6)], na.rm = TRUE)
ggplot(frch.stream.one.2022, aes(x = DateTimeAK, y = WaterPressure))+
geom_point() +
theme_classic()
frch.stream.one.2022 <- frch.stream.one.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-05-09" & DateTimeAK <= "2022-05-12", NA, .))) # PT wasnt placed into the stream until 5/12
frch.stream.one.2022 <- frch.stream.one.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-08-01" & DateTimeAK <= "2022-08-15" &
WaterPressure < 102, NA, .))) %>% filter(WaterPressure > 98.4) # PT wasnt placed into the stream until 5/12
ggplot(frch.stream.one.2022, aes(x = DateTimeAK, y = WaterPressure))+
geom_point() +
theme_classic()
ggplot(frch.stream.two.2022, aes(x = DateTimeAK, y = WaterPressure))+
geom_point() +
theme_classic()
frch.stream.two.2022 <- frch.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-08-01" & DateTimeAK <= "2022-08-15" &
WaterPressure < 100, NA, .))) %>% filter(WaterPressure > 98.4)# PT wasnt placed into the stream until 5/12
ggplot(frch.stream.two.2022, aes(x = DateTimeAK, y = WaterPressure))+
geom_point() +
theme_classic()
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
mean(frch.pt.both$WaterPressure.x - frch.pt.both$WaterPressure.y, na.rm = TRUE)
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y + 1.36, frch.pt.both$WaterPressure.x)
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged), data = frch.pt.both) +
geom_line()
frch.pt.both %>% ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y + 1.36), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
frch.pt.both %>% ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-07-15") %>% ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% #filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-07-15") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-07-15") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% #filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-07-15") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-07-30") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% filter(DateTimeAK > "2022-07-04" & DateTimeAK < "2022-07-11") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRkT5GIhFY4nLblzPi4Upc8y6Pk2k4vXLSGAkFyMhLowsCmct0fZ5rxm-vd85RfFr7YLrCuuSiOqQbL/pub?output=csv"
frch.stream.two.2022.url <-  "https://docs.google.com/spreadsheets/d/e/2PACX-1vRiDAbzBj_jHk1Hd3iM7fFvzMrRCSF9fbKTcmQD_dUFGOjoIQuBZBKV4KdNhfevLOq0Udch0LbWiKXw/pub?output=csv"
# load in url
frch.stream.one.2022 <- read.csv(url(frch.stream.one.2022.url), skip = 1)
frch.stream.two.2022 <- read.csv(url(frch.stream.two.2022.url), skip = 1)
# clean for merging purposes
frch.stream.one.2022 <- frch.stream.one.2022[, -c(5:13)] # removing columns that arent date/abs pressure and temp
frch.stream.two.2022 <- frch.stream.two.2022[, -c(5:14)] # removing columns that arent date/abs pressure and temp
# changing to AK time (It reads in as GMT but it is actually AKST )
frch.stream.one.2022$DateTimeAK <- mdy_hms(frch.stream.one.2022$Date.Time..GMT.08.00)
frch.stream.two.2022$DateTimeAK <- mdy_hms(frch.stream.two.2022$Date.Time..GMT.08.00)
# round date to 5 minute intervals
frch.stream.one.2022$DateTimeAK <- lubridate::round_date(frch.stream.one.2022$DateTimeAK, "15 minutes")
frch.stream.two.2022$DateTimeAK <- lubridate::round_date(frch.stream.two.2022$DateTimeAK, "15 minutes")
# cleaning off original datetime
frch.stream.one.2022 <- frch.stream.one.2022[, -c(2)] # removing columns that aren't date/abs pressure and temp
frch.stream.two.2022 <- frch.stream.two.2022[, -c(2)] # removing columns that arent
names(frch.stream.one.2022) <- c("Site", "WaterPressure", "TempC", "DateTimeAK")
names(frch.stream.two.2022) <- c("Site", "WaterPressure", "TempC", "DateTimeAK")
# Take average at 30 min interval
frch.stream.two.2022$DateTimeAK <- lubridate::round_date(frch.stream.two.2022$DateTimeAK, "30 minutes")
frch.stream.one.2022$DateTimeAK <- lubridate::round_date(frch.stream.one.2022$DateTimeAK, "30 minutes")
# Take average pressure
frch.stream.two.2022 <- frch.stream.two.2022 %>% group_by(DateTimeAK) %>% summarise(DateTimeAK = unique(DateTimeAK), WaterPressure = mean(WaterPressure))
frch.stream.one.2022 <- frch.stream.one.2022 %>% group_by(DateTimeAK) %>% summarise(DateTimeAK = unique(DateTimeAK), WaterPressure = mean(WaterPressure))
# merge to one
frch.final.pressure.2022 <- left_join(frch.stream.one.2022, frch.stream.two.2022, by = c("DateTimeAK"))
frch.final.pressure.2022$MeanPressure <- rowMeans(frch.final.pressure.2022[,c(2,6)], na.rm = TRUE)
# merge to one
frch.final.pressure.2022 <- left_join(frch.stream.one.2022, frch.stream.two.2022, by = c("DateTimeAK"))
ggplot(frch.stream.one.2022, aes(x = DateTimeAK, y = WaterPressure))+
geom_point() +
theme_classic()
frch.stream.one.2022 <- frch.stream.one.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-05-09" & DateTimeAK <= "2022-05-12", NA, .))) # PT wasnt placed into the stream until 5/12
frch.stream.one.2022 <- frch.stream.one.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-08-01" & DateTimeAK <= "2022-08-15" &
WaterPressure < 102, NA, .))) %>% filter(WaterPressure > 98.4) # PT wasnt placed into the stream until 5/12
ggplot(frch.stream.one.2022, aes(x = DateTimeAK, y = WaterPressure))+
geom_point() +
theme_classic()
ggplot(frch.stream.two.2022, aes(x = DateTimeAK, y = WaterPressure))+
geom_point() +
theme_classic()
frch.stream.two.2022 <- frch.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-08-01" & DateTimeAK <= "2022-08-15" &
WaterPressure < 100, NA, .))) %>% filter(WaterPressure > 98.4)# PT wasnt placed into the stream until 5/12
ggplot(frch.stream.two.2022, aes(x = DateTimeAK, y = WaterPressure))+
geom_point() +
theme_classic()
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
mean(frch.pt.both$WaterPressure.x - frch.pt.both$WaterPressure.y, na.rm = TRUE)
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
frch.pt.both %>% filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% #filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
frch.pt.both %>% #filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
## Clean merged water pressure data
# Remove outliers in June
frch.stream.two.2022 <- frch.stream.two.2022 %>% filter(WaterPressure.merged > 100)
## Clean merged water pressure data
# Remove outliers in June
frch.pt.both <- frch.stream.two.2022 %>% filter(WaterPressure.merged > 100)
View(frch.pt.both)
## Clean merged water pressure data
# Remove outliers in June
frch.pt.both <- frch.pt.both %>% filter(WaterPressure.merged > 100)
# Shift step in July
frch.before <- frch.pt.both[c(1:3473), ]
frch.after <- frch.pt.both[c(34734:40000), ]
frch.pt.both[3474, 4] - frch.pt.both[3473, 4] # 1.037
frch.after$WaterPressure.merged <- frch.after[, 4] - 2.678
frch.pt.both <- rbind(frch.before, frch.after)
frch.pt.both %>% #filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
class(frch.pt.both$WaterPressure.merged)
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
class(frch.pt.both$WaterPressure.merged)
## Clean merged water pressure data
# Remove outliers in June
frch.pt.both <- frch.pt.both %>% filter(WaterPressure.merged > 100)
class(frch.pt.both$WaterPressure.merged)
# Shift step in July
frch.before <- frch.pt.both[c(1:3473), ]
frch.after <- frch.pt.both[c(34734:40000), ]
frch.pt.both[3474, 4] - frch.pt.both[3473, 4] # 1.037
# Shift step in July
frch.before <- frch.pt.both[c(1:3473), ]
frch.after <- frch.pt.both[c(34734:40000), ]
frch.pt.both[3474, 4] - frch.pt.both[3473, 4] # 1.037
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
frch.pt.both %>% #filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
## Clean merged water pressure data
# Remove outliers in June
frch.pt.both <- frch.pt.both %>% filter(WaterPressure.merged > 100)
# Shift step in July
frch.before <- frch.pt.both[c(1:3473), ]
frch.after <- frch.pt.both[c(34734:40000), ]
frch.pt.both[3474, 4] - frch.pt.both[3473, 4] # 1.037
frch.after$WaterPressure.merged <- frch.after[, 4] + 2.678
frch.pt.both <- rbind(frch.before, frch.after)
class(frch.pt.both$WaterPressure.merged)
frch.pt.both <- full_join(frch.before, frch.after)
View(frch.after)
frch.after$WaterPressure.merged <- frch.after$WaterPressure.merged + 2.678
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
frch.pt.both %>% #filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
## Clean merged water pressure data
# Remove outliers in June
frch.pt.both <- frch.pt.both %>% filter(WaterPressure.merged > 100)
# Shift step in July
frch.before <- frch.pt.both[c(1:3473), ]
frch.after <- frch.pt.both[c(34734:40000), ]
frch.pt.both[3474, 4] - frch.pt.both[3473, 4] # -2.678
frch.after$WaterPressure.merged <- frch.after$WaterPressure.merged + 2.678
frch.after$WaterPressure.merged <- frch.after$WaterPressure.merged + 2.678
frch.pt.both <- rbind(frch.before, frch.after)
class(frch.pt.both$WaterPressure.merged)
frch.pt.both %>% #filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
## Clean merged water pressure data
# Remove outliers in June
frch.pt.both <- frch.pt.both %>% filter(WaterPressure.merged > 100)
# Shift step in July
frch.before <- frch.pt.both[c(1:3473), ]
frch.after <- frch.pt.both[c(3474:40000), ]
frch.pt.both[3474, 4] - frch.pt.both[3473, 4] # -2.678
frch.after$WaterPressure.merged <- frch.after$WaterPressure.merged + 2.678
frch.pt.both <- rbind(frch.before, frch.after)
frch.pt.both %>% #filter(DateTimeAK > "2022-07-08" & DateTimeAK < "2022-07-09") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% filter(DateTimeAK > "2022-06-01" & DateTimeAK < "2022-07-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both <- frch.pt.both %>% filter(!DateTimeAK %in% NA)
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$WaterPressure.x %in% NA, frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
# Shift step in July
frch.before <- frch.pt.both[c(1:3473), ]
frch.after <- frch.pt.both[c(3474:40000), ]
frch.pt.both[3474, 4] - frch.pt.both[3473, 4] # -2.678
frch.after$WaterPressure.merged <- frch.after$WaterPressure.merged + 2.678
frch.pt.both <- rbind(frch.before, frch.after)
frch.pt.both <- frch.pt.both %>% filter(!DateTimeAK %in% NA)
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point() + geom_point(aes("2022-08-02 12:00:00", 106.3017))
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
View(frch.after)
View(frch.before)
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
View(frch.stream.one.2022)
View(frch.stream.two.2022)
frch.pt.both$WaterPressure.merged <- ifelse(DateTimeAK >= "2022-07-23 17:00:00" & DateTimeAK <= "2022-08-02 12:00:00", WaterPressure.y, WaterPressure.x)
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$DateTimeAK >= "2022-07-23 17:00:00" & frch.pt.both$DateTimeAK <= "2022-08-02 12:00:00", frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
frch.pt.both %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
frch.pt.both %>% #filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
## Clean merged water pressure data
# Remove outliers in June
frch.pt.both <- frch.pt.both %>% filter(WaterPressure.merged > 100)
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
frch.pt.both$WaterPressure.merged <- ifelse(frch.pt.both$DateTimeAK >= "2022-07-23 17:00:00" & frch.pt.both$DateTimeAK <= "2022-08-02 12:00:00", frch.pt.both$WaterPressure.y, frch.pt.both$WaterPressure.x)
frch.pt.both %>% #filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure.merged)) +
geom_point()
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
# Checking closeness between two PTs
frch.pt.both <- full_join(frch.stream.one.2022, frch.stream.two.2022, by = "DateTimeAK")
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_line(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_line(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
ggplot(aes(x = DateTimeAK, y = WaterPressure.x), data = frch.pt.both) +
geom_point(aes(x=DateTimeAK, y=WaterPressure.x), data = frch.pt.both, color="#A6CEE3") +
geom_point(aes(x=DateTimeAK, y=WaterPressure.y), data = frch.pt.both, color="#FF7F00") +
theme_classic() +
ggtitle("FRCH PT1(blue) & FRCH PT2(orange) Water Pressure")
