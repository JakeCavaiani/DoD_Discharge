parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
View(Moos1comb.2021)
View(QSummary.MO.2021)
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(TZ='America/Anchorage')
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
library(rio)
library(neonUtilities)
library(raster)
library(data.table)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(imputeTS)
library(itsmr)
library(here)
poke.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRuPTbgwOrFhhVETrN4HMpVoHrNVwLSecr0acVH7i8ePtxme0PxX1tR_SQ7Mqlg3iiCOHUFw80NFfA5/pub?output=csv"
poke.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTgmuOVxwxSfNzLsb76OmrUQhYzl6prnjP17ubO4XV7x0T0bMpUX7jX5itel6oPe3HDCORnoYD25IgU/pub?output=csv"
strt.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTBHVco3KO6uDX5ixIteIKLgnLUTe1GIGYK-8WBM2eXn1VWvthOjFIGvmXyVOq3l2vnxiBQQaDzbqE1/pub?output=csv"
strt.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTqHls7RlLhnawrL43INl8xLeRLigkYcLhNaUtpHBCN91YmE0rCpNJqBiwvJKp9d0rDapG_UGid43fC/pub?output=csv"
vaul.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSUpdW2ARqdQmnNzpRIbIyGD24DhBSwL5CHFzAG8bwhOsttnyU2nehzfJ0gG8BZHX2VbSc3W1NikCIH/pub?output=csv"
frch.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQi6_PAev36hNhtcXdBBQk3pyJqBoQEKpV8tSvtZgz_DPdqXSg93-d_FDomNSH_lkNhb7fJJVloxl1g/pub?output=csv"
frch.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vR0NaSrjYnUkQC42v448LFY0EZEr98R6a2gH0FpPlMBwpfEDY80rSzbDOP3OfpB-SI4QQBCOMgoQxd2/pub?output=csv"
moos.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSVsPDDkXNKBU9Ux2qnvtWl-HS0hgXM2cww9_1l2Xz0Vc9C1_KA2Ss56FuS1fq8mESdgqq2Pl5Nvw6o/pub?output=csv"
moos.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRCnhugeQ8EmP9P22kirbLQhPgDwFoPyMmZ4SR05jSHgleJBcUQYjNb3K2w6hGtdu4W-XJixdl8fk6-/pub?output=csv"
# Load Data#
poke.stream.one.2021 <- read.csv(url(poke.stream.2021.url), skip = 1)
poke.stream.two.2021 <- read.csv(url(poke.stream.2021.url.two), skip = 1)
strt.stream.one.2021 <- read.csv(url(strt.stream.2021.url), skip = 1) # Deployed the 7th of May
strt.stream.two.2021 <- read.csv(url(strt.stream.2021.url.two), skip = 1) # Deployed the 19th of May
vaul.stream.one.2021 <- read.csv(url(vaul.stream.2021.url), skip = 1)
frch.stream.one.2021 <- read.csv(url(frch.stream.2021.url), skip = 1) # Deployed the 7th of May
frch.stream.two.2021 <- read.csv(url(frch.stream.2021.url.two), skip = 1) # Deployed the 19th of May
moos.stream.one.2021 <- read.csv(url(moos.stream.2021.url), skip = 1) # Deployed the 7th of May
moos.stream.two.2021 <- read.csv(url(moos.stream.2021.url.two), skip = 1) # Deployed the 19th of May
# Erase columns that are unneeded
poke.stream.one.2021 <- poke.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
poke.stream.two.2021 <- poke.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
strt.stream.one.2021 <- strt.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
strt.stream.two.2021 <- strt.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
vaul.stream.one.2021 <- vaul.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
frch.stream.one.2021 <- frch.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
frch.stream.two.2021 <- frch.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
moos.stream.one.2021 <- moos.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
moos.stream.two.2021 <- moos.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
# Rename columns
names(poke.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(poke.stream.two.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(strt.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(strt.stream.two.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(vaul.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(frch.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(frch.stream.two.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(moos.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(moos.stream.two.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
# Input NAs for time
poke.stream.one.2021$DateTime[poke.stream.one.2021$DateTime == ""] <- NA
poke.stream.two.2021$DateTime[poke.stream.two.2021$DateTime == ""] <- NA
strt.stream.one.2021$DateTime[strt.stream.one.2021$DateTime == ""] <- NA
strt.stream.two.2021$DateTime[strt.stream.two.2021$DateTime == ""] <- NA
vaul.stream.one.2021$DateTime[vaul.stream.one.2021$DateTime == ""] <- NA
frch.stream.one.2021$DateTime[frch.stream.one.2021$DateTime == ""] <- NA
frch.stream.two.2021$DateTime[frch.stream.two.2021$DateTime == ""] <- NA
moos.stream.one.2021$DateTime[moos.stream.one.2021$DateTime == ""] <- NA
moos.stream.two.2021$DateTime[moos.stream.two.2021$DateTime == ""] <- NA
# Set as AK time
poke.stream.one.2021$DateTime <- mdy_hms(poke.stream.one.2021$DateTime, tz = "America/Anchorage")
poke.stream.two.2021$DateTime <- mdy_hms(poke.stream.two.2021$DateTime, tz = "America/Anchorage")
strt.stream.one.2021$DateTime <- mdy_hms(strt.stream.one.2021$DateTime, tz = "America/Anchorage")
strt.stream.two.2021$DateTime <- mdy_hms(strt.stream.two.2021$DateTime, tz = "America/Anchorage")
vaul.stream.one.2021$DateTime <- mdy_hms(vaul.stream.one.2021$DateTime, tz = "America/Anchorage")
frch.stream.one.2021$DateTime <- mdy_hms(frch.stream.one.2021$DateTime, tz = "America/Anchorage")
frch.stream.two.2021$DateTime <- mdy_hms(frch.stream.two.2021$DateTime, tz = "America/Anchorage")
moos.stream.one.2021$DateTime <- mdy_hms(moos.stream.one.2021$DateTime, tz = "America/Anchorage")
moos.stream.two.2021$DateTime <- mdy_hms(moos.stream.two.2021$DateTime, tz = "America/Anchorage")
# Observed discharge
# Import data from google drive #
discharge.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQopx6zhl3WLbG0qJfOtpbsVd6h6M0dOR78mmKMc35CDKnZa88dnrw_kDQg8eklmVV9548gnhJ3XNNo/pub?output=csv"
QSummary.2021 <- read_csv(url(discharge.2021.url))
QSummary.2021$Time[QSummary.2021$Time == ""] <- NA
QSummary.2021$MeasuredQ_Ls[QSummary.2021$MeasuredQ_Ls == " "] <- NA
### Format Time ###
QSummary.2021$Date <- mdy(QSummary.2021$Date)
QSummary.2021$DateTime <- as.POSIXct(paste(QSummary.2021$Date, QSummary.2021$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
QSummary.2021$DateTime <- lubridate::round_date(QSummary.2021$DateTime, "15 minutes")
moos.stream.one.2021 %>% ggplot(aes(DateTime, WaterLevel)) + geom_point()
#moos.stream.one.2021.b <- moos.stream.one.2021
moos.stream.one.2021 <- moos.stream.one.2021.b
moos.stream.one.2021 <- moos.stream.one.2021 %>% subset(moos.stream.one.2021$DateTime <= "2021-09-28 13:00") # cleaning data that is before September 28th due to decommission
# Not visited 9/23
#moos.stream.one.2021[c(29908:30000), 4] <- NA
# Shift jump when site visited on 8/11
moos.stream.one.2021 <- moos.stream.one.2021 %>% mutate(across(c(WaterLevel), ~ifelse(DateTime > "2021-08-11 14:10:00", WaterLevel + 0.11, .)))
moos.stream.one.2021[c(17577:17582), 4] <- NA
moos.stream.one.2021 %>% filter(DateTime > "2021-08-09" & DateTime < "2021-08-12") %>%
ggplot(aes(DateTime, WaterLevel)) + geom_point()
#plot(STRT_RainGauge_2021$inst_rainfall_mm ~ STRT_RainGauge_2021$DateTime, type="h",
#     xlim = as.POSIXct(c("2021-05-04 09:00:00","2021-09-28 06:15:00"), tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
moos.stream.two.2021 %>% filter(DateTime > "2021-09-22") %>% ggplot(aes(DateTime, WaterLevel)) + geom_point()
moos.stream.two.2021 <- moos.stream.two.2021 %>% subset(moos.stream.two.2021$DateTime <= "2021-09-28 13:00") # cleaning data that is before September 28th due to decommission
# Site was not visited on 9/23
#moos.stream.two.2021[c(29900:30000), 4] <- NA
# Shift jump when site visited on 8/11
moos.stream.two.2021 <- moos.stream.two.2021 %>% mutate(across(c(WaterLevel), ~ifelse(DateTime > "2021-08-11 14:10:00", WaterLevel + 0.1, .)))
moos.stream.two.2021 <- moos.stream.two.2021 %>% mutate(across(c(WaterLevel), ~ifelse(DateTime > "2021-08-10" & DateTime < "2021-08-12" & WaterLevel < 165.9, NA, .)))
moos.stream.two.2021 %>% #filter(DateTime > "2021-08-09" & DateTime < "2021-08-12") %>%
ggplot(aes(DateTime, WaterLevel)) + geom_point()
# Add any missing time steps
DateTimeFill <- data.frame(DateTime = seq(ymd_hm("2021-05-04 09:00", tz = "America/Anchorage"),ymd_hm("2021-09-28 13:00", tz = "America/Anchorage"), by = '15 mins'))
moos.stream.one.2021 <- full_join(moos.stream.one.2021, DateTimeFill)
moos.stream.one.2021 <- moos.stream.one.2021[order(moos.stream.one.2021$DateTime),]
moos.stream.one.2021 <- na_kalman(moos.stream.one.2021, maxgap = 10)
moos.stream.two.2021 <- full_join(moos.stream.two.2021, DateTimeFill)
moos.stream.two.2021 <- moos.stream.two.2021[order(moos.stream.two.2021$DateTime),]
moos.stream.two.2021 <- na_kalman(moos.stream.two.2021, maxgap = 10)
moos.pt.2021 <- rbind(moos.stream.one.2021, moos.stream.two.2021)
write.csv(moos.pt.2021, here("PT_data/2021/MOOS/moos.pt.2021.csv"), row.names = FALSE)
### Filter MOOS ###
QSummary.MO.2021 <- QSummary.2021 %>% filter(Site =="MOOS")
### Filter Stuart ###
moos.stream.one.2021$Site <- "MOOS"
moos.stream.one.2021.dt <- setDT(moos.stream.one.2021) %>% filter(!WaterLevel %in% NA)
QSummary.MO.2021.dt <- setDT(QSummary.MO.2021)
Moos1comb.2021 <- moos.stream.one.2021.dt[QSummary.MO.2021.dt, on = "DateTime", roll = 'nearest'] %>% dplyr::select(DateTime, WaterLevel, MeasuredQ_Ls, Method, Date)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
### Filter MOOS ###
QSummary.MO.2021.1 <- QSummary.MO.2021 %>% filter(MeasuredQ_Ls < 1200)
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021.1)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
moos.stream.two.2021 %>% filter(DateTime > "2021-06-20") %>%
ggplot(aes(DateTime, WaterLevel)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(TZ='America/Anchorage')
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
library(rio)
library(neonUtilities)
library(raster)
library(data.table)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(imputeTS)
library(itsmr)
library(here)
poke.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRuPTbgwOrFhhVETrN4HMpVoHrNVwLSecr0acVH7i8ePtxme0PxX1tR_SQ7Mqlg3iiCOHUFw80NFfA5/pub?output=csv"
poke.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTgmuOVxwxSfNzLsb76OmrUQhYzl6prnjP17ubO4XV7x0T0bMpUX7jX5itel6oPe3HDCORnoYD25IgU/pub?output=csv"
strt.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTBHVco3KO6uDX5ixIteIKLgnLUTe1GIGYK-8WBM2eXn1VWvthOjFIGvmXyVOq3l2vnxiBQQaDzbqE1/pub?output=csv"
strt.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vTqHls7RlLhnawrL43INl8xLeRLigkYcLhNaUtpHBCN91YmE0rCpNJqBiwvJKp9d0rDapG_UGid43fC/pub?output=csv"
vaul.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSUpdW2ARqdQmnNzpRIbIyGD24DhBSwL5CHFzAG8bwhOsttnyU2nehzfJ0gG8BZHX2VbSc3W1NikCIH/pub?output=csv"
frch.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQi6_PAev36hNhtcXdBBQk3pyJqBoQEKpV8tSvtZgz_DPdqXSg93-d_FDomNSH_lkNhb7fJJVloxl1g/pub?output=csv"
frch.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vR0NaSrjYnUkQC42v448LFY0EZEr98R6a2gH0FpPlMBwpfEDY80rSzbDOP3OfpB-SI4QQBCOMgoQxd2/pub?output=csv"
moos.stream.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vSVsPDDkXNKBU9Ux2qnvtWl-HS0hgXM2cww9_1l2Xz0Vc9C1_KA2Ss56FuS1fq8mESdgqq2Pl5Nvw6o/pub?output=csv"
moos.stream.2021.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRCnhugeQ8EmP9P22kirbLQhPgDwFoPyMmZ4SR05jSHgleJBcUQYjNb3K2w6hGtdu4W-XJixdl8fk6-/pub?output=csv"
# Load Data#
poke.stream.one.2021 <- read.csv(url(poke.stream.2021.url), skip = 1)
poke.stream.two.2021 <- read.csv(url(poke.stream.2021.url.two), skip = 1)
strt.stream.one.2021 <- read.csv(url(strt.stream.2021.url), skip = 1) # Deployed the 7th of May
strt.stream.two.2021 <- read.csv(url(strt.stream.2021.url.two), skip = 1) # Deployed the 19th of May
vaul.stream.one.2021 <- read.csv(url(vaul.stream.2021.url), skip = 1)
frch.stream.one.2021 <- read.csv(url(frch.stream.2021.url), skip = 1) # Deployed the 7th of May
frch.stream.two.2021 <- read.csv(url(frch.stream.2021.url.two), skip = 1) # Deployed the 19th of May
moos.stream.one.2021 <- read.csv(url(moos.stream.2021.url), skip = 1) # Deployed the 7th of May
moos.stream.two.2021 <- read.csv(url(moos.stream.2021.url.two), skip = 1) # Deployed the 19th of May
# Erase columns that are unneeded
poke.stream.one.2021 <- poke.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
poke.stream.two.2021 <- poke.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
strt.stream.one.2021 <- strt.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
strt.stream.two.2021 <- strt.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
vaul.stream.one.2021 <- vaul.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
frch.stream.one.2021 <- frch.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
frch.stream.two.2021 <- frch.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
moos.stream.one.2021 <- moos.stream.one.2021[,-c(4,5)] # Dont need temperature and barometric pressure
moos.stream.two.2021 <- moos.stream.two.2021[,-c(4,5)] # Dont need temperature and barometric pressure
# Rename columns
names(poke.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(poke.stream.two.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(strt.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(strt.stream.two.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(vaul.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(frch.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(frch.stream.two.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(moos.stream.one.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
names(moos.stream.two.2021) <- c("Site", "DateTime", "AbsolutePressure", "WaterLevel")
# Input NAs for time
poke.stream.one.2021$DateTime[poke.stream.one.2021$DateTime == ""] <- NA
poke.stream.two.2021$DateTime[poke.stream.two.2021$DateTime == ""] <- NA
strt.stream.one.2021$DateTime[strt.stream.one.2021$DateTime == ""] <- NA
strt.stream.two.2021$DateTime[strt.stream.two.2021$DateTime == ""] <- NA
vaul.stream.one.2021$DateTime[vaul.stream.one.2021$DateTime == ""] <- NA
frch.stream.one.2021$DateTime[frch.stream.one.2021$DateTime == ""] <- NA
frch.stream.two.2021$DateTime[frch.stream.two.2021$DateTime == ""] <- NA
moos.stream.one.2021$DateTime[moos.stream.one.2021$DateTime == ""] <- NA
moos.stream.two.2021$DateTime[moos.stream.two.2021$DateTime == ""] <- NA
# Set as AK time
poke.stream.one.2021$DateTime <- mdy_hms(poke.stream.one.2021$DateTime, tz = "America/Anchorage")
poke.stream.two.2021$DateTime <- mdy_hms(poke.stream.two.2021$DateTime, tz = "America/Anchorage")
strt.stream.one.2021$DateTime <- mdy_hms(strt.stream.one.2021$DateTime, tz = "America/Anchorage")
strt.stream.two.2021$DateTime <- mdy_hms(strt.stream.two.2021$DateTime, tz = "America/Anchorage")
vaul.stream.one.2021$DateTime <- mdy_hms(vaul.stream.one.2021$DateTime, tz = "America/Anchorage")
frch.stream.one.2021$DateTime <- mdy_hms(frch.stream.one.2021$DateTime, tz = "America/Anchorage")
frch.stream.two.2021$DateTime <- mdy_hms(frch.stream.two.2021$DateTime, tz = "America/Anchorage")
moos.stream.one.2021$DateTime <- mdy_hms(moos.stream.one.2021$DateTime, tz = "America/Anchorage")
moos.stream.two.2021$DateTime <- mdy_hms(moos.stream.two.2021$DateTime, tz = "America/Anchorage")
# Observed discharge
# Import data from google drive #
discharge.2021.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQopx6zhl3WLbG0qJfOtpbsVd6h6M0dOR78mmKMc35CDKnZa88dnrw_kDQg8eklmVV9548gnhJ3XNNo/pub?output=csv"
QSummary.2021 <- read_csv(url(discharge.2021.url))
QSummary.2021$Time[QSummary.2021$Time == ""] <- NA
QSummary.2021$MeasuredQ_Ls[QSummary.2021$MeasuredQ_Ls == " "] <- NA
### Format Time ###
QSummary.2021$Date <- mdy(QSummary.2021$Date)
QSummary.2021$DateTime <- as.POSIXct(paste(QSummary.2021$Date, QSummary.2021$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
QSummary.2021$DateTime <- lubridate::round_date(QSummary.2021$DateTime, "15 minutes")
moos.stream.one.2021 %>% ggplot(aes(DateTime, WaterLevel)) + geom_point()
#moos.stream.one.2021.b <- moos.stream.one.2021
#moos.stream.one.2021 <- moos.stream.one.2021.b
moos.stream.one.2021 <- moos.stream.one.2021 %>% subset(moos.stream.one.2021$DateTime <= "2021-09-28 13:00") # cleaning data that is before September 28th due to decommission
# Not visited 9/23
#moos.stream.one.2021[c(29908:30000), 4] <- NA
# Shift jump when site visited on 8/11
moos.stream.one.2021 <- moos.stream.one.2021 %>% mutate(across(c(WaterLevel), ~ifelse(DateTime > "2021-08-11 14:10:00", WaterLevel + 0.11, .)))
moos.stream.one.2021[c(17577:17582), 4] <- NA
moos.stream.one.2021 %>% filter(DateTime > "2021-08-09" & DateTime < "2021-08-12") %>%
ggplot(aes(DateTime, WaterLevel)) + geom_point()
moos.stream.two.2021 %>% #filter(DateTime > "2021-09-22") %>%
ggplot(aes(DateTime, WaterLevel)) + geom_point()
moos.stream.two.2021 <- moos.stream.two.2021 %>% subset(moos.stream.two.2021$DateTime <= "2021-09-28 13:00") # cleaning data that is before September 28th due to decommission
# Site was not visited on 9/23
#moos.stream.two.2021[c(29900:30000), 4] <- NA
# Shift jump when site visited on 8/11
moos.stream.two.2021 <- moos.stream.two.2021 %>% mutate(across(c(WaterLevel), ~ifelse(DateTime > "2021-08-11 14:10:00", WaterLevel + 0.1, .)))
moos.stream.two.2021 <- moos.stream.two.2021 %>% mutate(across(c(WaterLevel), ~ifelse(DateTime > "2021-08-10" & DateTime < "2021-08-12" & WaterLevel < 165.9, NA, .)))
moos.stream.two.2021 %>% filter(DateTime > "2021-06-20") %>%
ggplot(aes(DateTime, WaterLevel)) + geom_point()
# Add any missing time steps
DateTimeFill <- data.frame(DateTime = seq(ymd_hm("2021-05-20 00:00", tz = "America/Anchorage"),ymd_hm("2021-09-28 13:00", tz = "America/Anchorage"), by = '15 mins'))
moos.stream.one.2021 <- full_join(moos.stream.one.2021, DateTimeFill)
moos.stream.one.2021 <- moos.stream.one.2021[order(moos.stream.one.2021$DateTime),]
moos.stream.one.2021 <- na_kalman(moos.stream.one.2021, maxgap = 10)
moos.stream.two.2021 <- full_join(moos.stream.two.2021, DateTimeFill)
moos.stream.two.2021 <- moos.stream.two.2021[order(moos.stream.two.2021$DateTime),]
moos.stream.two.2021 <- na_kalman(moos.stream.two.2021, maxgap = 10)
moos.pt.2021 <- rbind(moos.stream.one.2021, moos.stream.two.2021)
write.csv(moos.pt.2021, here("PT_data/2021/MOOS/moos.pt.2021.csv"), row.names = FALSE)
### Filter MOOS ###
QSummary.MO.2021 <- QSummary.2021 %>% filter(Site =="MOOS")
### Filter Stuart ###
moos.stream.one.2021$Site <- "MOOS"
moos.stream.one.2021.dt <- setDT(moos.stream.one.2021) %>% filter(!WaterLevel %in% NA)
QSummary.MO.2021.dt <- setDT(QSummary.MO.2021)
Moos1comb.2021 <- moos.stream.one.2021.dt[QSummary.MO.2021.dt, on = "DateTime", roll = 'nearest'] %>% dplyr::select(DateTime, WaterLevel, MeasuredQ_Ls, Method, Date)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
### Filter MOOS ###
QSummary.MO.2021.1 <- QSummary.MO.2021 %>% filter(MeasuredQ_Ls < 1200)
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021.1)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
### Filter MOOS ###
QSummary.MO.2021.1 <- QSummary.MO.2021 %>% filter(MeasuredQ_Ls < 1200 | Method == "ADCP")
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021.1)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
QSummary.MO.2021 %>% ggplot(aes(DateTime, MeasuredQ_Ls)) + geom_point()
QSummary.MO.2021 %>% ggplot(aes(DateTime, MeasuredQ_Ls, color = Method)) + geom_point()
### Filter Stuart ###
moos.stream.one.2021$Site <- "MOOS"
moos.stream.one.2021.dt <- setDT(moos.stream.one.2021) %>% filter(!WaterLevel %in% NA)
QSummary.MO.2021.dt <- setDT(QSummary.MO.2021)
Moos1comb.2021 <- moos.stream.one.2021.dt[QSummary.MO.2021.dt, on = "DateTime", roll = 'nearest'] %>% dplyr::select(DateTime, WaterLevel, MeasuredQ_Ls, Method, Date)
View(moos.stream.one.2021.b)
### Filter MOOS ###
QSummary.MO.2021 <- QSummary.2021 %>% filter(Site =="MOOS")
QSummary.MO.2021 %>% ggplot(aes(DateTime, MeasuredQ_Ls, color = Method)) + geom_point()
### Filter MOOS ###
QSummary.MO.2021 <- QSummary.2021 %>% filter(Site =="MOOS")
QSummary.MO.2021 %>% ggplot(aes(DateTime, MeasuredQ_Ls, color = Method)) + geom_point()
### Filter Stuart ###
moos.stream.one.2021$Site <- "MOOS"
moos.stream.one.2021.dt <- setDT(moos.stream.one.2021) %>% filter(!WaterLevel %in% NA)
QSummary.MO.2021.dt <- setDT(QSummary.MO.2021) %>% filter(DateTime > "2021-06-29")
Moos1comb.2021 <- moos.stream.one.2021.dt[QSummary.MO.2021.dt, on = "DateTime", roll = 'nearest'] %>% dplyr::select(DateTime, WaterLevel, MeasuredQ_Ls, Method, Date)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
### Filter MOOS ###
QSummary.MO.2021.1 <- QSummary.MO.2021 %>% filter(MeasuredQ_Ls < 1200 | Method == "ADCP")
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021.1)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
moos.stream.two.2021$Site <- "MOOS"
Moos2comb.2021 <- full_join(moos.stream.two.2021, QSummary.MO.2021)
MOOS2.lm.2021 <- lm(Moos2comb.2021$MeasuredQ_Ls ~ Moos2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos2 all measured Q")
moos.stream.two.2021$Site <- "MOOS"
Moos2comb.2021 <- full_join(moos.stream.two.2021, QSummary.MO.2021.1)
MOOS2.lm.2021 <- lm(Moos2comb.2021$MeasuredQ_Ls ~ Moos2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos2 all measured Q")
### Filter MOOS ###
QSummary.MO.2021.1 <- QSummary.MO.2021 %>% filter(MeasuredQ_Ls < 1200)
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021.1)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
### Filter MOOS ###
QSummary.MO.2021.1 <- QSummary.MO.2021 %>% filter(MeasuredQ_Ls < 1000)
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021.1)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
### Filter MOOS ###
QSummary.MO.2021.1 <- QSummary.MO.2021 #%>% filter(MeasuredQ_Ls < 1000)
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021.1)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
### Filter MOOS ###
QSummary.MO.2021.1 <- QSummary.MO.2021 %>% filter(MeasuredQ_Ls < 1300)
Moos1comb.2021 <- full_join(moos.stream.one.2021, QSummary.MO.2021.1)
MOOS1.lm.2021 <- lm(Moos1comb.2021$MeasuredQ_Ls ~ Moos1comb.2021$WaterLevel)
moos.formula <- y ~ x
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos1comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = moos.formula) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos1 all measured Q")
moos.stream.two.2021$Site <- "MOOS"
Moos2comb.2021 <- full_join(moos.stream.two.2021, QSummary.MO.2021)
MOOS2.lm.2021 <- lm(Moos2comb.2021$MeasuredQ_Ls ~ Moos2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos2 all measured Q")
moos.stream.two.2021$Site <- "MOOS"
Moos2comb.2021 <- full_join(moos.stream.two.2021, QSummary.MO.2021.1)
MOOS2.lm.2021 <- lm(Moos2comb.2021$MeasuredQ_Ls ~ Moos2comb.2021$WaterLevel)
ggplot(aes(x = WaterLevel, y = MeasuredQ_Ls), data = Moos2comb.2021) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = moos.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Moos2 all measured Q")
Moos1comb.2021$pred.moos1.Q <- coef(MOOS1.lm.2021)[2] * Moos1comb.2021$WaterLevel+ coef(MOOS1.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Moose1 predicted all measured Q") +
#scale_shape_discrete(name = "Method", labels = c("ADCP", "Wading Rod", "Salt Dilution")) +
xlab("Date") +
ylab("Discharge (L/s)")
Moos2comb.2021$pred.moos2.Q <- coef(MOOS2.lm.2021)[2] * Moos2comb.2021$WaterLevel+ coef(MOOS2.lm.2021)[1]
ggplot(aes(x = DateTime, y = pred.moos2.Q), data = Moos2comb.2021) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Moose 2 Predicted Q") +
scale_shape_discrete(name = "Method", labels = c("ADCP", "Wading Rod", "Salt Dilution")) +
xlab("") +
ylab("Discharge(L/s)")
moos.final.discharge.2021 <- full_join(Moos1comb.2021, Moos2comb.2021, by = "DateTime")
moos.final.discharge.2021$MeanDischarge <- rowMeans(moos.final.discharge.2021[,c("pred.moos1.Q", 'pred.moos2.Q')], na.rm = TRUE) # taking the average of the two PTs
moos.final.discharge.2021 <- moos.final.discharge.2021 %>% dplyr::select(Site.x, DateTime, pred.moos1.Q, pred.moos2.Q, MeanDischarge) # remove unnecesary columns
# Moose1 (light blue) and Moose2 (dark blue) with observed Q.
ggplot(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021) +
geom_line(aes(x = DateTime, y = pred.moos1.Q), data = Moos1comb.2021, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.moos2.Q), data = Moos2comb.2021,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = moos.final.discharge.2021, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = MeasuredQ_Ls), size=2) +
theme_classic() +
ylim(0, 4000) +
ggtitle("Moose1(light) & Moose2(dark) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
moos.final.discharge.2021_final <- moos.final.discharge.2021 %>% dplyr::select(Site.x, DateTime, MeanDischarge)
moos.final.discharge.2021_final$Site.x <- "MOOS"
names(moos.final.discharge.2021_final) <- c("Site", "DateTime", "Q")
# Round Q to 15 minute interval
moos.final.discharge.2021_final$DateTime <- lubridate::round_date(moos.final.discharge.2021_final$DateTime, "15 minutes")
moos.final.discharge.2021_final <- moos.final.discharge.2021_final %>% group_by(Site, DateTime) %>% summarise(Q = mean(Q, na.rm = TRUE))
# Fill in gaps
moos.final.discharge.2021_final <- moos.final.discharge.2021_final[order(moos.final.discharge.2021_final$DateTime),]
moos.final.discharge.2021_final <- na_kalman(moos.final.discharge.2021_final, maxgap = 10)
write.csv(moos.final.discharge.2021_final, here("Predicted_Discharge/2021/MOOS/MOOS.Q.csv"), row.names = FALSE)
