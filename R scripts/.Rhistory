geom_line(aes(x = DateTime, y = MeanDischarge),color="red", size=1.25, alpha = 0.75)+
geom_point(aes(x = DateTime, y = Q_Ls), data = French1comb.2019, size=2) +
theme_classic() +
ggtitle("Frecnh1(light) French2(dark) & MeanDischarge (red) predicted and measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
frch.final.discharge.2019.final <- frch.final.discharge.2019[,-c(3,4)]
names(frch.final.discharge.2019.final) <- c("Site", "DateTime", "Q")
frch.final.discharge.2019.final$Site <- rep("FRCH", length(frch.final.discharge.2019.final$DateTime))
DateTimeFill <- data.frame(DateTime = seq(ymd_hm("
2019-04-29 14:15", tz = "America/Anchorage"),ymd_hm("2019-10-10 9:15", tz = "America/Anchorage"), by = '15 mins'))
frch.final.discharge.2019 <- full_join(frch.final.discharge.2019, DateTimeFill)
frch.final.discharge.2019 <- frch.final.discharge.2019[order(frch.final.discharge.2019$DateTime),]
frch.final.discharge.2019 <- na_kalman(frch.final.discharge.2019, maxgap = 10)
frch.final.discharge.2019.final$Site <- rep("FRCH", length(frch.final.discharge.2019.final$DateTime))
write.csv(frch.final.discharge.2019.final, here("Predicted_Discharge/2019/FRCH/FRCH.Q.csv"), row.names = FALSE)
#plot(POKE_RainGauge_2019$inst_rainfall_mm ~ POKE_RainGauge_2019$DateTime, type="h",
#     xlim = as.POSIXct(c("2019-05-10 14:45:00","2019-10-18 10:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
poke.stream.one.2019.b <- poke.stream.one.2019
plot(poke.stream.one.2019$DateTime, poke.stream.one.2019$AbsPTDepth, type = 'l')
poke.stream.one.2019 <- poke.stream.one.2019[-c(15015:15439), ] # remove out of water points - PT removed on the 14th
poke.stream.one.2019[c(3359:3365, 5959:5967, 6517:6530, 7296:7300), 4] <- NA  # remove vertical bars...set to NA
poke.stream.one.2019 <- poke.stream.one.2019[-c(10406:11611), ] # remove beaver dam
# Shift jump at start of August
poke.stream.one.2019 <- poke.stream.one.2019 %>% mutate(across(c(AbsPTDepth), ~ifelse(DateTime <= "2019-08-02 20:15:00", AbsPTDepth + 0.135,.)))
poke.stream.one.2019 <- na_kalman(poke.stream.one.2019, maxgap = 10)
#plot(POKE_RainGauge_2019$inst_rainfall_mm ~ POKE_RainGauge_2019$DateTime, type="h",
#     xlim = as.POSIXct(c("2019-05-10 14:45:00","2019-10-18 10:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
poke.stream.one.2019 %>% #filter(DateTime > "2019-08-01" & DateTime < "2019-08-05") %>%
ggplot(aes(DateTime, AbsPTDepth)) + geom_point()
#plot(POKE_RainGauge_2019$inst_rainfall_mm ~ POKE_RainGauge_2019$DateTime, type="h",
#     xlim = as.POSIXct(c("2019-05-10 14:45:00","2019-10-18 10:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(poke.stream.two.2019$DateTime, poke.stream.two.2019$AbsPTDepth, type = 'l')
poke.stream.two.2019 <- poke.stream.two.2019[-c(9738:11227, 14634:15058), ] # remove out of water points - PT removed on the 14th and the beaver dam
poke.stream.two.2019[c(4, 2978:2983, 5578:5587,6137:6150, 6913:6920), 4] <- NA  # remove vertical bars...set to NA
poke.stream.two.2019 <- na_kalman(poke.stream.two.2019, maxgap = 10)
#plot(POKE_RainGauge_2019$inst_rainfall_mm ~ POKE_RainGauge_2019$DateTime, type="h",
#     xlim = as.POSIXct(c("2019-05-10 14:45:00","2019-10-18 10:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(poke.stream.two.2019$DateTime, poke.stream.two.2019$AbsPTDepth)
poke.pt.2019 <- rbind(poke.stream.one.2019, poke.stream.two.2019)
poke.pt.2019.final <- poke.pt.2019[,c(1,4,5)]
write.csv(poke.pt.2019.final, here("PT_data/2019/POKE/poke.pt.2019.csv"), row.names = FALSE)
ggplot(poke.pt.2019.final, aes(x = DateTime, y = AbsPTDepth, color = Site)) +
geom_point()
QSummary.PO.2019 <- QSummary.2019 %>% filter(Site =="Poker") %>% drop_na(Q_Ls)
QSummary.PO.2019$Site <- "POKE"
poke.stream.one.2019$Site <- "POKE"
Poker1comb.2019 <- full_join(poke.stream.one.2019, QSummary.PO.2019)
Poker1.lm.2019 <- lm(Poker1comb.2019$Q_Ls ~ Poker1comb.2019$AbsPTDepth)
summary(Poker1.lm.2019)
poke.formula <- y ~ x
ggplot(aes(x = AbsPTDepth, y = Q_Ls), data = Poker1comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = poke.formula) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(0, 0.6) +
theme_classic() +
ggtitle("Poker1 all measured Q")
Poker1comb.2019$pred.poke1.Q <- coef(Poker1.lm.2019)[2] * Poker1comb.2019$AbsPTDepth+ coef(Poker1.lm.2019)[1]
ggplot(aes(x = DateTime, y = pred.poke1.Q), data=Poker1comb.2019) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Poker") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylab("Discharge (L/s)") +
ylim(0, 1500) +
scale_x_datetime(limits = as_datetime(c("2019-05-15", "2019-10-10")))
poke.stream.two.2019$Site <- "POKE"
Poker2comb.2019 <- full_join(poke.stream.two.2019, QSummary.PO.2019)
Poker2.lm.2019 <- lm(Poker2comb.2019$Q_Ls ~ Poker2comb.2019$AbsPTDepth)
summary(Poker2.lm.2019)
ggplot(aes(x= AbsPTDepth, y = Q_Ls), data = Poker2comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = poke.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(0.3,0.6) +
theme_classic() +
ggtitle("Poker2 all measured Q")
Poker2comb.2019$pred.poke2.Q <- coef(Poker2.lm.2019)[2] * Poker2comb.2019$AbsPTDepth+ coef(Poker2.lm.2019)[1]
ggplot(aes(x = DateTime, y = pred.poke2.Q), data=Poker2comb.2019) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Poker2 predicted all measured Q") +
xlab("Date") +
ylab("Predicted Discharge") +
ylim(0, 2000)
poke.final.discharge.2019 <- left_join(Poker1comb.2019, Poker2comb.2019, by = c("DateTime"))
poke.final.discharge.2019$MeanDischarge <- rowMeans(poke.final.discharge.2019[,c(13,25)], na.rm = TRUE)
poke.final.discharge.2019 <- poke.final.discharge.2019[,-c(3:12, 14:24)] # cleaning empty columns
names(poke.final.discharge.2019) <- c("Site", "DateTime", "PT1", "PT2", "MeanDischarge")
poke.final.discharge.2019$DateTime <- as.POSIXct(paste(poke.final.discharge.2019$DateTime), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
poke.final.discharge.2019$DateTime <- lubridate::round_date(poke.final.discharge.2019$DateTime, "15 minutes")
poke.final.discharge.2019 <- poke.final.discharge.2019
ggplot(aes(x = DateTime, y = pred.poke1.Q), data = Poker1comb.2019) +
geom_line(aes(x = DateTime, y = pred.poke1.Q), data = Poker1comb.2019, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.poke2.Q), data = Poker2comb.2019,color="#1F78B4", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = poke.final.discharge.2019, color = "red", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = Q_Ls), size=2) +
theme_classic() +
ylim(0, 3000) +
ggtitle("Poker1(light) Poker2(dark) & MeanDischarge (red) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
poke.final.discharge.2019.final <- poke.final.discharge.2019[,c(2,5)]
names(poke.final.discharge.2019.final) <- c("DateTime", "Q")
# Fill missing data
DateTimeFill <- data.frame(DateTime = seq(ymd_hm("
2019-05-10 14:45", tz = "America/Anchorage"),ymd_hm("2019-10-14 00:00", tz = "America/Anchorage"), by = '15 mins'))
poke.final.discharge.2019.final <- full_join(poke.final.discharge.2019.final, DateTimeFill)
poke.final.discharge.2019.final <- poke.final.discharge.2019.final[order(poke.final.discharge.2019.final$DateTime),]
poke.final.discharge.2019.final <- na_kalman(poke.final.discharge.2019.final, maxgap = 10)
poke.final.discharge.2019.final$Site <- "POKE"
ggplot(poke.final.discharge.2019.final, aes(x = DateTime, y = Q)) +
geom_point()
write.csv(poke.final.discharge.2019.final, here("Predicted_Discharge/2019/POKE/POKE.Q.csv"), row.names = FALSE)
#plot(VAUL_RainGauge_2019$inst_rainfall_mm ~ VAUL_RainGauge_2019$DateTime, type="h",
#     xlim = as.POSIXct(c("2019-06-07 17:45:00","2019-10-18 10:15:00"), tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(vaul.stream.one.2019$DateTime, vaul.stream.one.2019$AbsPTDepth)
vaul.stream.one.2019 <- vaul.stream.one.2019 %>% subset(vaul.stream.one.2019$DateTime > "2019-06-07" &
vaul.stream.one.2019$DateTime < "2019-10-11 14:00") # removed on 10/18
#plot(VAUL_RainGauge_2019$inst_rainfall_mm ~ VAUL_RainGauge_2019$DateTime, #type="h",
#     xlim = as.POSIXct(c("2019-06-07 17:45:00","2019-10-18 10:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(vaul.stream.one.2019$DateTime, vaul.stream.one.2019$AbsPTDepth, type = 'l')
#
write.csv(vaul.stream.one.2019, here("PT_data/2019/VAUL/vaul.pt.2019.csv"), row.names = FALSE)
QSummary.VA.2019 <- QSummary.2019 %>% filter(Site =="Vault") %>% drop_na(Q_Ls)
vaul.stream.one.2019$Site <- "VAUL"
QSummary.VA.2019$Site <- "VAUL"
Vaultcomb.2019 <- full_join(vaul.stream.one.2019, QSummary.VA.2019)
Vault.lm.2019<- lm(Vaultcomb.2019$Q_Ls ~ 0 + Vaultcomb.2019$AbsPTDepth)
summary(Vault.lm.2019)
vaul.formula <- y ~ x
ggplot(aes(x = AbsPTDepth, y = Q_Ls), data = Vaultcomb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(0.4, 0.65) +
theme_classic() +
ggtitle("Vault all measured Q")  # I think this worked
QSummary.VA.2019.2 <- QSummary.2019 %>% filter(Site =="Vault") %>%
filter(Q_Ls > 16,
Q_Ls != "22.27",
Method != "Flowmeter" | Q_Ls > 100
) %>%
drop_na(Q_Ls)
QSummary.VA.2019.2$Site <- "VAUL"
Vaultcomb.2019.2 <- full_join(vaul.stream.one.2019, QSummary.VA.2019.2)
vaul.formula <- y ~ x
ggplot(aes(x = AbsPTDepth, y = Q_Ls), data = Vaultcomb.2019.2) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE, formula = vaul.formula) +
stat_poly_eq(formula = vaul.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
xlim(0.4, 0.65) +
theme_classic() +
ggtitle("Vault measured Q") #+ ylim(0,300) + xlim(0,0.66)
Vault.lm.2019.2 <- lm(Vaultcomb.2019.2$Q_Ls ~ Vaultcomb.2019.2$AbsPTDepth)
summary(Vault.lm.2019.2)
Vaultcomb.2019.2$pred.vault.Q <- coef(Vault.lm.2019.2)[1] + coef(Vault.lm.2019.2)[2]* Vaultcomb.2019.2$AbsPTDepth
ggplot(aes(x = DateTime, y = pred.vault.Q), data = Vaultcomb.2019.2) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(data = Vaultcomb.2019, aes(x = DateTime, y = Q_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Vault") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylab("Discharge (L/s)") +
scale_x_datetime(limits = as_datetime(c("2019-05-15", "2019-10-10")))# + ylim(0,100)
vaul.final.discharge.2019.final <- Vaultcomb.2019.2[,-c(2:4,6:12)]
names(vaul.final.discharge.2019.final) <- c("Site", "DateTime", "Q")
vaul.final.discharge.2019.final$Site <- rep("VAUL", length(vaul.final.discharge.2019.final$DateTime))
DateTimeFill <- data.frame(DateTime = seq(ymd_hm("
2019-06-07 17:45", tz = "America/Anchorage"),ymd_hm("2019-10-11 13:45", tz = "America/Anchorage"), by = '15 mins'))
vaul.final.discharge.2019.final <- full_join(vaul.final.discharge.2019.final, DateTimeFill)
vaul.final.discharge.2019.final <- vaul.final.discharge.2019.final[order(vaul.final.discharge.2019.final$DateTime),]
vaul.final.discharge.2019.final <- na_kalman(vaul.final.discharge.2019.final, maxgap = 10)
write.csv(vaul.final.discharge.2019.final, here("Predicted_Discharge/2019/VAUL/VAUL.Q.csv"), row.names = FALSE)
ggplot(vaul.final.discharge.2019.final, aes(x = DateTime, y = Q)) +
geom_point()
#plot(FRCH_RainGauge_2019$inst_rainfall_mm ~ FRCH_RainGauge_2019$Datetime, #type="h",
#     xlim = as.POSIXct(c("2019-05-21 14:45:00","2019-08-23 10:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(strt.stream.one.2019$DateTime, strt.stream.one.2019$AbsPTDepth, type = 'p')
#plot(FRCH_RainGauge_2019$inst_rainfall_mm ~ FRCH_RainGauge_2019$Datetime, #type="h",
#     xlim = as.POSIXct(c("2019-05-21 14:45:00","2019-10-16 10:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(strt.stream.two.2019$DateTime, strt.stream.two.2019$AbsPTDepth, type = 'p')
strt.stream.two.2019 <- strt.stream.two.2019 %>% subset(strt.stream.two.2019$DateTime > "2019-05-21" & strt.stream.two.2019$DateTime < "2019-10-13") # removed on 10/16 but erroneous values starting after the 14th....maybe ice...maybe beaver dam?
#plot(FRCH_RainGauge_2019$inst_rainfall_mm ~ FRCH_RainGauge_2019$Datetime, #type="h",
#     xlim = as.POSIXct(c("2019-05-21 14:45:00","2019-10-16 10:15:00"), #tz="America/Anchorage"),
#     ylim = c(20,0),
#     axes=F, xlab="", ylab="")
#par(new = T)
plot(strt.stream.two.2019$DateTime, strt.stream.two.2019$AbsPTDepth, type = 'l')
#
strt.pt.final <- rbind(strt.stream.one.2019, strt.stream.two.2019)
write.csv(strt.pt.final, here("PT_data/2019/STRT/strt.pt.2019.csv"), row.names = FALSE)
QSummary.ST.2019 <- QSummary.2019 %>% filter(Site =="Stuart") %>% drop_na(Q_Ls)
QSummary.ST.2019$Site<- "STRT"
strt.stream.one.2019$Site<- "STRT"
Stuart1comb.2019 <- full_join(strt.stream.one.2019, QSummary.ST.2019)
Stuart1.lm.2019 <- lm(Stuart1comb.2019$Q_Ls ~ Stuart1comb.2019$AbsPTDepth)
summary(Stuart1.lm.2019)
strt.formula <- y ~ x
ggplot(aes(x = AbsPTDepth, y = Q_Ls), data = Stuart1comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart1 all measured Q")
strt.stream.two.2019$Site<- "STRT"
Stuart2comb.2019 <- full_join(strt.stream.two.2019, QSummary.ST.2019)
Stuart2.lm.2019 <- lm(Stuart2comb.2019$Q_Ls ~ Stuart2comb.2019$AbsPTDepth)
summary(Stuart2.lm.2019)
strt.formula <- y ~ x
ggplot(aes(x = AbsPTDepth, y = Q_Ls), data = Stuart2comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
QSummary.ST.2019.1 <- QSummary.ST.2019[-10, ]
Stuart3comb.2019 <- full_join(strt.stream.two.2019, QSummary.ST.2019.1)
Stuart3.lm.2019 <- lm(Stuart3comb.2019$Q_Ls ~ Stuart3comb.2019$AbsPTDepth)
summary(Stuart3.lm.2019)
strt.formula <- y ~ x
ggplot(aes(x = AbsPTDepth, y = Q_Ls), data = Stuart3comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
QSummary.ST.2019.2 <- QSummary.ST.2019[-c(10,11), ]
Stuart4comb.2019 <- full_join(strt.stream.two.2019, QSummary.ST.2019.2)
Stuart4.lm.2019 <- lm(Stuart4comb.2019$Q_Ls ~ Stuart4comb.2019$AbsPTDepth)
summary(Stuart4.lm.2019)
strt.formula <- y ~ x
ggplot(aes(x = AbsPTDepth, y = Q_Ls), data = Stuart4comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
Stuart1comb.2019$pred.stuart1.Q <- coef(Stuart1.lm.2019)[2] * Stuart1comb.2019$AbsPTDepth+ coef(Stuart1.lm.2019)[1]
ggplot(aes(x = DateTime, y = pred.stuart1.Q), data=Stuart1comb.2019) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylab("Discharge (L/s)") +
ylim(0, 10000) +
scale_x_datetime(limits = as_datetime(c("2019-05-15", "2019-10-10")))
Stuart4comb.2019$pred.stuart2.Q <- coef(Stuart4.lm.2019)[2] * Stuart4comb.2019$AbsPTDepth+ coef(Stuart4.lm.2019)[1]
ggplot(aes(x = DateTime, y = pred.stuart2.Q), data=Stuart4comb.2019) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylab("Discharge (L/s)") +
ylim(0, 8000) +
scale_x_datetime(limits = as_datetime(c("2019-05-15", "2019-10-10")))
strt.final.discharge.2019 <- left_join(Stuart1comb.2019, Stuart4comb.2019, by = c("DateTime"))
strt.final.discharge.2019$MeanDischarge <- rowMeans(strt.final.discharge.2019[,c(13,25)], na.rm = TRUE)
strt.final.discharge.2019 <- strt.final.discharge.2019[,-c(3:12, 14:24)] # cleaning empty columns
strt.final.discharge.2019 <- na.omit(strt.final.discharge.2019) # Remove data points that after removal
names(strt.final.discharge.2019) <- c("Site", "DateTime", "PT1", "PT2", "MeanDischarge")
strt.final.discharge.2019$DateTime <- as.POSIXct(paste(strt.final.discharge.2019$DateTime), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
strt.final.discharge.2019$DateTime <- lubridate::round_date(strt.final.discharge.2019$DateTime, "15 minutes")
ggplot(aes(x = DateTime, y = pred.stuart2.Q), data = Stuart2comb.2019) +
geom_line(aes(x = DateTime, y = pred.stuart1.Q), data = Stuart1comb.2019, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.stuart2.Q), data = Stuart4comb.2019,color="red", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = MeanDischarge), data = strt.final.discharge.2019, color = "#1F78B4", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = Q_Ls), size=2) +
theme_classic() +
ylim(0, 10000) +
ggtitle("Stuart1(light) Stuart2(dark) & MeanDischarge (red) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
Stuart4comb.2019_final <- Stuart4comb.2019[,-c(2:4,6:12)] %>% filter(DateTime > "2019-05-10")
names(Stuart4comb.2019_final) <- c("Site", "DateTime", "Q")
Stuart4comb.2019_final$Site <- rep("STRT", length(Stuart4comb.2019_final$DateTime))
DateTimeFill <- data.frame(DateTime = seq(ymd_hm("
2019-05-21 14:45", tz = "America/Anchorage"),ymd_hm("2019-10-12 23:45", tz = "America/Anchorage"), by = '15 mins'))
Stuart4comb.2019_final <- full_join(Stuart4comb.2019_final, DateTimeFill)
Stuart4comb.2019_final <- Stuart4comb.2019_final[order(Stuart4comb.2019_final$DateTime),]
Stuart4comb.2019_final <- na_kalman(Stuart4comb.2019_final, maxgap = 10)
write.csv(Stuart4comb.2019_final, here("Predicted_Discharge/2019/STRT/STRT.Q.csv"), row.names = FALSE)
ggplot(Stuart4comb.2019_final, aes(x = DateTime, y = Q)) +
geom_point()
strt.stream.2019.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vT7i2IieWGfIR7FDRn81uHIE4ctuSDto5X1jzuQxFpoMtzQ1kvWTS9-nmorSZl_Hfi8bQbH5s-dZndB/pub?output=csv"
strt.stream.2019.url.two <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQKjPsarj51rVOteLN-hLqK4ffHGMpRgPaSrpkM2tJulszNGNsTQz4awZ09zhu2n_8zN0J8oM7LHIft/pub?output=csv"
strt.stream.one.2019 <- read.csv(url(strt.stream.2019.url), skip = 1)
strt.stream.two.2019 <- read.csv(url(strt.stream.2019.url.two), skip = 1)
strt.stream.one.2019 <- strt.stream.one.2019[,2:4]
strt.stream.two.2019 <- strt.stream.two.2019[,2:4]
names(strt.stream.one.2019) <- c("DateTime", "WaterPressure", "AirPressure")
names(strt.stream.two.2019) <- c("DateTime", "WaterPressure", "AirPressure")
strt.stream.one.2019$DateTime[strt.stream.one.2019$DateTime == ""] <- NA
strt.stream.two.2019$DateTime[strt.stream.two.2019$DateTime == ""] <- NA
strt.stream.one.2019$DateTime <- mdy_hms(strt.stream.one.2019$DateTime, tz = "America/Anchorage")
strt.stream.two.2019$DateTime <- mdy_hms(strt.stream.two.2019$DateTime, tz = "America/Anchorage")
# Calculate difference
strt.stream.one.2019$difference <- strt.stream.one.2019$WaterPressure - strt.stream.one.2019$AirPressure
strt.stream.two.2019$difference <- strt.stream.two.2019$WaterPressure - strt.stream.two.2019$AirPressure
# Read in French air pressure to check
moos.atmo.2019.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQbCFL8FuUylAIIHsNuyJnbQvOzv3zxG8OC_-On_2wilQM_0OhHrifp9AWy_l4dvwEAmEVFXtGNlJt7/pub?output=csv"
moos.atmo.2019 <- read.csv(url(moos.atmo.2019.url), skip = 1)
moos.atmo.2019 <- moos.atmo.2019[,2:3]
names(moos.atmo.2019) <- c("DateTime", "AirPressure")
moos.atmo.2019$DateTime[moos.atmo.2019$DateTime == ""] <- NA
moos.atmo.2019$DateTime <- mdy_hms(moos.atmo.2019$DateTime, tz = "America/Anchorage")
plot(strt.stream.one.2019$DateTime, strt.stream.one.2019$WaterPressure, type = 'p')
strt.stream.two.2019 %>% ggplot(aes(DateTime, AirPressure)) + geom_point() + geom_point(data = moos.atmo.2019, aes(DateTime, AirPressure))
strt.stream.two.2019 %>% ggplot(aes(DateTime, WaterPressure)) + geom_point()
plot(strt.stream.two.2019$DateTime, strt.stream.two.2019$WaterPressure, type = 'p')
strt.stream.two.2019 <- strt.stream.two.2019 %>% subset(strt.stream.two.2019$DateTime > "2019-05-21" & strt.stream.two.2019$DateTime < "2019-10-13") # removed on 10/16 but erroneous values starting after the 14th....maybe ice...maybe beaver dam?
plot(strt.stream.two.2019$DateTime, strt.stream.two.2019$WaterPressure, type = 'l')
#
# Use Moose air pressure
strt.stream.two.2019 <- full_join(strt.stream.two.2019[,1:2], moos.atmo.2019)
strt.stream.two.2019$difference <- strt.stream.two.2019$WaterPressure - strt.stream.two.2019$AirPressure
strt.stream.two.2019 %>% ggplot(aes(DateTime, difference)) + geom_point()
strt.pt.final <- rbind(strt.stream.one.2019, strt.stream.two.2019)
write.csv(strt.pt.final, here("PT_data/2019/STRT/strt.pt.2019.csv"), row.names = FALSE)
strt.stream.two.2019$Site<- "STRT"
Stuart2comb.2019 <- full_join(strt.stream.two.2019, QSummary.ST.2019)
Stuart2.lm.2019 <- lm(Stuart2comb.2019$Q_Ls ~ Stuart2comb.2019$difference)
summary(Stuart2.lm.2019)
strt.formula <- y ~ x
ggplot(aes(x = difference, y = Q_Ls), data = Stuart2comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
QSummary.ST.2019.1 <- QSummary.ST.2019[-10, ]
Stuart3comb.2019 <- full_join(strt.stream.two.2019, QSummary.ST.2019.1)
Stuart3.lm.2019 <- lm(Stuart3comb.2019$Q_Ls ~ Stuart3comb.2019$difference)
summary(Stuart3.lm.2019)
strt.formula <- y ~ x
ggplot(aes(x = difference, y = Q_Ls), data = Stuart3comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
QSummary.ST.2019.2 <- QSummary.ST.2019[-c(10,11), ]
Stuart4comb.2019 <- full_join(strt.stream.two.2019, QSummary.ST.2019.2)
Stuart4.lm.2019 <- lm(Stuart4comb.2019$Q_Ls ~ Stuart4comb.2019$difference)
summary(Stuart4.lm.2019)
strt.formula <- y ~ x
ggplot(aes(x = difference, y = Q_Ls), data = Stuart4comb.2019) +
geom_point(aes(color = Method), size = 3) +
geom_smooth(method = "lm", se=FALSE) +
stat_poly_eq(formula = strt.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
theme_classic() +
ggtitle("Stuart2 all measured Q")
coef(Stuart4.lm.2019)
Stuart4comb.2019$pred.stuart2.Q <- coef(Stuart4.lm.2019)[2] * Stuart4comb.2019$difference+ coef(Stuart4.lm.2019)[1]
ggplot(aes(x = DateTime, y = pred.stuart2.Q), data=Stuart4comb.2019) +
geom_line(color="#A6CEE3", size=1.25) +
geom_point(aes(x = DateTime, y = Q_Ls, shape = Method), size=3) +
theme_classic() +
ggtitle("Stuart") +
scale_shape_discrete(name = "Method", labels = c("Wading Rod", "Salt Dilution", "")) +
xlab("") +
ylab("Discharge (L/s)") +
scale_x_datetime(limits = as_datetime(c("2019-05-15", "2019-10-10")))
strt.final.discharge.2019 <- Stuart4comb.2019
names(strt.final.discharge.2019) <- c("Site", "DateTime", "Q")
strt.final.discharge.2019$DateTime <- as.POSIXct(paste(strt.final.discharge.2019$DateTime), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
strt.final.discharge.2019$DateTime <- lubridate::round_date(strt.final.discharge.2019$DateTime, "15 minutes")
ggplot(aes(x = DateTime, y = pred.stuart2.Q), data = Stuart2comb.2019) +
geom_line(aes(x = DateTime, y = pred.stuart1.Q), data = Stuart1comb.2019, color="#A6CEE3", size=1.25) +
geom_line(aes(x = DateTime, y = pred.stuart2.Q), data = Stuart4comb.2019,color="red", size=1.25, alpha = 0.75) +
geom_line(aes(x = DateTime, y = Q), data = strt.final.discharge.2019, color = "#1F78B4", size = 1.25, alpha = 0.25) +
geom_point(aes(x = DateTime, y = Q_Ls), size=2) +
theme_classic() +
ylim(0, 10000) +
ggtitle("Stuart1(light) Stuart2(dark) & MeanDischarge (red) predicted all measured Q") +
ylab("Predicted discharge L/s") +
xlab("Time")
DateTimeFill <- data.frame(DateTime = seq(ymd_hm("
2019-05-21 14:45", tz = "America/Anchorage"),ymd_hm("2019-10-12 23:45", tz = "America/Anchorage"), by = '15 mins'))
strt.final.discharge.2019 <- full_join(strt.final.discharge.2019, DateTimeFill)
names(strt.final.discharge.2019)
strt.final.discharge.2019 <- full_join(strt.final.discharge.2019[,1:3], DateTimeFill)
strt.final.discharge.2019 <- strt.final.discharge.2019[order(strt.final.discharge.2019$DateTime),]
strt.final.discharge.2019 <- na_kalman(strt.final.discharge.2019, maxgap = 10)
write.csv(strt.final.discharge.2019, here("Predicted_Discharge/2019/STRT/STRT.Q.csv"), row.names = FALSE)
ggplot(Stuart4comb.2019_final, aes(x = DateTime, y = Q)) +
geom_point()
Q_2019 <- rbind(frch.final.discharge.2019.final, vaul.final.discharge.2019.final,
poke.final.discharge.2019.final, Stuart4comb.2019_final,
Moose2comb.2019_final)
# Round all sites to 15 minute intervals
Q_2019$DateTime <- lubridate::round_date(Q_2019$DateTime, "15 minutes")
Q_2019 <- Q_2019 %>% group_by(Site, DateTime) %>% summarise(Q = mean(Q))
# Fill gaps in data
DateTimeFill <- data.frame(DateTime = seq(ymd_hm("2019-04-29 14:15", tz = "America/Anchorage"),ymd_hm("2019-10-22 09:15", tz = "America/Anchorage"), by = '15 mins'))
DateTimeFill_all <- data.frame(Site = c(rep("FRCH", length(DateTimeFill$DateTime)),rep("MOOS", length(DateTimeFill$DateTime)),rep("POKE", length(DateTimeFill$DateTime)),rep("STRT", length(DateTimeFill$DateTime)),rep("VAUL", length(DateTimeFill$DateTime))), DateTime = rep(DateTimeFill$DateTime, 5))
Q_2019 <- full_join(Q_2019, DateTimeFill_all)
Q_2019 <- Q_2019[order(Q_2019$DateTime),]
# Fill in gaps up to 15 x 10 minutes
Q_2019 <- Q_2019 %>% group_by(Site) %>% summarise(Q = na_kalman(Q, maxgap = 10),
DateTime = DateTime) %>% filter(DateTime < "2019-10-23")
write.csv(Q_2019, here("Predicted_Discharge/2019/Q_2019.csv"), row.names = FALSE)
Q_2019$Day = format(as.POSIXct(Q_2019$DateTime, format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
Q_2019$Day = as.POSIXct(Q_2019$Day, "%Y-%m-%d", tz = "America/Anchorage")
Q.daily.2019 <- Q_2019 %>% group_by(Site, Day) %>% summarise(Q = mean(Q))
write.csv(Q.daily.2019, here("Predicted_Discharge/2019/Q.daily.2019.csv"), row.names = FALSE)
Q_2019 %>% ggplot(aes(DateTime, Q, color = Site)) + geom_point(size = 0.25)
Q_2019 %>% ggplot(aes(DateTime, Q, color = Site)) + geom_point(size = 0.25)
# Check time step intervals
Q_2019_check <- Q_2019 %>% group_by(Site) %>% summarise(diff = DateTime - lag(DateTime),
DateTime = DateTime)
unique(Q_2019_check$diff)
Q_2019_check %>% ggplot(aes(DateTime, diff, color = Site)) + geom_point()# + ylim(0,60)
Q_2019_check %>% ggplot(aes(DateTime, diff, color = Site)) + geom_point()# + ylim(0,60)
# Check length of consecutive NA's
Q_2019_check_NA <- Q_2019 %>% mutate(Yes_NA = ifelse(Q %in% NA, "Y", "N"))
Q_2019_check_NA %>%
ggplot(aes(DateTime, Yes_NA)) + geom_point(size = 0.5) + facet_wrap(~Site)
# Fill in gaps up to 15 x 10 minutes
Q_2019 <- Q_2019 %>% group_by(Site) %>% summarise(Q = na_kalman(Q, maxgap = 15),
DateTime = DateTime) %>% filter(DateTime < "2019-10-23")
# Fill in gaps up to 15 x 10 minutes
Q_2019 <- Q_2019 %>% group_by(Site) %>% summarise(Q = na_kalman(Q, maxgap = 15),
DateTime = DateTime) %>% filter(DateTime < "2019-10-23")
write.csv(Q_2019, here("Predicted_Discharge/2019/Q_2019.csv"), row.names = FALSE)
write.csv(Q_2019, here("Predicted_Discharge/2019/Q_2019.csv"), row.names = FALSE)
Q_2019$Day = format(as.POSIXct(Q_2019$DateTime, format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
Q_2019$Day = as.POSIXct(Q_2019$Day, "%Y-%m-%d", tz = "America/Anchorage")
Q.daily.2019 <- Q_2019 %>% group_by(Site, Day) %>% summarise(Q = mean(Q))
write.csv(Q.daily.2019, here("Predicted_Discharge/2019/Q.daily.2019.csv"), row.names = FALSE)
write.csv(Q.daily.2019, here("Predicted_Discharge/2019/Q.daily.2019.csv"), row.names = FALSE)
Q_2019 %>% ggplot(aes(DateTime, Q, color = Site)) + geom_point(size = 0.25)
Q_2019 %>% ggplot(aes(DateTime, Q, color = Site)) + geom_point(size = 0.25)
# Check time step intervals
Q_2019_check <- Q_2019 %>% group_by(Site) %>% summarise(diff = DateTime - lag(DateTime),
DateTime = DateTime)
# Check time step intervals
Q_2019_check <- Q_2019 %>% group_by(Site) %>% summarise(diff = DateTime - lag(DateTime),
DateTime = DateTime)
unique(Q_2019_check$diff)
unique(Q_2019_check$diff)
Q_2019_check %>% ggplot(aes(DateTime, diff, color = Site)) + geom_point()# + ylim(0,60)
Q_2019_check %>% ggplot(aes(DateTime, diff, color = Site)) + geom_point()# + ylim(0,60)
# Check length of consecutive NA's
Q_2019_check_NA <- Q_2019 %>% mutate(Yes_NA = ifelse(Q %in% NA, "Y", "N"))
Q.daily.2019 <- Q_2019 %>% group_by(Site, Day) %>% summarise(Q = mean(Q))
write.csv(Q.daily.2019, here("Predicted_Discharge/2019/Q.daily.2019.csv"), row.names = FALSE)
Q_2019 %>% ggplot(aes(DateTime, Q, color = Site)) + geom_point(size = 0.25)
# Check time step intervals
Q_2019_check <- Q_2019 %>% group_by(Site) %>% summarise(diff = DateTime - lag(DateTime),
DateTime = DateTime)
unique(Q_2019_check$diff)
Q_2019_check %>% ggplot(aes(DateTime, diff, color = Site)) + geom_point()# + ylim(0,60)
# Check length of consecutive NA's
Q_2019_check_NA <- Q_2019 %>% mutate(Yes_NA = ifelse(Q %in% NA, "Y", "N"))
Q_2019_check_NA %>%
ggplot(aes(DateTime, Yes_NA)) + geom_point(size = 0.5) + facet_wrap(~Site)
