library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(birk)
library(imputeTS)
library(neonUtilities)
# Import data from google drive #
discharge.2022 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQR6HHHDpnxc6DmNHfdNLR9-dgDHR5Imt0Ve4_t2DzIF18_8D3O2da5zcWQzJUSoFQfaetPZDeXZ610/pub?gid=0&single=true&output=csv"
QSummary.2022 <- read.csv(url(discharge.2022))
### Format Time ###
QSummary.2022$Date <- mdy(QSummary.2022$Date)
QSummary.2022$DateTimeAK <- as.POSIXct(paste(QSummary.2022$Date, QSummary.2022$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
QSummary.2022$DateTimeAK <- lubridate::round_date(QSummary.2022$DateTimeAK, "5 minutes")
### ALL Sites ###
QSummary.2022 %>% ggplot() +
geom_point(aes(x=DateTimeAK, y=MeasuredQ_Ls, color=Site, shape=Method), size=3) +
theme_classic() +
scale_color_manual(values=c("#FF7F00","#A6761D", "#6A3D9A", "#66C2A5", "#E7298A")) + ggtitle("ALL SITES")
eielson.atmo.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQjJbkVdOseFUsTFMDXaHRoKkPiFt6Uvc-9R3tkFZxKFjqSmPPgZzexdbhezBr_qYgGUdVN6ywYR28c/pub?output=csv"
eielson.atmo.2022 <- read.csv(url(eielson.atmo.2022.url), skip = 6)
eielson.atmo.2022 <- eielson.atmo.2022[-1,]
names(eielson.atmo.2022) <- c("Site", "DateTimeAK", "sea_level_pressure", "AirPressure")
eielson.atmo.2022$DateTimeAK <- mdy_hm(eielson.atmo.2022$DateTimeAK)
# Correct time zone
eielson.atmo.2022$DateTimeAK <- eielson.atmo.2022$DateTimeAK - 28800
eielson.atmo.2022$DateTimeAK <- force_tz(eielson.atmo.2022$DateTimeAK, tz = "America/Anchorage")
eielson.atmo.2022$DateTimeAK <- lubridate::round_date(eielson.atmo.2022$DateTimeAK, "5 minutes")
eielson.atmo.2022$AirPressure <- as.numeric(eielson.atmo.2022$AirPressure)
eielson.atmo.2022$sea_level_pressure <- as.numeric(eielson.atmo.2022$sea_level_pressure)
# Convert to kPa
eielson.atmo.2022$sea_level_pressure_kpa <- eielson.atmo.2022$sea_level_pressure*3.38639
#NEON_air <-loadByProduct(dpID = "DP1.00004.001", site=c("BONA"),startdate="2022-05", enddate="2022-11")
NEON_bp <- NEON_air$BP_1min %>% filter(staPresFinalQF != 1)
#write.csv(NEON_bp, "NEON_bp_2022.csv")
#NEON_url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRxjgfFQQidmFmjWZX1_7wo3g1tbrpyImxGz3jqGczte0wGOdIi8265-2Jbj2qXn7e9N1ymti3rQEnU/pub?output=csv"
#NEON_bp <- read.csv(url(NEON_url))
NEON_bp$DateTimeAK <- as.POSIXct(NEON_bp$startDateTime, format = "%Y-%m-%d %H:%M", tz = "GMT")
attr(NEON_bp$DateTimeAK, "tzone") <- "America/Anchorage"
## Round time to 5 minutes and take average
NEON_bp$DateTimeAK <- lubridate::round_date(NEON_bp$DateTimeAK, "5 minutes")
NEON_bp <- NEON_bp %>% group_by(DateTimeAK) %>% summarise(bp_sea = mean(corPres, na.rm = TRUE))
# Fill gaps in data
DateTimeFill <- data.frame(DateTimeAK = seq(ymd_hm("
2022-05-01 00:00", tz = "America/Anchorage"),ymd_hm("2022-10-15 00:00", tz = "America/Anchorage"), by = '15 mins'))
NEON_bp <- full_join(NEON_bp, DateTimeFill)
NEON_bp <- NEON_bp[order(NEON_bp$DateTimeAK),]
NEON_bp$bp_sea <- na_kalman(NEON_bp$bp_sea, maxgap = 10)
NEON_bp %>% #filter(DateTimeAK > "2022-06-01" & DateTimeAK < "2022-07-01") %>%
ggplot(aes(DateTimeAK, bp_sea)) + geom_point()
# Compare NEON and Eielson sea level pressure
NEON_bp %>% ggplot(aes(DateTimeAK, bp_sea)) + geom_point() + geom_point(data = eielson.atmo.2022, aes(DateTimeAK, sea_level_pressure_kpa), color = "red")
# They are similar, so I will fill in the gaps in NEON with Eielson
# Fill in gaps
Air_combo <- left_join(NEON_bp, eielson.atmo.2022)
Air_combo <- Air_combo %>% mutate(bp_combo = ifelse(bp_sea %in% NA, sea_level_pressure_kpa, bp_sea))
Air_combo$bp_combo <- na_kalman(Air_combo$bp_combo, type = "level")
Air_combo %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(DateTimeAK, bp_combo)) + geom_point(size = 0.5) + geom_point(aes(DateTimeAK, bp_sea), color = 2, size = 0.2) + geom_point(aes(DateTimeAK, sea_level_pressure_kpa), color = 3, size = 0.2)# units are kilopascals, corrected to sea level
# Convert to elevation using formula from "Barometric Pressure conversion for DO calibration.xls"
# MOOS elevation is 574 feet
# POKE 760.96 ft
# STRT 820 ft
# FRCH 601 ft
# VAUL 688.8 ft
# MOOS
Air_combo$AirPressureCorrectedMOOS <- (Air_combo$bp_combo*7.50062 - (2.5*574/100)) / 7.50062
# POKE
Air_combo$AirPressureCorrectedPOKE <- (Air_combo$bp_combo*7.50062 - (2.5*760.96/100)) / 7.50062
# STRT
Air_combo$AirPressureCorrectedSTRT <- (Air_combo$bp_combo*7.50062 - (2.5*820/100)) / 7.50062
# FRCH
Air_combo$AirPressureCorrectedFRCH <- (Air_combo$bp_combo*7.50062 - (2.5*601/100)) / 7.50062
# VAUL
Air_combo$AirPressureCorrectedVAUL <- (Air_combo$bp_combo*7.50062 - (2.5*688.8/100)) / 7.50062
# Load in water pressure data
# urls
moos.atmo.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ7QMNWjVX1R43qflIW7lVqkj7wRHouhgQhWK76kfR8zK-UZg9bFSm92ccPy8T0luhFHKwsLNQQjA56/pub?output=csv"
moos.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRo04g32Yr3DsZbXQiw6VTPfgWuWq5csh1VhxfMy3IT3U6OkJOGvTlofjXwFfugiaRVJ34pPnOUZ3te/pub?output=csv"
moos.stream.two.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQRXmAtoP_7I2RYEDZrdCT1LDyD8W3Thjst549srxdlWDMUYUyBjiGABd8pgtZE9Efa8b4Vgb3qtyoc/pub?output=csv"
# load in data
moos.atmo.2022 <- read.csv(url(moos.atmo.2022.url), skip = 1)
moos.stream.one.2022 <- read.csv(url(moos.stream.one.2022.url), skip = 1)
moos.stream.two.2022 <- read.csv(url(moos.stream.two.2022.url), skip = 1)
# cleaning df to be able to interpret and merge
moos.atmo.2022 <- moos.atmo.2022[, -c(5:11)] # removing columns that aren't date/abs pressure and temp
moos.stream.one.2022 <- moos.stream.one.2022[, -c(5:13)] # removing columns that aren't date/abs pressure and temp
moos.stream.two.2022 <- moos.stream.two.2022[, -c(5:13)] # removing columns that arent date/abs pressure and temp
# changing datetime to AK time
moos.atmo.2022$DateTimeAK <- mdy_hms(moos.atmo.2022$Date.Time..GMT.08.00)
moos.stream.one.2022$DateTimeAK <- mdy_hms(moos.stream.one.2022$Date.Time..GMT.08.00)
moos.stream.two.2022$DateTimeAK <- mdy_hms(moos.stream.two.2022$Date.Time..GMT.08.00)
moos.stream.two.2022$DateTimeAK <- force_tz(moos.stream.two.2022$DateTimeAK, tzone = "America/Anchorage")
moos.stream.one.2022$DateTimeAK <- force_tz(moos.stream.one.2022$DateTimeAK, tzone = "America/Anchorage")
moos.atmo.2022$DateTimeAK <- force_tz(moos.atmo.2022$DateTimeAK, tzone = "America/Anchorage")
# round date to 5 minute intervals
#moos.atmo.2022$DateTimeAK <- lubridate::round_date(moos.atmo.2022$DateTimeAK, "5 minutes")
moos.stream.one.2022$DateTimeAK <- lubridate::round_date(moos.stream.one.2022$DateTimeAK, "5 minutes")
moos.stream.two.2022$DateTimeAK <- lubridate::round_date(moos.stream.two.2022$DateTimeAK, "5 minutes")
# changing the names
# cleaning off original datetime
moos.atmo.2022 <- moos.atmo.2022[, -c(2)] # removing columns that aren't date/abs pressure and temp
moos.stream.one.2022 <- moos.stream.one.2022[, -c(2)] # removing columns that aren't date/abs pressure and temp
moos.stream.two.2022 <- moos.stream.two.2022[, -c(2)] # removing columns that arent
names(moos.atmo.2022) <- c("Site", "AirPressure", "TempC", "DateTimeAK")
names(moos.stream.one.2022) <- c("Site", "WaterPressure", "TempC", "DateTimeAK")
names(moos.stream.two.2022) <- c("Site", "WaterPressure", "TempC",  "DateTimeAK")
moos.atmo.2022 %>% filter(AirPressure > 96.8) %>% ggplot(aes(x = DateTimeAK, y = AirPressure)) +
geom_point()
# cleaning erroneous points
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK <= "2022-06-01" & AirPressure < 97.5, NA, .))) %>% filter(AirPressure > 96.5)
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-05-15" & DateTimeAK <= "2022-05-20" & AirPressure < 98.2, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-05-18" & DateTimeAK <= "2022-05-20" & AirPressure < 99.1, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-08-10" & DateTimeAK <= "2022-08-12" & AirPressure > 99.5, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-08-10" & DateTimeAK <= "2022-08-12" & AirPressure < 99, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-08-10" & AirPressure < 96.8, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>% filter(DateTimeAK <= "2022-10-10 12:30:00") %>% mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-10-3"& DateTimeAK <= "2022-10-8" & AirPressure < 98.5, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>% mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-10-2"& DateTimeAK <= "2022-10-3" & AirPressure < 98, NA, .))) %>% filter(DateTimeAK < "2022-08-01" | DateTimeAK > "2022-08-02 19:00")
moos.atmo.2022 %>% filter(DateTimeAK <= "2022-08-10" & DateTimeAK >= "2022-08-03") %>%
ggplot(aes(x = DateTimeAK, y = AirPressure)) +
geom_point()
moos.atmo.2022 %>% ggplot(aes(x = DateTimeAK, y = AirPressure)) +
geom_point()
moos.atmo.2022.compare <- moos.atmo.2022
atmo.pt.2022.1 <- left_join(Air_combo, moos.atmo.2022.compare, by = "DateTimeAK")
atmo.pt.2022.1 %>% #filter(DateTimeAK <= "2022-08-10" & DateTimeAK >= "2022-08-02") %>%
ggplot(aes(x = DateTimeAK, y = AirPressureCorrectedMOOS)) +
geom_point(aes(x=DateTimeAK, y=AirPressureCorrectedMOOS), color="#A6CEE3") +
geom_point(aes(x=DateTimeAK, y=AirPressure.x), color="#FF7F00") +
geom_point(aes(x=DateTimeAK, y=AirPressure.y), color = "red") +
theme_classic() +
ggtitle("Eielson Corrected(blue) & Eielson uncorrected(orange) & MOOS(red) Atmo P")
# Compare with NEON converted air pressure.
moos.atmo.2022 %>% filter(AirPressure > 96.8) %>% ggplot(aes(x = DateTimeAK, y = AirPressure)) +
geom_point() + geom_point(data = Air_combo, aes(DateTimeAK, AirPressureCorrectedMOOS), color = "red", size = 0.5)
ggplot(moos.stream.two.2022, aes(x = DateTimeAK, y = WaterPressure)) +
geom_point() +
theme_classic()
ggplot(moos.stream.one.2022, aes(x = DateTimeAK, y = WaterPressure)) +
geom_point() +
theme_classic()
# adjusting/cleaning moos.stream.two
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK <= "2022-05-25" & WaterPressure < 103, NA, .))) # PT wasnt placed into the stream until 5/25?
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-06-01" & DateTimeAK <= "2022-07-01" & WaterPressure < 101, NA, .))) %>% filter(WaterPressure > 90)
# shifting the step change
# 6/7 @ 14:05 we cleaned the PVC housing so we are shifting the previous data up to match after the cleaning
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK <= "2022-06-07 14:05:00", WaterPressure + 3.573, .)))
# shifting the step change
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-08-31 13:55:00" & DateTimeAK <= "2022-09-28 14:00:00", WaterPressure - 10.918, .)))
## Bring the last chunk up half way?
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK > "2022-08-01", WaterPressure + 3.897/2, .)))
#moos.stream.two.2022[17192, 2] - moos.stream.two.2022[17211, 2] # 3.897
moos.stream.two.2022 <- moos.stream.two.2022 %>% filter(DateTimeAK < "2022-07-31" | DateTimeAK > "2022-08-02 16:45:00") %>% filter(DateTimeAK <= "2022-10-08 08:15:00")
# shifting small step change
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-06-12 04:50", WaterPressure - 0.365, .)))
#moos.stream.two.2022[5240, 2] - moos.stream.two.2022[5241, 2] # 0.365
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-06-12" & DateTimeAK < "2022-06-13" & WaterPressure < 104.2, NA, .)))
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-09-28" & DateTimeAK <= "2022-09-28 17:00" & WaterPressure > 100.8, NA, .)))
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-09-28" & DateTimeAK <= "2022-09-28 17:00" & WaterPressure < 100.2, NA, .))) %>% filter(WaterPressure > 90)
moos.stream.two.2022 %>%  #filter(DateTimeAK > "2022-09-28 12:00") %>%
#filter(DateTimeAK > "2022-09-25" & DateTimeAK < "2022-10-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure)) +
geom_point() +
theme_classic()
# Shift
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK <= "2022-07-28", WaterPressure - 1.6, .))) # 1.6 was a guess
moos.stream.two.2022 %>%  #filter(DateTimeAK > "2022-09-28 12:00") %>%
#filter(DateTimeAK > "2022-09-28 12:00:00" & DateTimeAK < "2022-09-29") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure)) +
geom_point() +
theme_classic()
## Combine water and air pressure
# Final water pressure
moos.final.pressure.2022 <- moos.stream.two.2022
moos.final.pressure.2022 <- moos.final.pressure.2022[,-c(3,5,7)] # removing columns that are unnecessary. I only need both water pressures and mean pressure with a DateTime column
#eielson.atmo.2022 <- eielson.atmo.2022[,-c(1,3)] # i dont need site, Temp and sea_level_pressure column
#eielson.atmo.2022.compare <-  eielson.atmo.2022.compare[ , -which(names(eielson.atmo.2022.compare) %in% c("Site","TempC", #"sea_level_pressure", "AirPressure", "mmHG", #"mmHGcorrectedMOOS","mmHGcorrectedPOKE","mmHGcorrectedSTRT","mmHGcorrectedFRCH","mmHGcorrectedVAUL"))] # removing columns I do not need
# Fill gap during end of July for our pressure data with Eielson data
#atmo.pt.2022.1$moos.combo <- ifelse(atmo.pt.2022.1$DateTimeAK > "2022-07-23 17:15:00" & atmo.pt.2022.1$DateTimeAK < "2022-08-02 #17:00:00", atmo.pt.2022.1$AirPressureCorrectedMOOS, atmo.pt.2022.1$AirPressure.y)
# Remove outliers
#atmo.pt.2022.1 <- atmo.pt.2022.1 %>%
#  mutate(across(c(moos.combo),
#                ~ifelse(DateTimeAK >= "2022-09-10" & DateTimeAK <= "2022-09-11" & moos.combo < 98.5, NA, .)))
#atmo.pt.2022.1 %>% filter(DateTimeAK > "2022-05-15") %>%
#filter(DateTimeAK > "2022-06-01" & DateTimeAK < "2022-09-01") %>%
# ggplot(aes(DateTimeAK, AirPressureCorrectedMOOS)) + geom_point() +
#  geom_point(aes(DateTimeAK, AirPressure.x))#+ geom_vline(xintercept = as.POSIXct("2022-09-10")) + geom_vline(xintercept = as.POSIXct("2022-09-12"))
#join the atmospheric and water pressure together
MOOS.2022 <- full_join(moos.final.pressure.2022, Air_combo, by = "DateTimeAK") %>% dplyr::select("DateTimeAK", "AirPressureCorrectedMOOS", "WaterPressure")
MOOS.2022 <- MOOS.2022[order(MOOS.2022$DateTimeAK),]
MOOS.2022 <- na_kalman(MOOS.2022, maxgap = 10)
# Water pressure - atmospheric pressure
MOOS.2022$difference <- MOOS.2022$WaterPressure - MOOS.2022$AirPressureCorrectedMOOS
MOOS.2022 <- MOOS.2022 %>% group_by(DateTimeAK) %>% summarise( difference = mean( difference))
any(duplicated(MOOS.2022$DateTimeAK))
MOOS.2022$diff <- MOOS.2022$DateTimeAK - lag(MOOS.2022$DateTimeAK)
unique(MOOS.2022$diff)
MOOS.2022 %>% ggplot(aes(DateTimeAK, diff)) + geom_point()
MOOS.2022 %>% filter(diff < 10) %>% ggplot(aes(DateTimeAK, diff)) + geom_point()
MOOS.2022 %>% filter(diff < 20) %>% ggplot(aes(DateTimeAK, diff)) + geom_point()
# Plot difference
MOOS.2022 %>% #filter(DateTimeAK > "2022-10-08") %>%
filter(DateTimeAK > "2022-09-25") %>%
ggplot(aes(DateTimeAK, difference)) + geom_point() +
ggtitle("MOOS difference")
# Clean the late season points
MOOS.2022 <- MOOS.2022 %>%
mutate(across(c(difference),
~ifelse(DateTimeAK >= "2022-10-08" & difference > 1.45, NA, .)))
MOOS.2022$difference <- na_kalman(MOOS.2022$difference, maxgap = 10)
# Plot difference
MOOS.2022 %>% filter(DateTimeAK > "2022-05-20") %>%
ggplot(aes(DateTimeAK, difference)) + geom_point() +
ggtitle("MOOS difference")
# Load packages #
library(tidyverse)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(readr)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(birk)
library(imputeTS)
library(neonUtilities)
# Import data from google drive #
discharge.2022 <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQR6HHHDpnxc6DmNHfdNLR9-dgDHR5Imt0Ve4_t2DzIF18_8D3O2da5zcWQzJUSoFQfaetPZDeXZ610/pub?gid=0&single=true&output=csv"
QSummary.2022 <- read.csv(url(discharge.2022))
### Format Time ###
QSummary.2022$Date <- mdy(QSummary.2022$Date)
QSummary.2022$DateTimeAK <- as.POSIXct(paste(QSummary.2022$Date, QSummary.2022$Time), format = "%Y-%m-%d %H:%M", tz = "America/Anchorage")
QSummary.2022$DateTimeAK <- lubridate::round_date(QSummary.2022$DateTimeAK, "5 minutes")
### ALL Sites ###
QSummary.2022 %>% ggplot() +
geom_point(aes(x=DateTimeAK, y=MeasuredQ_Ls, color=Site, shape=Method), size=3) +
theme_classic() +
scale_color_manual(values=c("#FF7F00","#A6761D", "#6A3D9A", "#66C2A5", "#E7298A")) + ggtitle("ALL SITES")
eielson.atmo.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQjJbkVdOseFUsTFMDXaHRoKkPiFt6Uvc-9R3tkFZxKFjqSmPPgZzexdbhezBr_qYgGUdVN6ywYR28c/pub?output=csv"
eielson.atmo.2022 <- read.csv(url(eielson.atmo.2022.url), skip = 6)
eielson.atmo.2022 <- eielson.atmo.2022[-1,]
names(eielson.atmo.2022) <- c("Site", "DateTimeAK", "sea_level_pressure", "AirPressure")
eielson.atmo.2022$DateTimeAK <- mdy_hm(eielson.atmo.2022$DateTimeAK)
# Correct time zone
eielson.atmo.2022$DateTimeAK <- eielson.atmo.2022$DateTimeAK - 28800
eielson.atmo.2022$DateTimeAK <- force_tz(eielson.atmo.2022$DateTimeAK, tz = "America/Anchorage")
eielson.atmo.2022$DateTimeAK <- lubridate::round_date(eielson.atmo.2022$DateTimeAK, "5 minutes")
eielson.atmo.2022$AirPressure <- as.numeric(eielson.atmo.2022$AirPressure)
eielson.atmo.2022$sea_level_pressure <- as.numeric(eielson.atmo.2022$sea_level_pressure)
# Convert to kPa
eielson.atmo.2022$sea_level_pressure_kpa <- eielson.atmo.2022$sea_level_pressure*3.38639
#NEON_air <-loadByProduct(dpID = "DP1.00004.001", site=c("BONA"),startdate="2022-05", enddate="2022-11")
NEON_bp <- NEON_air$BP_1min %>% filter(staPresFinalQF != 1)
#write.csv(NEON_bp, "NEON_bp_2022.csv")
#NEON_url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRxjgfFQQidmFmjWZX1_7wo3g1tbrpyImxGz3jqGczte0wGOdIi8265-2Jbj2qXn7e9N1ymti3rQEnU/pub?output=csv"
#NEON_bp <- read.csv(url(NEON_url))
NEON_bp$DateTimeAK <- as.POSIXct(NEON_bp$startDateTime, format = "%Y-%m-%d %H:%M", tz = "GMT")
attr(NEON_bp$DateTimeAK, "tzone") <- "America/Anchorage"
## Round time to 5 minutes and take average
NEON_bp$DateTimeAK <- lubridate::round_date(NEON_bp$DateTimeAK, "5 minutes")
NEON_bp <- NEON_bp %>% group_by(DateTimeAK) %>% summarise(bp_sea = mean(corPres, na.rm = TRUE))
# Fill gaps in data
DateTimeFill <- data.frame(DateTimeAK = seq(ymd_hm("
2022-05-01 00:00", tz = "America/Anchorage"),ymd_hm("2022-10-15 00:00", tz = "America/Anchorage"), by = '15 mins'))
NEON_bp <- full_join(NEON_bp, DateTimeFill)
NEON_bp <- NEON_bp[order(NEON_bp$DateTimeAK),]
NEON_bp$bp_sea <- na_kalman(NEON_bp$bp_sea, maxgap = 10)
NEON_bp %>% #filter(DateTimeAK > "2022-06-01" & DateTimeAK < "2022-07-01") %>%
ggplot(aes(DateTimeAK, bp_sea)) + geom_point()
# Compare NEON and Eielson sea level pressure
NEON_bp %>% ggplot(aes(DateTimeAK, bp_sea)) + geom_point() + geom_point(data = eielson.atmo.2022, aes(DateTimeAK, sea_level_pressure_kpa), color = "red")
# They are similar, so I will fill in the gaps in NEON with Eielson
# Fill in gaps
Air_combo <- left_join(NEON_bp, eielson.atmo.2022)
Air_combo <- Air_combo %>% mutate(bp_combo = ifelse(bp_sea %in% NA, sea_level_pressure_kpa, bp_sea))
Air_combo$bp_combo <- na_kalman(Air_combo$bp_combo, type = "level")
Air_combo %>% filter(DateTimeAK > "2022-07-01" & DateTimeAK < "2022-08-01") %>%
ggplot(aes(DateTimeAK, bp_combo)) + geom_point(size = 0.5) + geom_point(aes(DateTimeAK, bp_sea), color = 2, size = 0.2) + geom_point(aes(DateTimeAK, sea_level_pressure_kpa), color = 3, size = 0.2)# units are kilopascals, corrected to sea level
# Convert to elevation using formula from "Barometric Pressure conversion for DO calibration.xls"
# MOOS elevation is 574 feet
# POKE 760.96 ft
# STRT 820 ft
# FRCH 601 ft
# VAUL 688.8 ft
# MOOS
Air_combo$AirPressureCorrectedMOOS <- (Air_combo$bp_combo*7.50062 - (2.5*574/100)) / 7.50062
# POKE
Air_combo$AirPressureCorrectedPOKE <- (Air_combo$bp_combo*7.50062 - (2.5*760.96/100)) / 7.50062
# STRT
Air_combo$AirPressureCorrectedSTRT <- (Air_combo$bp_combo*7.50062 - (2.5*820/100)) / 7.50062
# FRCH
Air_combo$AirPressureCorrectedFRCH <- (Air_combo$bp_combo*7.50062 - (2.5*601/100)) / 7.50062
# VAUL
Air_combo$AirPressureCorrectedVAUL <- (Air_combo$bp_combo*7.50062 - (2.5*688.8/100)) / 7.50062
# Load in water pressure data
# urls
moos.atmo.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ7QMNWjVX1R43qflIW7lVqkj7wRHouhgQhWK76kfR8zK-UZg9bFSm92ccPy8T0luhFHKwsLNQQjA56/pub?output=csv"
moos.stream.one.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vRo04g32Yr3DsZbXQiw6VTPfgWuWq5csh1VhxfMy3IT3U6OkJOGvTlofjXwFfugiaRVJ34pPnOUZ3te/pub?output=csv"
moos.stream.two.2022.url <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vQRXmAtoP_7I2RYEDZrdCT1LDyD8W3Thjst549srxdlWDMUYUyBjiGABd8pgtZE9Efa8b4Vgb3qtyoc/pub?output=csv"
# load in data
moos.atmo.2022 <- read.csv(url(moos.atmo.2022.url), skip = 1)
moos.stream.one.2022 <- read.csv(url(moos.stream.one.2022.url), skip = 1)
moos.stream.two.2022 <- read.csv(url(moos.stream.two.2022.url), skip = 1)
# cleaning df to be able to interpret and merge
moos.atmo.2022 <- moos.atmo.2022[, -c(5:11)] # removing columns that aren't date/abs pressure and temp
moos.stream.one.2022 <- moos.stream.one.2022[, -c(5:13)] # removing columns that aren't date/abs pressure and temp
moos.stream.two.2022 <- moos.stream.two.2022[, -c(5:13)] # removing columns that arent date/abs pressure and temp
# changing datetime to AK time
moos.atmo.2022$DateTimeAK <- mdy_hms(moos.atmo.2022$Date.Time..GMT.08.00)
moos.stream.one.2022$DateTimeAK <- mdy_hms(moos.stream.one.2022$Date.Time..GMT.08.00)
moos.stream.two.2022$DateTimeAK <- mdy_hms(moos.stream.two.2022$Date.Time..GMT.08.00)
moos.stream.two.2022$DateTimeAK <- force_tz(moos.stream.two.2022$DateTimeAK, tzone = "America/Anchorage")
moos.stream.one.2022$DateTimeAK <- force_tz(moos.stream.one.2022$DateTimeAK, tzone = "America/Anchorage")
moos.atmo.2022$DateTimeAK <- force_tz(moos.atmo.2022$DateTimeAK, tzone = "America/Anchorage")
# round date to 5 minute intervals
#moos.atmo.2022$DateTimeAK <- lubridate::round_date(moos.atmo.2022$DateTimeAK, "5 minutes")
moos.stream.one.2022$DateTimeAK <- lubridate::round_date(moos.stream.one.2022$DateTimeAK, "5 minutes")
moos.stream.two.2022$DateTimeAK <- lubridate::round_date(moos.stream.two.2022$DateTimeAK, "5 minutes")
# changing the names
# cleaning off original datetime
moos.atmo.2022 <- moos.atmo.2022[, -c(2)] # removing columns that aren't date/abs pressure and temp
moos.stream.one.2022 <- moos.stream.one.2022[, -c(2)] # removing columns that aren't date/abs pressure and temp
moos.stream.two.2022 <- moos.stream.two.2022[, -c(2)] # removing columns that arent
names(moos.atmo.2022) <- c("Site", "AirPressure", "TempC", "DateTimeAK")
names(moos.stream.one.2022) <- c("Site", "WaterPressure", "TempC", "DateTimeAK")
names(moos.stream.two.2022) <- c("Site", "WaterPressure", "TempC",  "DateTimeAK")
moos.atmo.2022 %>% filter(AirPressure > 96.8) %>% ggplot(aes(x = DateTimeAK, y = AirPressure)) +
geom_point()
# cleaning erroneous points
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK <= "2022-06-01" & AirPressure < 97.5, NA, .))) %>% filter(AirPressure > 96.5)
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-05-15" & DateTimeAK <= "2022-05-20" & AirPressure < 98.2, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-05-18" & DateTimeAK <= "2022-05-20" & AirPressure < 99.1, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-08-10" & DateTimeAK <= "2022-08-12" & AirPressure > 99.5, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-08-10" & DateTimeAK <= "2022-08-12" & AirPressure < 99, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>%
mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-08-10" & AirPressure < 96.8, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>% filter(DateTimeAK <= "2022-10-10 12:30:00") %>% mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-10-3"& DateTimeAK <= "2022-10-8" & AirPressure < 98.5, NA, .)))
moos.atmo.2022 <- moos.atmo.2022 %>% mutate(across(c(AirPressure),
~ifelse(DateTimeAK >= "2022-10-2"& DateTimeAK <= "2022-10-3" & AirPressure < 98, NA, .))) %>% filter(DateTimeAK < "2022-08-01" | DateTimeAK > "2022-08-02 19:00")
moos.atmo.2022 %>% filter(DateTimeAK <= "2022-08-10" & DateTimeAK >= "2022-08-03") %>%
ggplot(aes(x = DateTimeAK, y = AirPressure)) +
geom_point()
moos.atmo.2022 %>% ggplot(aes(x = DateTimeAK, y = AirPressure)) +
geom_point()
moos.atmo.2022.compare <- moos.atmo.2022
atmo.pt.2022.1 <- left_join(Air_combo, moos.atmo.2022.compare, by = "DateTimeAK")
atmo.pt.2022.1 %>% #filter(DateTimeAK <= "2022-08-10" & DateTimeAK >= "2022-08-02") %>%
ggplot(aes(x = DateTimeAK, y = AirPressureCorrectedMOOS)) +
geom_point(aes(x=DateTimeAK, y=AirPressureCorrectedMOOS), color="#A6CEE3") +
geom_point(aes(x=DateTimeAK, y=AirPressure.x), color="#FF7F00") +
geom_point(aes(x=DateTimeAK, y=AirPressure.y), color = "red") +
theme_classic() +
ggtitle("Eielson Corrected(blue) & Eielson uncorrected(orange) & MOOS(red) Atmo P")
# Compare with NEON converted air pressure.
moos.atmo.2022 %>% filter(AirPressure > 96.8) %>% ggplot(aes(x = DateTimeAK, y = AirPressure)) +
geom_point() + geom_point(data = Air_combo, aes(DateTimeAK, AirPressureCorrectedMOOS), color = "red", size = 0.5)
ggplot(moos.stream.two.2022, aes(x = DateTimeAK, y = WaterPressure)) +
geom_point() +
theme_classic()
ggplot(moos.stream.one.2022, aes(x = DateTimeAK, y = WaterPressure)) +
geom_point() +
theme_classic()
# adjusting/cleaning moos.stream.two
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK <= "2022-05-25" & WaterPressure < 103, NA, .))) # PT wasnt placed into the stream until 5/25?
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-06-01" & DateTimeAK <= "2022-07-01" & WaterPressure < 101, NA, .))) %>% filter(WaterPressure > 90)
# shifting the step change
# 6/7 @ 14:05 we cleaned the PVC housing so we are shifting the previous data up to match after the cleaning
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK <= "2022-06-07 14:05:00", WaterPressure + 3.573, .)))
# shifting the step change
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-08-31 13:55:00" & DateTimeAK <= "2022-09-28 14:00:00", WaterPressure - 10.918, .)))
## Bring the last chunk up half way?
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK > "2022-08-01", WaterPressure + 3.897/2, .)))
#moos.stream.two.2022[17192, 2] - moos.stream.two.2022[17211, 2] # 3.897
moos.stream.two.2022 <- moos.stream.two.2022 %>% filter(DateTimeAK < "2022-07-31" | DateTimeAK > "2022-08-02 16:45:00") %>% filter(DateTimeAK <= "2022-10-08 08:15:00")
# shifting small step change
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-06-12 04:50", WaterPressure - 0.365, .)))
#moos.stream.two.2022[5240, 2] - moos.stream.two.2022[5241, 2] # 0.365
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-06-12" & DateTimeAK < "2022-06-13" & WaterPressure < 104.2, NA, .)))
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-09-28" & DateTimeAK <= "2022-09-28 17:00" & WaterPressure > 100.8, NA, .)))
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK >= "2022-09-28" & DateTimeAK <= "2022-09-28 17:00" & WaterPressure < 100.2, NA, .))) %>% filter(WaterPressure > 90)
moos.stream.two.2022 %>%  #filter(DateTimeAK > "2022-09-28 12:00") %>%
#filter(DateTimeAK > "2022-09-25" & DateTimeAK < "2022-10-01") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure)) +
geom_point() +
theme_classic()
# Shift
moos.stream.two.2022 <- moos.stream.two.2022 %>%
mutate(across(c(WaterPressure),
~ifelse(DateTimeAK <= "2022-07-28", WaterPressure - 1.6, .))) # 1.6 was a guess
moos.stream.two.2022 %>%  #filter(DateTimeAK > "2022-09-28 12:00") %>%
#filter(DateTimeAK > "2022-09-28 12:00:00" & DateTimeAK < "2022-09-29") %>%
ggplot(aes(x = DateTimeAK, y = WaterPressure)) +
geom_point() +
theme_classic()
## Combine water and air pressure
# Final water pressure
moos.final.pressure.2022 <- moos.stream.two.2022
moos.final.pressure.2022 <- moos.final.pressure.2022[,-c(3,5,7)] # removing columns that are unnecessary. I only need both water pressures and mean pressure with a DateTime column
#eielson.atmo.2022 <- eielson.atmo.2022[,-c(1,3)] # i dont need site, Temp and sea_level_pressure column
#eielson.atmo.2022.compare <-  eielson.atmo.2022.compare[ , -which(names(eielson.atmo.2022.compare) %in% c("Site","TempC", #"sea_level_pressure", "AirPressure", "mmHG", #"mmHGcorrectedMOOS","mmHGcorrectedPOKE","mmHGcorrectedSTRT","mmHGcorrectedFRCH","mmHGcorrectedVAUL"))] # removing columns I do not need
# Fill gap during end of July for our pressure data with Eielson data
#atmo.pt.2022.1$moos.combo <- ifelse(atmo.pt.2022.1$DateTimeAK > "2022-07-23 17:15:00" & atmo.pt.2022.1$DateTimeAK < "2022-08-02 #17:00:00", atmo.pt.2022.1$AirPressureCorrectedMOOS, atmo.pt.2022.1$AirPressure.y)
# Remove outliers
#atmo.pt.2022.1 <- atmo.pt.2022.1 %>%
#  mutate(across(c(moos.combo),
#                ~ifelse(DateTimeAK >= "2022-09-10" & DateTimeAK <= "2022-09-11" & moos.combo < 98.5, NA, .)))
#atmo.pt.2022.1 %>% filter(DateTimeAK > "2022-05-15") %>%
#filter(DateTimeAK > "2022-06-01" & DateTimeAK < "2022-09-01") %>%
# ggplot(aes(DateTimeAK, AirPressureCorrectedMOOS)) + geom_point() +
#  geom_point(aes(DateTimeAK, AirPressure.x))#+ geom_vline(xintercept = as.POSIXct("2022-09-10")) + geom_vline(xintercept = as.POSIXct("2022-09-12"))
#join the atmospheric and water pressure together
MOOS.2022 <- full_join(moos.final.pressure.2022, Air_combo, by = "DateTimeAK") %>% dplyr::select("DateTimeAK", "AirPressureCorrectedMOOS", "WaterPressure")
# Fill gaps in data
DateTimeFill <- data.frame(DateTimeAK = seq(ymd_hm("2022-05-25 00:00", tz = "America/Anchorage"),ymd_hm("2022-10-08 08:15", tz = "America/Anchorage"), by = '5 mins'))
MOOS.2022 <- full_join(MOOS.2022, DateTimeFill)
MOOS.2022 <- MOOS.2022[order(MOOS.2022$DateTimeAK),]
MOOS.2022 <- na_kalman(MOOS.2022, maxgap = 10)
MOOS.2022 %>% filter(DateTimeAK >= "2022-05-25" & DateTimeAK <= "2022-10-08") %>%
filter(DateTimeAK > "2022-09-01" & DateTimeAK < "2022-09-22") %>%
ggplot(aes(DateTimeAK, WaterPressure)) + geom_point() + geom_point(aes(DateTimeAK, AirPressureCorrectedMOOS)) + #geom_vline (xintercept = as.POSIXct("2022-09-20 20:00:00"))
ggtitle("MOOS air and water pressure")
# Water pressure - atmospheric pressure
MOOS.2022$difference <- MOOS.2022$WaterPressure - MOOS.2022$AirPressureCorrectedMOOS
# Time checks
MOOS.2022 <- MOOS.2022 %>% group_by(DateTimeAK) %>% summarise( difference = mean( difference))
any(duplicated(MOOS.2022$DateTimeAK))
MOOS.2022$diff <- MOOS.2022$DateTimeAK - lag(MOOS.2022$DateTimeAK)
unique(MOOS.2022$diff)
MOOS.2022 %>% #filter(diff < 20) %>%
ggplot(aes(DateTimeAK, diff)) + geom_point()
# Plot difference
MOOS.2022 %>% #filter(DateTimeAK > "2022-10-08") %>%
filter(DateTimeAK > "2022-09-25") %>%
ggplot(aes(DateTimeAK, difference)) + geom_point() +
ggtitle("MOOS difference")
# Clean the late season points
MOOS.2022 <- MOOS.2022 %>%
mutate(across(c(difference),
~ifelse(DateTimeAK >= "2022-10-08" & difference > 1.45, NA, .)))
MOOS.2022$difference <- na_kalman(MOOS.2022$difference, maxgap = 10)
